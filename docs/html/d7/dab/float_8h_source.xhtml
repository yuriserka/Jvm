<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.16"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>JVM 8 SB 2019/2: include/instructions/instruction_set/float.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">JVM 8 SB 2019/2
   </div>
   <div id="projectbrief">projeto que visa fazer uma implementação simples da JVM 8</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.16 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_2843b2c750ff6b39dcfe98bf2554dba0.xhtml">instructions</a></li><li class="navelem"><a class="el" href="../../dir_7ef69e660d75507825e3f78a695283fd.xhtml">instruction_set</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">float.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d7/dab/float_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_FLOAT_H_</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_FLOAT_H_</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/d5a/base_8h.xhtml">instructions/instruction_set/base.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/de6/opcodes_8h.xhtml">instructions/opcodes.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/d66/string_8h.xhtml">utils/string.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../da/d11/namespace_instructions.xhtml">Instructions</a> {</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d3/d59/namespace_instructions_1_1_float.xhtml">   12</a></span>&#160;<span class="keyword">namespace </span>Float {</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">   13</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml#a71ae7fce5c3ebb6a5c241adfff506728">   15</a></span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml#a71ae7fce5c3ebb6a5c241adfff506728">BaseFloat</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a> &amp;tag) : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(tag) {}</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml#a87a409c8649dee995f71fcd95a652032">   17</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml#a87a409c8649dee995f71fcd95a652032">toBytecode</a>(</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  }</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml#a298fcc849b3463aa4a86e543dee6de90">   25</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml#a298fcc849b3463aa4a86e543dee6de90">toBytecode_json</a>(</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;};</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../d5/d05/class_instructions_1_1_float_1_1_to_double.xhtml">   32</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d5/d05/class_instructions_1_1_float_1_1_to_double.xhtml">ToDouble</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../d5/d05/class_instructions_1_1_float_1_1_to_double.xhtml#a154625b99c17742415dcf701391cb6c2">   34</a></span>&#160;  <a class="code" href="../../d5/d05/class_instructions_1_1_float_1_1_to_double.xhtml#a154625b99c17742415dcf701391cb6c2">ToDouble</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a356fcf852a67cc4ec3106cdf798199c3">kF2D</a>) {}</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d5/d05/class_instructions_1_1_float_1_1_to_double.xhtml#a7c39f5dd0e9666f2ddc002fe730fda1a">execute</a>(</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;};</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="../../db/d3f/class_instructions_1_1_float_1_1_to_integer.xhtml">   42</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/d3f/class_instructions_1_1_float_1_1_to_integer.xhtml">ToInteger</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="../../db/d3f/class_instructions_1_1_float_1_1_to_integer.xhtml#a054d9689b67c86b543900e9ae658e2d3">   44</a></span>&#160;  <a class="code" href="../../db/d3f/class_instructions_1_1_float_1_1_to_integer.xhtml#a054d9689b67c86b543900e9ae658e2d3">ToInteger</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a277f77edbe5beefaf0352ec62d99cf0c">kF2I</a>) {}</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../db/d3f/class_instructions_1_1_float_1_1_to_integer.xhtml#a7f2a4c825c64aeaeedf776f79878df1a">execute</a>(</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;};</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="../../d0/dd2/class_instructions_1_1_float_1_1_to_long.xhtml">   52</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/dd2/class_instructions_1_1_float_1_1_to_long.xhtml">ToLong</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="../../d0/dd2/class_instructions_1_1_float_1_1_to_long.xhtml#ace59e21531608f556f14123cf36f5b66">   54</a></span>&#160;  <a class="code" href="../../d0/dd2/class_instructions_1_1_float_1_1_to_long.xhtml#ace59e21531608f556f14123cf36f5b66">ToLong</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a195d29b590de7b9fa048d8b364de30bd">kF2L</a>) {}</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d0/dd2/class_instructions_1_1_float_1_1_to_long.xhtml#a09ca58a77b32ece5cdae094f2a580418">execute</a>(</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;};</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d3/d67/class_instructions_1_1_float_1_1_add.xhtml">   62</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d3/d67/class_instructions_1_1_float_1_1_add.xhtml">Add</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="../../d3/d67/class_instructions_1_1_float_1_1_add.xhtml#afdc870f9efd0f2b8396a7ee4a43a1c10">   64</a></span>&#160;  <a class="code" href="../../d3/d67/class_instructions_1_1_float_1_1_add.xhtml#afdc870f9efd0f2b8396a7ee4a43a1c10">Add</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8aa3533312c29f14b4228b0df665994e">kFADD</a>) {}</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d3/d67/class_instructions_1_1_float_1_1_add.xhtml#ac2254565602e2c8e21757c24cc1d278e">execute</a>(</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;};</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="../../d0/df0/class_instructions_1_1_float_1_1_load_from_array.xhtml">   72</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/df0/class_instructions_1_1_float_1_1_load_from_array.xhtml">LoadFromArray</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="../../d0/df0/class_instructions_1_1_float_1_1_load_from_array.xhtml#a7aa8203e49b995ba0d42fd8dd8dd15a5">   74</a></span>&#160;  <a class="code" href="../../d0/df0/class_instructions_1_1_float_1_1_load_from_array.xhtml#a7aa8203e49b995ba0d42fd8dd8dd15a5">LoadFromArray</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a83f2829a0c815428910e13aa2b7892d4">kFALOAD</a>) {}</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d0/df0/class_instructions_1_1_float_1_1_load_from_array.xhtml#afefb12577f42cd5741a1af2d8bc5b530">execute</a>(</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;};</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="../../df/d87/class_instructions_1_1_float_1_1_store_into_array.xhtml">   82</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../df/d87/class_instructions_1_1_float_1_1_store_into_array.xhtml">StoreIntoArray</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="../../df/d87/class_instructions_1_1_float_1_1_store_into_array.xhtml#abdedd54092a3c9938d9f299e74f28970">   84</a></span>&#160;  <a class="code" href="../../df/d87/class_instructions_1_1_float_1_1_store_into_array.xhtml#abdedd54092a3c9938d9f299e74f28970">StoreIntoArray</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aa11e4c54fd641cfbae20b5cc16bcef05">kFASTORE</a>) {}</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../df/d87/class_instructions_1_1_float_1_1_store_into_array.xhtml#ac281b0d1ae99dfcc96a0162a6d1e943a">execute</a>(</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;};</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="../../d6/db6/class_instructions_1_1_float_1_1_compare_greater.xhtml">   92</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/db6/class_instructions_1_1_float_1_1_compare_greater.xhtml">CompareGreater</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="../../d6/db6/class_instructions_1_1_float_1_1_compare_greater.xhtml#a9d2f3562098158b680e6b2470341deb7">   94</a></span>&#160;  <a class="code" href="../../d6/db6/class_instructions_1_1_float_1_1_compare_greater.xhtml#a9d2f3562098158b680e6b2470341deb7">CompareGreater</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a46f51e9440e1eed11a630453c6c05e1d">kFCMPG</a>) {}</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d6/db6/class_instructions_1_1_float_1_1_compare_greater.xhtml#a9e61cbdef929a6af9cae5503a38075ea">execute</a>(</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;};</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="../../d1/db3/class_instructions_1_1_float_1_1_compare_less.xhtml">  102</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/db3/class_instructions_1_1_float_1_1_compare_less.xhtml">CompareLess</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="../../d1/db3/class_instructions_1_1_float_1_1_compare_less.xhtml#aedfb8d1c243298f3eaaabd231d08052e">  104</a></span>&#160;  <a class="code" href="../../d1/db3/class_instructions_1_1_float_1_1_compare_less.xhtml#aedfb8d1c243298f3eaaabd231d08052e">CompareLess</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a44d58c65ab24ec443ec213f28c68da8b">kFCMPL</a>) {}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d1/db3/class_instructions_1_1_float_1_1_compare_less.xhtml#ada90e667cbb5becaafaae022b60bc09a">execute</a>(</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;};</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="../../d0/d2d/class_instructions_1_1_float_1_1_const__0.xhtml">  112</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/d2d/class_instructions_1_1_float_1_1_const__0.xhtml">Const_0</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="../../d0/d2d/class_instructions_1_1_float_1_1_const__0.xhtml#ae89d3763ba40ece73f1a329b820d4c30">  114</a></span>&#160;  <a class="code" href="../../d0/d2d/class_instructions_1_1_float_1_1_const__0.xhtml#ae89d3763ba40ece73f1a329b820d4c30">Const_0</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a3cf7e473c046c563f102cf10259db29f">kFCONST_0</a>) {}</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d0/d2d/class_instructions_1_1_float_1_1_const__0.xhtml#afac92f68b39bae7beefef5ba129e8a27">execute</a>(</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;};</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="../../dc/df9/class_instructions_1_1_float_1_1_const__1.xhtml">  122</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dc/df9/class_instructions_1_1_float_1_1_const__1.xhtml">Const_1</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="../../dc/df9/class_instructions_1_1_float_1_1_const__1.xhtml#a9653f9186c4b78c01c5943fdac7d58a7">  124</a></span>&#160;  <a class="code" href="../../dc/df9/class_instructions_1_1_float_1_1_const__1.xhtml#a9653f9186c4b78c01c5943fdac7d58a7">Const_1</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a91422424c06d19e779465496db4a66ef">kFCONST_1</a>) {}</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dc/df9/class_instructions_1_1_float_1_1_const__1.xhtml#a7985975ae90d8805f15dabef822840d9">execute</a>(</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;};</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="../../d5/d13/class_instructions_1_1_float_1_1_const__2.xhtml">  132</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d5/d13/class_instructions_1_1_float_1_1_const__2.xhtml">Const_2</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="../../d5/d13/class_instructions_1_1_float_1_1_const__2.xhtml#a9bf0f83b5f8811e0814d260184981a03">  134</a></span>&#160;  <a class="code" href="../../d5/d13/class_instructions_1_1_float_1_1_const__2.xhtml#a9bf0f83b5f8811e0814d260184981a03">Const_2</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a022b17096482fb65d0b45b56e16a1e7d">kFCONST_2</a>) {}</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d5/d13/class_instructions_1_1_float_1_1_const__2.xhtml#aa168fb71509300400cccd471fdcb4712">execute</a>(</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;};</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="../../db/d72/class_instructions_1_1_float_1_1_div.xhtml">  142</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/d72/class_instructions_1_1_float_1_1_div.xhtml">Div</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="../../db/d72/class_instructions_1_1_float_1_1_div.xhtml#a7cd8321939134e24e52520c07e9ed678">  144</a></span>&#160;  <a class="code" href="../../db/d72/class_instructions_1_1_float_1_1_div.xhtml#a7cd8321939134e24e52520c07e9ed678">Div</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a1d37a548583e4f58faffa0842ba3c550">kFDIV</a>) {}</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../db/d72/class_instructions_1_1_float_1_1_div.xhtml#a6ad55183b16be02f2c05bf485466e60f">execute</a>(</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;};</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml">  152</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml">Load</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml#a91a9df21a28c1bbb2018a481e20990bc">  154</a></span>&#160;  <a class="code" href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml#a91a9df21a28c1bbb2018a481e20990bc">Load</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a0513ef8535dbd6f1a1d18be29a1e2f79">kFLOAD</a>) {}</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml#ae4126c84ec6e7b5add1c8b901e288c8f">  156</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml#ae4126c84ec6e7b5add1c8b901e288c8f">toBytecode</a>(</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      (*ss) &lt;&lt; index;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      (*ss) &lt;&lt; <span class="keywordtype">int</span>{index};</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      *delta_code = 1;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    (*ss) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml#a4a369e431f4b78660d69e6c78cbd254d">  174</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml#a4a369e431f4b78660d69e6c78cbd254d">toBytecode_json</a>(</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(index)};</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    *delta_code = 1;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(<span class="keywordtype">int</span>{index})};</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml#aa5049bc5b507279dd4237d179101901b">execute</a>(</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;};</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="../../d9/d00/class_instructions_1_1_float_1_1_load__0.xhtml">  193</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/d00/class_instructions_1_1_float_1_1_load__0.xhtml">Load_0</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="../../d9/d00/class_instructions_1_1_float_1_1_load__0.xhtml#a743d78dd779625a6f02392e06c621a69">  195</a></span>&#160;  <a class="code" href="../../d9/d00/class_instructions_1_1_float_1_1_load__0.xhtml#a743d78dd779625a6f02392e06c621a69">Load_0</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a149fc598c430733d82ded5cc8a6eb8d3">kFLOAD_0</a>) {}</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d9/d00/class_instructions_1_1_float_1_1_load__0.xhtml#a12bf7bc39ec66059f909a607fa43ed43">execute</a>(</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;};</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="../../de/d09/class_instructions_1_1_float_1_1_load__1.xhtml">  203</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../de/d09/class_instructions_1_1_float_1_1_load__1.xhtml">Load_1</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="../../de/d09/class_instructions_1_1_float_1_1_load__1.xhtml#a204b09f714d6d511110bd8e3fd9bef27">  205</a></span>&#160;  <a class="code" href="../../de/d09/class_instructions_1_1_float_1_1_load__1.xhtml#a204b09f714d6d511110bd8e3fd9bef27">Load_1</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af6df298eabd5c35607c8a7e39b8489d7">kFLOAD_1</a>) {}</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../de/d09/class_instructions_1_1_float_1_1_load__1.xhtml#abcc0a44f7d7d7d89cc6458e33409b75b">execute</a>(</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;};</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="../../d1/d50/class_instructions_1_1_float_1_1_load__2.xhtml">  213</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d50/class_instructions_1_1_float_1_1_load__2.xhtml">Load_2</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="../../d1/d50/class_instructions_1_1_float_1_1_load__2.xhtml#af42a72550f58737a4d1707e880a4d3af">  215</a></span>&#160;  <a class="code" href="../../d1/d50/class_instructions_1_1_float_1_1_load__2.xhtml#af42a72550f58737a4d1707e880a4d3af">Load_2</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a92d2d4fcf3235c53cf7de70200dc35b3">kFLOAD_2</a>) {}</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d1/d50/class_instructions_1_1_float_1_1_load__2.xhtml#a93129bcea47de4a9ffae2cfd82c05bcd">execute</a>(</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;};</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="../../dc/d5d/class_instructions_1_1_float_1_1_load__3.xhtml">  223</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dc/d5d/class_instructions_1_1_float_1_1_load__3.xhtml">Load_3</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="../../dc/d5d/class_instructions_1_1_float_1_1_load__3.xhtml#a1e76bfcfd1f9d04b1d10f82f3128ecba">  225</a></span>&#160;  <a class="code" href="../../dc/d5d/class_instructions_1_1_float_1_1_load__3.xhtml#a1e76bfcfd1f9d04b1d10f82f3128ecba">Load_3</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8a802ff7fbcb400deffdd53de4a50d09">kFLOAD_3</a>) {}</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dc/d5d/class_instructions_1_1_float_1_1_load__3.xhtml#a45c84abb65cf9d2ae3cd24f5f2d70b27">execute</a>(</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;};</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno"><a class="line" href="../../dd/d96/class_instructions_1_1_float_1_1_mul.xhtml">  233</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/d96/class_instructions_1_1_float_1_1_mul.xhtml">Mul</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="../../dd/d96/class_instructions_1_1_float_1_1_mul.xhtml#a6e46b9b2f767b99cf191b739a5e3c47c">  235</a></span>&#160;  <a class="code" href="../../dd/d96/class_instructions_1_1_float_1_1_mul.xhtml#a6e46b9b2f767b99cf191b739a5e3c47c">Mul</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a85a71f32d27e2603fd8ecc95602c884a">kFMUL</a>) {}</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dd/d96/class_instructions_1_1_float_1_1_mul.xhtml#a8306fbc87e8b75a9726cebe3c8f2c67c">execute</a>(</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;};</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="../../de/dc2/class_instructions_1_1_float_1_1_neg.xhtml">  243</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../de/dc2/class_instructions_1_1_float_1_1_neg.xhtml">Neg</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="../../de/dc2/class_instructions_1_1_float_1_1_neg.xhtml#a406c31149e786fb454a61c0e3926ff31">  245</a></span>&#160;  <a class="code" href="../../de/dc2/class_instructions_1_1_float_1_1_neg.xhtml#a406c31149e786fb454a61c0e3926ff31">Neg</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af5fde05e15038a735a6733bf2fa876e3">kFNEG</a>) {}</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../de/dc2/class_instructions_1_1_float_1_1_neg.xhtml#aa89bc3605af5b5d66e2193e30eeac12f">execute</a>(</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;};</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="../../d6/df3/class_instructions_1_1_float_1_1_rem.xhtml">  253</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/df3/class_instructions_1_1_float_1_1_rem.xhtml">Rem</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="../../d6/df3/class_instructions_1_1_float_1_1_rem.xhtml#a8e64901e7eb076ffe401a0add5152591">  255</a></span>&#160;  <a class="code" href="../../d6/df3/class_instructions_1_1_float_1_1_rem.xhtml#a8e64901e7eb076ffe401a0add5152591">Rem</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a2a1988cff5c1596e842120e133e09223">kFREM</a>) {}</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d6/df3/class_instructions_1_1_float_1_1_rem.xhtml#a1c3b3057113a35fb874d046416bbfa22">execute</a>(</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;};</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; </div>
<div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="../../d5/d12/class_instructions_1_1_float_1_1_return.xhtml">  263</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d5/d12/class_instructions_1_1_float_1_1_return.xhtml">Return</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="../../d5/d12/class_instructions_1_1_float_1_1_return.xhtml#ad6a0d183d8cccb0a0a6d41350870258c">  265</a></span>&#160;  <a class="code" href="../../d5/d12/class_instructions_1_1_float_1_1_return.xhtml#ad6a0d183d8cccb0a0a6d41350870258c">Return</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ab15fd1a246a2a0d01ec144aa28553669">kFRETURN</a>) {}</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160; </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d5/d12/class_instructions_1_1_float_1_1_return.xhtml#a15f4086aeff43f1c4ebec20e5cf9df52">execute</a>(</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;};</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml">  273</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml">Store</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml#accc4fc01feeeb8c7f9e9265fecc42312">  275</a></span>&#160;  <a class="code" href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml#accc4fc01feeeb8c7f9e9265fecc42312">Store</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ac46c58a0216e6fbce141fe8eac2632b2">kFSTORE</a>) {}</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml#af7d8cbf157d13771b32a7798ae08afc2">  277</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml#af7d8cbf157d13771b32a7798ae08afc2">toBytecode</a>(</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;      (*ss) &lt;&lt; index;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;      (*ss) &lt;&lt; <span class="keywordtype">int</span>{index};</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;      *delta_code = 1;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    }</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    (*ss) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  }</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml#a65ac9fcf360aafd923c16446fa748002">  295</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml#a65ac9fcf360aafd923c16446fa748002">toBytecode_json</a>(</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(index)};</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    }</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    *delta_code = 1;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(<span class="keywordtype">int</span>{index})};</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  }</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160; </div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml#acb7d670d562bbd82e5b0ac6e16615a89">execute</a>(</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;};</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160; </div>
<div class="line"><a name="l00314"></a><span class="lineno"><a class="line" href="../../d0/d1f/class_instructions_1_1_float_1_1_store__0.xhtml">  314</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/d1f/class_instructions_1_1_float_1_1_store__0.xhtml">Store_0</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="../../d0/d1f/class_instructions_1_1_float_1_1_store__0.xhtml#a45f65bcd4ffb0ab294a8ec6003533894">  316</a></span>&#160;  <a class="code" href="../../d0/d1f/class_instructions_1_1_float_1_1_store__0.xhtml#a45f65bcd4ffb0ab294a8ec6003533894">Store_0</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a0e427dc27fdd9cd6ed26d5ec2d30a8a3">kFSTORE_0</a>) {}</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160; </div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d0/d1f/class_instructions_1_1_float_1_1_store__0.xhtml#a1a3b5106b0d217290c71d29e1ca8e09c">execute</a>(</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;};</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160; </div>
<div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="../../d0/de3/class_instructions_1_1_float_1_1_store__1.xhtml">  324</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/de3/class_instructions_1_1_float_1_1_store__1.xhtml">Store_1</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="../../d0/de3/class_instructions_1_1_float_1_1_store__1.xhtml#aa8d618c06ec8dbb71920d12fd34cbe4a">  326</a></span>&#160;  <a class="code" href="../../d0/de3/class_instructions_1_1_float_1_1_store__1.xhtml#aa8d618c06ec8dbb71920d12fd34cbe4a">Store_1</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a2479cb8576a3905a6532e61f8f31f8b1">kFSTORE_1</a>) {}</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; </div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d0/de3/class_instructions_1_1_float_1_1_store__1.xhtml#ad726c1b44a3951549e4e1f17538fe826">execute</a>(</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;};</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160; </div>
<div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="../../d3/dc0/class_instructions_1_1_float_1_1_store__2.xhtml">  334</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d3/dc0/class_instructions_1_1_float_1_1_store__2.xhtml">Store_2</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="../../d3/dc0/class_instructions_1_1_float_1_1_store__2.xhtml#ada9d3c3c2930d166c4bea6d19ecf2b17">  336</a></span>&#160;  <a class="code" href="../../d3/dc0/class_instructions_1_1_float_1_1_store__2.xhtml#ada9d3c3c2930d166c4bea6d19ecf2b17">Store_2</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a2a347822bd4682b2e467ec26fac0dd3d">kFSTORE_2</a>) {}</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; </div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d3/dc0/class_instructions_1_1_float_1_1_store__2.xhtml#ab3ba5443738c1fecfc3c8a364c374dc6">execute</a>(</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;};</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00344"></a><span class="lineno"><a class="line" href="../../d7/d58/class_instructions_1_1_float_1_1_store__3.xhtml">  344</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/d58/class_instructions_1_1_float_1_1_store__3.xhtml">Store_3</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="../../d7/d58/class_instructions_1_1_float_1_1_store__3.xhtml#a4d99f9bd7137b2ca82d2ec46d4e81b97">  346</a></span>&#160;  <a class="code" href="../../d7/d58/class_instructions_1_1_float_1_1_store__3.xhtml#a4d99f9bd7137b2ca82d2ec46d4e81b97">Store_3</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af69188b3d60a1f6dc7b052893396f6a9">kFSTORE_3</a>) {}</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160; </div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d7/d58/class_instructions_1_1_float_1_1_store__3.xhtml#ad552d692f3783e262d7b208e507c3599">execute</a>(</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;};</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160; </div>
<div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="../../db/d68/class_instructions_1_1_float_1_1_sub.xhtml">  354</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/d68/class_instructions_1_1_float_1_1_sub.xhtml">Sub</a> : <span class="keyword">public</span> <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a> {</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00356"></a><span class="lineno"><a class="line" href="../../db/d68/class_instructions_1_1_float_1_1_sub.xhtml#a5a0b8144fe2d30333819952380999c08">  356</a></span>&#160;  <a class="code" href="../../db/d68/class_instructions_1_1_float_1_1_sub.xhtml#a5a0b8144fe2d30333819952380999c08">Sub</a>() : <a class="code" href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">BaseFloat</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af145f992dabbc9b94e2e36ca7906250f">kFSUB</a>) {}</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../db/d68/class_instructions_1_1_float_1_1_sub.xhtml#a6ff41afb8e0b896d769bfe8bc6af5fb0">execute</a>(</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;};</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;}  <span class="comment">// namespace Float</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;}  <span class="comment">// namespace Instructions</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160; </div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="preprocessor">#endif  // INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_FLOAT_H_</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load_xhtml_a91a9df21a28c1bbb2018a481e20990bc"><div class="ttname"><a href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml#a91a9df21a28c1bbb2018a481e20990bc">Instructions::Float::Load::Load</a></div><div class="ttdeci">Load()</div><div class="ttdef"><b>Definition:</b> float.h:154</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_base_float_xhtml_a87a409c8649dee995f71fcd95a652032"><div class="ttname"><a href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml#a87a409c8649dee995f71fcd95a652032">Instructions::Float::BaseFloat::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> float.h:17</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_rem_xhtml_a8e64901e7eb076ffe401a0add5152591"><div class="ttname"><a href="../../d6/df3/class_instructions_1_1_float_1_1_rem.xhtml#a8e64901e7eb076ffe401a0add5152591">Instructions::Float::Rem::Rem</a></div><div class="ttdeci">Rem()</div><div class="ttdef"><b>Definition:</b> float.h:255</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_const__1_xhtml_a9653f9186c4b78c01c5943fdac7d58a7"><div class="ttname"><a href="../../dc/df9/class_instructions_1_1_float_1_1_const__1.xhtml#a9653f9186c4b78c01c5943fdac7d58a7">Instructions::Float::Const_1::Const_1</a></div><div class="ttdeci">Const_1()</div><div class="ttdef"><b>Definition:</b> float.h:124</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load__0_xhtml_a12bf7bc39ec66059f909a607fa43ed43"><div class="ttname"><a href="../../d9/d00/class_instructions_1_1_float_1_1_load__0.xhtml#a12bf7bc39ec66059f909a607fa43ed43">Instructions::Float::Load_0::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load__3_xhtml_a1e76bfcfd1f9d04b1d10f82f3128ecba"><div class="ttname"><a href="../../dc/d5d/class_instructions_1_1_float_1_1_load__3.xhtml#a1e76bfcfd1f9d04b1d10f82f3128ecba">Instructions::Float::Load_3::Load_3</a></div><div class="ttdeci">Load_3()</div><div class="ttdef"><b>Definition:</b> float.h:225</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load__2_xhtml"><div class="ttname"><a href="../../d1/d50/class_instructions_1_1_float_1_1_load__2.xhtml">Instructions::Float::Load_2</a></div><div class="ttdef"><b>Definition:</b> float.h:213</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a85a71f32d27e2603fd8ecc95602c884a"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a85a71f32d27e2603fd8ecc95602c884a">Instructions::Opcodes::kFMUL</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:84</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_div_xhtml"><div class="ttname"><a href="../../db/d72/class_instructions_1_1_float_1_1_div.xhtml">Instructions::Float::Div</a></div><div class="ttdef"><b>Definition:</b> float.h:142</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_compare_greater_xhtml"><div class="ttname"><a href="../../d6/db6/class_instructions_1_1_float_1_1_compare_greater.xhtml">Instructions::Float::CompareGreater</a></div><div class="ttdef"><b>Definition:</b> float.h:92</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instructions::Instruction</a></div><div class="ttdef"><b>Definition:</b> base.h:15</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a92d2d4fcf3235c53cf7de70200dc35b3"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a92d2d4fcf3235c53cf7de70200dc35b3">Instructions::Opcodes::kFLOAD_2</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:82</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a46f51e9440e1eed11a630453c6c05e1d"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a46f51e9440e1eed11a630453c6c05e1d">Instructions::Opcodes::kFCMPG</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:73</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load__2_xhtml_a93129bcea47de4a9ffae2cfd82c05bcd"><div class="ttname"><a href="../../d1/d50/class_instructions_1_1_float_1_1_load__2.xhtml#a93129bcea47de4a9ffae2cfd82c05bcd">Instructions::Float::Load_2::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store_xhtml_acb7d670d562bbd82e5b0ac6e16615a89"><div class="ttname"><a href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml#acb7d670d562bbd82e5b0ac6e16615a89">Instructions::Float::Store::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store__0_xhtml_a1a3b5106b0d217290c71d29e1ca8e09c"><div class="ttname"><a href="../../d0/d1f/class_instructions_1_1_float_1_1_store__0.xhtml#a1a3b5106b0d217290c71d29e1ca8e09c">Instructions::Float::Store_0::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a3cf7e473c046c563f102cf10259db29f"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a3cf7e473c046c563f102cf10259db29f">Instructions::Opcodes::kFCONST_0</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:75</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af69188b3d60a1f6dc7b052893396f6a9"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af69188b3d60a1f6dc7b052893396f6a9">Instructions::Opcodes::kFSTORE_3</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:92</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a022b17096482fb65d0b45b56e16a1e7d"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a022b17096482fb65d0b45b56e16a1e7d">Instructions::Opcodes::kFCONST_2</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:77</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_to_long_xhtml_ace59e21531608f556f14123cf36f5b66"><div class="ttname"><a href="../../d0/dd2/class_instructions_1_1_float_1_1_to_long.xhtml#ace59e21531608f556f14123cf36f5b66">Instructions::Float::ToLong::ToLong</a></div><div class="ttdeci">ToLong()</div><div class="ttdef"><b>Definition:</b> float.h:54</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_neg_xhtml"><div class="ttname"><a href="../../de/dc2/class_instructions_1_1_float_1_1_neg.xhtml">Instructions::Float::Neg</a></div><div class="ttdef"><b>Definition:</b> float.h:243</div></div>
<div class="ttc" id="abase_8h_xhtml"><div class="ttname"><a href="../../d3/d5a/base_8h.xhtml">base.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load_from_array_xhtml_afefb12577f42cd5741a1af2d8bc5b530"><div class="ttname"><a href="../../d0/df0/class_instructions_1_1_float_1_1_load_from_array.xhtml#afefb12577f42cd5741a1af2d8bc5b530">Instructions::Float::LoadFromArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a0e427dc27fdd9cd6ed26d5ec2d30a8a3"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a0e427dc27fdd9cd6ed26d5ec2d30a8a3">Instructions::Opcodes::kFSTORE_0</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:89</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load__3_xhtml_a45c84abb65cf9d2ae3cd24f5f2d70b27"><div class="ttname"><a href="../../dc/d5d/class_instructions_1_1_float_1_1_load__3.xhtml#a45c84abb65cf9d2ae3cd24f5f2d70b27">Instructions::Float::Load_3::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_const__2_xhtml"><div class="ttname"><a href="../../d5/d13/class_instructions_1_1_float_1_1_const__2.xhtml">Instructions::Float::Const_2</a></div><div class="ttdef"><b>Definition:</b> float.h:132</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_compare_less_xhtml"><div class="ttname"><a href="../../d1/db3/class_instructions_1_1_float_1_1_compare_less.xhtml">Instructions::Float::CompareLess</a></div><div class="ttdef"><b>Definition:</b> float.h:102</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_add_xhtml_afdc870f9efd0f2b8396a7ee4a43a1c10"><div class="ttname"><a href="../../d3/d67/class_instructions_1_1_float_1_1_add.xhtml#afdc870f9efd0f2b8396a7ee4a43a1c10">Instructions::Float::Add::Add</a></div><div class="ttdeci">Add()</div><div class="ttdef"><b>Definition:</b> float.h:64</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a0513ef8535dbd6f1a1d18be29a1e2f79"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a0513ef8535dbd6f1a1d18be29a1e2f79">Instructions::Opcodes::kFLOAD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:79</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_base_float_xhtml_a298fcc849b3463aa4a86e543dee6de90"><div class="ttname"><a href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml#a298fcc849b3463aa4a86e543dee6de90">Instructions::Float::BaseFloat::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> float.h:25</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_base_float_xhtml"><div class="ttname"><a href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml">Instructions::Float::BaseFloat</a></div><div class="ttdef"><b>Definition:</b> float.h:13</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_compare_less_xhtml_ada90e667cbb5becaafaae022b60bc09a"><div class="ttname"><a href="../../d1/db3/class_instructions_1_1_float_1_1_compare_less.xhtml#ada90e667cbb5becaafaae022b60bc09a">Instructions::Float::CompareLess::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="astring_8h_xhtml"><div class="ttname"><a href="../../da/d66/string_8h.xhtml">string.h</a></div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ab15fd1a246a2a0d01ec144aa28553669"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ab15fd1a246a2a0d01ec144aa28553669">Instructions::Opcodes::kFRETURN</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:87</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_return_xhtml_a15f4086aeff43f1c4ebec20e5cf9df52"><div class="ttname"><a href="../../d5/d12/class_instructions_1_1_float_1_1_return.xhtml#a15f4086aeff43f1c4ebec20e5cf9df52">Instructions::Float::Return::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store__2_xhtml_ada9d3c3c2930d166c4bea6d19ecf2b17"><div class="ttname"><a href="../../d3/dc0/class_instructions_1_1_float_1_1_store__2.xhtml#ada9d3c3c2930d166c4bea6d19ecf2b17">Instructions::Float::Store_2::Store_2</a></div><div class="ttdeci">Store_2()</div><div class="ttdef"><b>Definition:</b> float.h:336</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_sub_xhtml"><div class="ttname"><a href="../../db/d68/class_instructions_1_1_float_1_1_sub.xhtml">Instructions::Float::Sub</a></div><div class="ttdef"><b>Definition:</b> float.h:354</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af5fde05e15038a735a6733bf2fa876e3"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af5fde05e15038a735a6733bf2fa876e3">Instructions::Opcodes::kFNEG</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:85</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store_xhtml_a65ac9fcf360aafd923c16446fa748002"><div class="ttname"><a href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml#a65ac9fcf360aafd923c16446fa748002">Instructions::Float::Store::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> float.h:295</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_const__0_xhtml"><div class="ttname"><a href="../../d0/d2d/class_instructions_1_1_float_1_1_const__0.xhtml">Instructions::Float::Const_0</a></div><div class="ttdef"><b>Definition:</b> float.h:112</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_base_float_xhtml_a71ae7fce5c3ebb6a5c241adfff506728"><div class="ttname"><a href="../../da/ddb/class_instructions_1_1_float_1_1_base_float.xhtml#a71ae7fce5c3ebb6a5c241adfff506728">Instructions::Float::BaseFloat::BaseFloat</a></div><div class="ttdeci">BaseFloat(const Utils::Types::u1 &amp;tag)</div><div class="ttdef"><b>Definition:</b> float.h:15</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_neg_xhtml_a406c31149e786fb454a61c0e3926ff31"><div class="ttname"><a href="../../de/dc2/class_instructions_1_1_float_1_1_neg.xhtml#a406c31149e786fb454a61c0e3926ff31">Instructions::Float::Neg::Neg</a></div><div class="ttdeci">Neg()</div><div class="ttdef"><b>Definition:</b> float.h:245</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_const__1_xhtml_a7985975ae90d8805f15dabef822840d9"><div class="ttname"><a href="../../dc/df9/class_instructions_1_1_float_1_1_const__1.xhtml#a7985975ae90d8805f15dabef822840d9">Instructions::Float::Const_1::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load_xhtml_a4a369e431f4b78660d69e6c78cbd254d"><div class="ttname"><a href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml#a4a369e431f4b78660d69e6c78cbd254d">Instructions::Float::Load::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> float.h:174</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_const__2_xhtml_a9bf0f83b5f8811e0814d260184981a03"><div class="ttname"><a href="../../d5/d13/class_instructions_1_1_float_1_1_const__2.xhtml#a9bf0f83b5f8811e0814d260184981a03">Instructions::Float::Const_2::Const_2</a></div><div class="ttdeci">Const_2()</div><div class="ttdef"><b>Definition:</b> float.h:134</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_ab765ddcb61c4d60f2647154d87f97ae2"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Instructions::Opcodes::getMnemonic</a></div><div class="ttdeci">std::string getMnemonic(const Utils::Types::u1 &amp;opcode)</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store__3_xhtml"><div class="ttname"><a href="../../d7/d58/class_instructions_1_1_float_1_1_store__3.xhtml">Instructions::Float::Store_3</a></div><div class="ttdef"><b>Definition:</b> float.h:344</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load__3_xhtml"><div class="ttname"><a href="../../dc/d5d/class_instructions_1_1_float_1_1_load__3.xhtml">Instructions::Float::Load_3</a></div><div class="ttdef"><b>Definition:</b> float.h:223</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store_into_array_xhtml"><div class="ttname"><a href="../../df/d87/class_instructions_1_1_float_1_1_store_into_array.xhtml">Instructions::Float::StoreIntoArray</a></div><div class="ttdef"><b>Definition:</b> float.h:82</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store_into_array_xhtml_abdedd54092a3c9938d9f299e74f28970"><div class="ttname"><a href="../../df/d87/class_instructions_1_1_float_1_1_store_into_array.xhtml#abdedd54092a3c9938d9f299e74f28970">Instructions::Float::StoreIntoArray::StoreIntoArray</a></div><div class="ttdeci">StoreIntoArray()</div><div class="ttdef"><b>Definition:</b> float.h:84</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_neg_xhtml_aa89bc3605af5b5d66e2193e30eeac12f"><div class="ttname"><a href="../../de/dc2/class_instructions_1_1_float_1_1_neg.xhtml#aa89bc3605af5b5d66e2193e30eeac12f">Instructions::Float::Neg::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a277f77edbe5beefaf0352ec62d99cf0c"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a277f77edbe5beefaf0352ec62d99cf0c">Instructions::Opcodes::kF2I</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:68</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store__1_xhtml_aa8d618c06ec8dbb71920d12fd34cbe4a"><div class="ttname"><a href="../../d0/de3/class_instructions_1_1_float_1_1_store__1.xhtml#aa8d618c06ec8dbb71920d12fd34cbe4a">Instructions::Float::Store_1::Store_1</a></div><div class="ttdeci">Store_1()</div><div class="ttdef"><b>Definition:</b> float.h:326</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store__1_xhtml"><div class="ttname"><a href="../../d0/de3/class_instructions_1_1_float_1_1_store__1.xhtml">Instructions::Float::Store_1</a></div><div class="ttdef"><b>Definition:</b> float.h:324</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a2479cb8576a3905a6532e61f8f31f8b1"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a2479cb8576a3905a6532e61f8f31f8b1">Instructions::Opcodes::kFSTORE_1</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:90</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load__0_xhtml_a743d78dd779625a6f02392e06c621a69"><div class="ttname"><a href="../../d9/d00/class_instructions_1_1_float_1_1_load__0.xhtml#a743d78dd779625a6f02392e06c621a69">Instructions::Float::Load_0::Load_0</a></div><div class="ttdeci">Load_0()</div><div class="ttdef"><b>Definition:</b> float.h:195</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a83f2829a0c815428910e13aa2b7892d4"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a83f2829a0c815428910e13aa2b7892d4">Instructions::Opcodes::kFALOAD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:71</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store_xhtml_af7d8cbf157d13771b32a7798ae08afc2"><div class="ttname"><a href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml#af7d8cbf157d13771b32a7798ae08afc2">Instructions::Float::Store::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> float.h:277</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_const__0_xhtml_ae89d3763ba40ece73f1a329b820d4c30"><div class="ttname"><a href="../../d0/d2d/class_instructions_1_1_float_1_1_const__0.xhtml#ae89d3763ba40ece73f1a329b820d4c30">Instructions::Float::Const_0::Const_0</a></div><div class="ttdeci">Const_0()</div><div class="ttdef"><b>Definition:</b> float.h:114</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml_abce4218201520f9ca8880bda8ab78e40"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">Instructions::Instruction::opcode</a></div><div class="ttdeci">const Utils::Types::u1 opcode</div><div class="ttdef"><b>Definition:</b> base.h:35</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af145f992dabbc9b94e2e36ca7906250f"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af145f992dabbc9b94e2e36ca7906250f">Instructions::Opcodes::kFSUB</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:93</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_const__2_xhtml_aa168fb71509300400cccd471fdcb4712"><div class="ttname"><a href="../../d5/d13/class_instructions_1_1_float_1_1_const__2.xhtml#aa168fb71509300400cccd471fdcb4712">Instructions::Float::Const_2::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load__1_xhtml_a204b09f714d6d511110bd8e3fd9bef27"><div class="ttname"><a href="../../de/d09/class_instructions_1_1_float_1_1_load__1.xhtml#a204b09f714d6d511110bd8e3fd9bef27">Instructions::Float::Load_1::Load_1</a></div><div class="ttdeci">Load_1()</div><div class="ttdef"><b>Definition:</b> float.h:205</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load_xhtml_aa5049bc5b507279dd4237d179101901b"><div class="ttname"><a href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml#aa5049bc5b507279dd4237d179101901b">Instructions::Float::Load::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_compare_greater_xhtml_a9d2f3562098158b680e6b2470341deb7"><div class="ttname"><a href="../../d6/db6/class_instructions_1_1_float_1_1_compare_greater.xhtml#a9d2f3562098158b680e6b2470341deb7">Instructions::Float::CompareGreater::CompareGreater</a></div><div class="ttdeci">CompareGreater()</div><div class="ttdef"><b>Definition:</b> float.h:94</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_to_integer_xhtml_a7f2a4c825c64aeaeedf776f79878df1a"><div class="ttname"><a href="../../db/d3f/class_instructions_1_1_float_1_1_to_integer.xhtml#a7f2a4c825c64aeaeedf776f79878df1a">Instructions::Float::ToInteger::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_div_xhtml_a6ad55183b16be02f2c05bf485466e60f"><div class="ttname"><a href="../../db/d72/class_instructions_1_1_float_1_1_div.xhtml#a6ad55183b16be02f2c05bf485466e60f">Instructions::Float::Div::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_sub_xhtml_a6ff41afb8e0b896d769bfe8bc6af5fb0"><div class="ttname"><a href="../../db/d68/class_instructions_1_1_float_1_1_sub.xhtml#a6ff41afb8e0b896d769bfe8bc6af5fb0">Instructions::Float::Sub::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_rem_xhtml"><div class="ttname"><a href="../../d6/df3/class_instructions_1_1_float_1_1_rem.xhtml">Instructions::Float::Rem</a></div><div class="ttdef"><b>Definition:</b> float.h:253</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a195d29b590de7b9fa048d8b364de30bd"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a195d29b590de7b9fa048d8b364de30bd">Instructions::Opcodes::kF2L</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:69</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_to_long_xhtml_a09ca58a77b32ece5cdae094f2a580418"><div class="ttname"><a href="../../d0/dd2/class_instructions_1_1_float_1_1_to_long.xhtml#a09ca58a77b32ece5cdae094f2a580418">Instructions::Float::ToLong::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_return_xhtml_ad6a0d183d8cccb0a0a6d41350870258c"><div class="ttname"><a href="../../d5/d12/class_instructions_1_1_float_1_1_return.xhtml#ad6a0d183d8cccb0a0a6d41350870258c">Instructions::Float::Return::Return</a></div><div class="ttdeci">Return()</div><div class="ttdef"><b>Definition:</b> float.h:265</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store__3_xhtml_a4d99f9bd7137b2ca82d2ec46d4e81b97"><div class="ttname"><a href="../../d7/d58/class_instructions_1_1_float_1_1_store__3.xhtml#a4d99f9bd7137b2ca82d2ec46d4e81b97">Instructions::Float::Store_3::Store_3</a></div><div class="ttdeci">Store_3()</div><div class="ttdef"><b>Definition:</b> float.h:346</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store__3_xhtml_ad552d692f3783e262d7b208e507c3599"><div class="ttname"><a href="../../d7/d58/class_instructions_1_1_float_1_1_store__3.xhtml#ad552d692f3783e262d7b208e507c3599">Instructions::Float::Store_3::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a2a347822bd4682b2e467ec26fac0dd3d"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a2a347822bd4682b2e467ec26fac0dd3d">Instructions::Opcodes::kFSTORE_2</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:91</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_const__1_xhtml"><div class="ttname"><a href="../../dc/df9/class_instructions_1_1_float_1_1_const__1.xhtml">Instructions::Float::Const_1</a></div><div class="ttdef"><b>Definition:</b> float.h:122</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store__2_xhtml_ab3ba5443738c1fecfc3c8a364c374dc6"><div class="ttname"><a href="../../d3/dc0/class_instructions_1_1_float_1_1_store__2.xhtml#ab3ba5443738c1fecfc3c8a364c374dc6">Instructions::Float::Store_2::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_to_integer_xhtml"><div class="ttname"><a href="../../db/d3f/class_instructions_1_1_float_1_1_to_integer.xhtml">Instructions::Float::ToInteger</a></div><div class="ttdef"><b>Definition:</b> float.h:42</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_to_double_xhtml_a7c39f5dd0e9666f2ddc002fe730fda1a"><div class="ttname"><a href="../../d5/d05/class_instructions_1_1_float_1_1_to_double.xhtml#a7c39f5dd0e9666f2ddc002fe730fda1a">Instructions::Float::ToDouble::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a8a802ff7fbcb400deffdd53de4a50d09"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8a802ff7fbcb400deffdd53de4a50d09">Instructions::Opcodes::kFLOAD_3</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:83</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load__1_xhtml"><div class="ttname"><a href="../../de/d09/class_instructions_1_1_float_1_1_load__1.xhtml">Instructions::Float::Load_1</a></div><div class="ttdef"><b>Definition:</b> float.h:203</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_compare_greater_xhtml_a9e61cbdef929a6af9cae5503a38075ea"><div class="ttname"><a href="../../d6/db6/class_instructions_1_1_float_1_1_compare_greater.xhtml#a9e61cbdef929a6af9cae5503a38075ea">Instructions::Float::CompareGreater::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load_from_array_xhtml"><div class="ttname"><a href="../../d0/df0/class_instructions_1_1_float_1_1_load_from_array.xhtml">Instructions::Float::LoadFromArray</a></div><div class="ttdef"><b>Definition:</b> float.h:72</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a44d58c65ab24ec443ec213f28c68da8b"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a44d58c65ab24ec443ec213f28c68da8b">Instructions::Opcodes::kFCMPL</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:74</div></div>
<div class="ttc" id="aopcodes_8h_xhtml"><div class="ttname"><a href="../../d3/de6/opcodes_8h.xhtml">opcodes.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_compare_less_xhtml_aedfb8d1c243298f3eaaabd231d08052e"><div class="ttname"><a href="../../d1/db3/class_instructions_1_1_float_1_1_compare_less.xhtml#aedfb8d1c243298f3eaaabd231d08052e">Instructions::Float::CompareLess::CompareLess</a></div><div class="ttdeci">CompareLess()</div><div class="ttdef"><b>Definition:</b> float.h:104</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_to_integer_xhtml_a054d9689b67c86b543900e9ae658e2d3"><div class="ttname"><a href="../../db/d3f/class_instructions_1_1_float_1_1_to_integer.xhtml#a054d9689b67c86b543900e9ae658e2d3">Instructions::Float::ToInteger::ToInteger</a></div><div class="ttdeci">ToInteger()</div><div class="ttdef"><b>Definition:</b> float.h:44</div></div>
<div class="ttc" id="anamespace_instructions_xhtml"><div class="ttname"><a href="../../da/d11/namespace_instructions.xhtml">Instructions</a></div><div class="ttdef"><b>Definition:</b> execution_engine.h:12</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load__1_xhtml_abcc0a44f7d7d7d89cc6458e33409b75b"><div class="ttname"><a href="../../de/d09/class_instructions_1_1_float_1_1_load__1.xhtml#abcc0a44f7d7d7d89cc6458e33409b75b">Instructions::Float::Load_1::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_return_xhtml"><div class="ttname"><a href="../../d5/d12/class_instructions_1_1_float_1_1_return.xhtml">Instructions::Float::Return</a></div><div class="ttdef"><b>Definition:</b> float.h:263</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a149fc598c430733d82ded5cc8a6eb8d3"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a149fc598c430733d82ded5cc8a6eb8d3">Instructions::Opcodes::kFLOAD_0</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:80</div></div>
<div class="ttc" id="anamespace_utils_1_1_types_xhtml_a987afa1d65d5f43c5e379d4cdafacd44"><div class="ttname"><a href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a></div><div class="ttdeci">std::uint8_t u1</div><div class="ttdef"><b>Definition:</b> types.h:8</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_to_double_xhtml_a154625b99c17742415dcf701391cb6c2"><div class="ttname"><a href="../../d5/d05/class_instructions_1_1_float_1_1_to_double.xhtml#a154625b99c17742415dcf701391cb6c2">Instructions::Float::ToDouble::ToDouble</a></div><div class="ttdeci">ToDouble()</div><div class="ttdef"><b>Definition:</b> float.h:34</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load_xhtml_ae4126c84ec6e7b5add1c8b901e288c8f"><div class="ttname"><a href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml#ae4126c84ec6e7b5add1c8b901e288c8f">Instructions::Float::Load::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> float.h:156</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_to_long_xhtml"><div class="ttname"><a href="../../d0/dd2/class_instructions_1_1_float_1_1_to_long.xhtml">Instructions::Float::ToLong</a></div><div class="ttdef"><b>Definition:</b> float.h:52</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_mul_xhtml_a6e46b9b2f767b99cf191b739a5e3c47c"><div class="ttname"><a href="../../dd/d96/class_instructions_1_1_float_1_1_mul.xhtml#a6e46b9b2f767b99cf191b739a5e3c47c">Instructions::Float::Mul::Mul</a></div><div class="ttdeci">Mul()</div><div class="ttdef"><b>Definition:</b> float.h:235</div></div>
<div class="ttc" id="anamespace_utils_1_1_string_xhtml_aec9a3efb3bd837c1f21fec1ceba1eec9"><div class="ttname"><a href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a></div><div class="ttdeci">std::string toString(const T &amp;num)</div><div class="ttdef"><b>Definition:</b> string.h:21</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_mul_xhtml"><div class="ttname"><a href="../../dd/d96/class_instructions_1_1_float_1_1_mul.xhtml">Instructions::Float::Mul</a></div><div class="ttdef"><b>Definition:</b> float.h:233</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store_into_array_xhtml_ac281b0d1ae99dfcc96a0162a6d1e943a"><div class="ttname"><a href="../../df/d87/class_instructions_1_1_float_1_1_store_into_array.xhtml#ac281b0d1ae99dfcc96a0162a6d1e943a">Instructions::Float::StoreIntoArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a2a1988cff5c1596e842120e133e09223"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a2a1988cff5c1596e842120e133e09223">Instructions::Opcodes::kFREM</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:86</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_const__0_xhtml_afac92f68b39bae7beefef5ba129e8a27"><div class="ttname"><a href="../../d0/d2d/class_instructions_1_1_float_1_1_const__0.xhtml#afac92f68b39bae7beefef5ba129e8a27">Instructions::Float::Const_0::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_mul_xhtml_a8306fbc87e8b75a9726cebe3c8f2c67c"><div class="ttname"><a href="../../dd/d96/class_instructions_1_1_float_1_1_mul.xhtml#a8306fbc87e8b75a9726cebe3c8f2c67c">Instructions::Float::Mul::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_add_xhtml_ac2254565602e2c8e21757c24cc1d278e"><div class="ttname"><a href="../../d3/d67/class_instructions_1_1_float_1_1_add.xhtml#ac2254565602e2c8e21757c24cc1d278e">Instructions::Float::Add::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a8aa3533312c29f14b4228b0df665994e"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8aa3533312c29f14b4228b0df665994e">Instructions::Opcodes::kFADD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:70</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store__2_xhtml"><div class="ttname"><a href="../../d3/dc0/class_instructions_1_1_float_1_1_store__2.xhtml">Instructions::Float::Store_2</a></div><div class="ttdef"><b>Definition:</b> float.h:334</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_rem_xhtml_a1c3b3057113a35fb874d046416bbfa22"><div class="ttname"><a href="../../d6/df3/class_instructions_1_1_float_1_1_rem.xhtml#a1c3b3057113a35fb874d046416bbfa22">Instructions::Float::Rem::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a1d37a548583e4f58faffa0842ba3c550"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a1d37a548583e4f58faffa0842ba3c550">Instructions::Opcodes::kFDIV</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:78</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store_xhtml"><div class="ttname"><a href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml">Instructions::Float::Store</a></div><div class="ttdef"><b>Definition:</b> float.h:273</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ac46c58a0216e6fbce141fe8eac2632b2"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ac46c58a0216e6fbce141fe8eac2632b2">Instructions::Opcodes::kFSTORE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:88</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_add_xhtml"><div class="ttname"><a href="../../d3/d67/class_instructions_1_1_float_1_1_add.xhtml">Instructions::Float::Add</a></div><div class="ttdef"><b>Definition:</b> float.h:62</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load__2_xhtml_af42a72550f58737a4d1707e880a4d3af"><div class="ttname"><a href="../../d1/d50/class_instructions_1_1_float_1_1_load__2.xhtml#af42a72550f58737a4d1707e880a4d3af">Instructions::Float::Load_2::Load_2</a></div><div class="ttdeci">Load_2()</div><div class="ttdef"><b>Definition:</b> float.h:215</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a91422424c06d19e779465496db4a66ef"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a91422424c06d19e779465496db4a66ef">Instructions::Opcodes::kFCONST_1</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:76</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_to_double_xhtml"><div class="ttname"><a href="../../d5/d05/class_instructions_1_1_float_1_1_to_double.xhtml">Instructions::Float::ToDouble</a></div><div class="ttdef"><b>Definition:</b> float.h:32</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store__1_xhtml_ad726c1b44a3951549e4e1f17538fe826"><div class="ttname"><a href="../../d0/de3/class_instructions_1_1_float_1_1_store__1.xhtml#ad726c1b44a3951549e4e1f17538fe826">Instructions::Float::Store_1::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af6df298eabd5c35607c8a7e39b8489d7"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af6df298eabd5c35607c8a7e39b8489d7">Instructions::Opcodes::kFLOAD_1</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:81</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load_xhtml"><div class="ttname"><a href="../../da/d2a/class_instructions_1_1_float_1_1_load.xhtml">Instructions::Float::Load</a></div><div class="ttdef"><b>Definition:</b> float.h:152</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store__0_xhtml_a45f65bcd4ffb0ab294a8ec6003533894"><div class="ttname"><a href="../../d0/d1f/class_instructions_1_1_float_1_1_store__0.xhtml#a45f65bcd4ffb0ab294a8ec6003533894">Instructions::Float::Store_0::Store_0</a></div><div class="ttdeci">Store_0()</div><div class="ttdef"><b>Definition:</b> float.h:316</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store__0_xhtml"><div class="ttname"><a href="../../d0/d1f/class_instructions_1_1_float_1_1_store__0.xhtml">Instructions::Float::Store_0</a></div><div class="ttdef"><b>Definition:</b> float.h:314</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37aa11e4c54fd641cfbae20b5cc16bcef05"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aa11e4c54fd641cfbae20b5cc16bcef05">Instructions::Opcodes::kFASTORE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:72</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_div_xhtml_a7cd8321939134e24e52520c07e9ed678"><div class="ttname"><a href="../../db/d72/class_instructions_1_1_float_1_1_div.xhtml#a7cd8321939134e24e52520c07e9ed678">Instructions::Float::Div::Div</a></div><div class="ttdeci">Div()</div><div class="ttdef"><b>Definition:</b> float.h:144</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load_from_array_xhtml_a7aa8203e49b995ba0d42fd8dd8dd15a5"><div class="ttname"><a href="../../d0/df0/class_instructions_1_1_float_1_1_load_from_array.xhtml#a7aa8203e49b995ba0d42fd8dd8dd15a5">Instructions::Float::LoadFromArray::LoadFromArray</a></div><div class="ttdeci">LoadFromArray()</div><div class="ttdef"><b>Definition:</b> float.h:74</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_store_xhtml_accc4fc01feeeb8c7f9e9265fecc42312"><div class="ttname"><a href="../../d2/db2/class_instructions_1_1_float_1_1_store.xhtml#accc4fc01feeeb8c7f9e9265fecc42312">Instructions::Float::Store::Store</a></div><div class="ttdeci">Store()</div><div class="ttdef"><b>Definition:</b> float.h:275</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_load__0_xhtml"><div class="ttname"><a href="../../d9/d00/class_instructions_1_1_float_1_1_load__0.xhtml">Instructions::Float::Load_0</a></div><div class="ttdef"><b>Definition:</b> float.h:193</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a356fcf852a67cc4ec3106cdf798199c3"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a356fcf852a67cc4ec3106cdf798199c3">Instructions::Opcodes::kF2D</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:67</div></div>
<div class="ttc" id="aclass_instructions_1_1_float_1_1_sub_xhtml_a5a0b8144fe2d30333819952380999c08"><div class="ttname"><a href="../../db/d68/class_instructions_1_1_float_1_1_sub.xhtml#a5a0b8144fe2d30333819952380999c08">Instructions::Float::Sub::Sub</a></div><div class="ttdeci">Sub()</div><div class="ttdef"><b>Definition:</b> float.h:356</div></div>
<div class="ttc" id="aclass_memory_areas_1_1_thread_xhtml"><div class="ttname"><a href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a></div><div class="ttdef"><b>Definition:</b> thread.h:11</div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 2 2019 03:56:32 for JVM 8 SB 2019/2 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.16
</small></address>
</body>
</html>
