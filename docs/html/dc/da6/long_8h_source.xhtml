<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.16"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>JVM 8 SB 2019/2: include/instructions/instruction_set/long.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">JVM 8 SB 2019/2
   </div>
   <div id="projectbrief">projeto que visa fazer uma implementação simples da JVM 8</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.16 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_2843b2c750ff6b39dcfe98bf2554dba0.xhtml">instructions</a></li><li class="navelem"><a class="el" href="../../dir_7ef69e660d75507825e3f78a695283fd.xhtml">instruction_set</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">long.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../dc/da6/long_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_LONG_H_</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_LONG_H_</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/d5a/base_8h.xhtml">instructions/instruction_set/base.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/de6/opcodes_8h.xhtml">instructions/opcodes.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/d66/string_8h.xhtml">utils/string.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../da/d11/namespace_instructions.xhtml">Instructions</a> {</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d4/d66/namespace_instructions_1_1_long.xhtml">   12</a></span>&#160;<span class="keyword">namespace </span>Long {</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">   13</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml#ad59703a8c92679417682c8bef92a7ba1">   15</a></span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml#ad59703a8c92679417682c8bef92a7ba1">BaseLong</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a> &amp;tag) : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(tag) {}</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml#a8f346d09080da604765c2d5420670c8b">   17</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml#a8f346d09080da604765c2d5420670c8b">toBytecode</a>(</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  }</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml#a68ede168a08a07226f5b03c33f3ebf69">   25</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml#a68ede168a08a07226f5b03c33f3ebf69">toBytecode_json</a>(</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    ;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;};</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="../../da/de9/class_instructions_1_1_long_1_1_to_double.xhtml">   33</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/de9/class_instructions_1_1_long_1_1_to_double.xhtml">ToDouble</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../da/de9/class_instructions_1_1_long_1_1_to_double.xhtml#aad6ed631515852ac99237e959f67b422">   35</a></span>&#160;  <a class="code" href="../../da/de9/class_instructions_1_1_long_1_1_to_double.xhtml#aad6ed631515852ac99237e959f67b422">ToDouble</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a0ee2c67ba1dc629ca8e3f89dbe6e1627">kL2D</a>) {}</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../da/de9/class_instructions_1_1_long_1_1_to_double.xhtml#a156cf11499598b1315c555e18439c4d3">execute</a>(</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;};</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="../../d6/d24/class_instructions_1_1_long_1_1_to_float.xhtml">   43</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/d24/class_instructions_1_1_long_1_1_to_float.xhtml">ToFloat</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="../../d6/d24/class_instructions_1_1_long_1_1_to_float.xhtml#a0eff2e30402308b2f347a7fc6069a07c">   45</a></span>&#160;  <a class="code" href="../../d6/d24/class_instructions_1_1_long_1_1_to_float.xhtml#a0eff2e30402308b2f347a7fc6069a07c">ToFloat</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37acb69c7c817271e28292f0fbe2e452f59">kL2F</a>) {}</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d6/d24/class_instructions_1_1_long_1_1_to_float.xhtml#aa55f7f37f6fbe8c8ba0de81b8c1fc620">execute</a>(</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;};</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../d6/def/class_instructions_1_1_long_1_1_to_integer.xhtml">   53</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/def/class_instructions_1_1_long_1_1_to_integer.xhtml">ToInteger</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="../../d6/def/class_instructions_1_1_long_1_1_to_integer.xhtml#ac3780131c91054cd7d8643c6447b2100">   55</a></span>&#160;  <a class="code" href="../../d6/def/class_instructions_1_1_long_1_1_to_integer.xhtml#ac3780131c91054cd7d8643c6447b2100">ToInteger</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af30608c42043934b85070beb435f10e2">kL2I</a>) {}</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d6/def/class_instructions_1_1_long_1_1_to_integer.xhtml#a2aa72aa0cc730be9235b9dff616e892b">execute</a>(</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;};</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../df/df0/class_instructions_1_1_long_1_1_add.xhtml">   63</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../df/df0/class_instructions_1_1_long_1_1_add.xhtml">Add</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../df/df0/class_instructions_1_1_long_1_1_add.xhtml#a7b92fdb861c37eff857607a5a854fae7">   65</a></span>&#160;  <a class="code" href="../../df/df0/class_instructions_1_1_long_1_1_add.xhtml#a7b92fdb861c37eff857607a5a854fae7">Add</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a94dcfa635cb44922af0f858af13d77a8">kLADD</a>) {}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../df/df0/class_instructions_1_1_long_1_1_add.xhtml#a9104fb1e68d11a837e45459b1c40cff2">execute</a>(</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;};</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="../../de/d7c/class_instructions_1_1_long_1_1_load_from_array.xhtml">   73</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../de/d7c/class_instructions_1_1_long_1_1_load_from_array.xhtml">LoadFromArray</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../de/d7c/class_instructions_1_1_long_1_1_load_from_array.xhtml#a582b3c67621f1f1b54c88c012cbf50d2">   75</a></span>&#160;  <a class="code" href="../../de/d7c/class_instructions_1_1_long_1_1_load_from_array.xhtml#a582b3c67621f1f1b54c88c012cbf50d2">LoadFromArray</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae3b06a8f94166c64990f26ef6287b337">kLALOAD</a>) {}</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../de/d7c/class_instructions_1_1_long_1_1_load_from_array.xhtml#a91eb7239c92eca1603cfd5b5a003d959">execute</a>(</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;};</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../d0/de9/class_instructions_1_1_long_1_1_and.xhtml">   83</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/de9/class_instructions_1_1_long_1_1_and.xhtml">And</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="../../d0/de9/class_instructions_1_1_long_1_1_and.xhtml#a42c84a128f683deb71e4f4444be5244a">   85</a></span>&#160;  <a class="code" href="../../d0/de9/class_instructions_1_1_long_1_1_and.xhtml#a42c84a128f683deb71e4f4444be5244a">And</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a7dc165dc32e94a22d26ad0f2a1759360">kLAND</a>) {}</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d0/de9/class_instructions_1_1_long_1_1_and.xhtml#a39ede195d36a73d2d3d776858b699c9c">execute</a>(</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;};</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="../../d4/d04/class_instructions_1_1_long_1_1_store_into_array.xhtml">   93</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d04/class_instructions_1_1_long_1_1_store_into_array.xhtml">StoreIntoArray</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="../../d4/d04/class_instructions_1_1_long_1_1_store_into_array.xhtml#a866bdb6d3051b0520089ce2905306f1e">   95</a></span>&#160;  <a class="code" href="../../d4/d04/class_instructions_1_1_long_1_1_store_into_array.xhtml#a866bdb6d3051b0520089ce2905306f1e">StoreIntoArray</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aeeaa7a03aba4d633f7c55f78de7202dc">kLASTORE</a>) {}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d4/d04/class_instructions_1_1_long_1_1_store_into_array.xhtml#a695f4ec060050aa283667bb880125ecf">execute</a>(</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;};</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="../../d7/dbf/class_instructions_1_1_long_1_1_compare.xhtml">  103</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/dbf/class_instructions_1_1_long_1_1_compare.xhtml">Compare</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="../../d7/dbf/class_instructions_1_1_long_1_1_compare.xhtml#a2b524086ec2c953b586c7f3e174b27bf">  105</a></span>&#160;  <a class="code" href="../../d7/dbf/class_instructions_1_1_long_1_1_compare.xhtml#a2b524086ec2c953b586c7f3e174b27bf">Compare</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ac31a4ea06c9cc7deaab286ad8960d44f">kLCMP</a>) {}</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d7/dbf/class_instructions_1_1_long_1_1_compare.xhtml#a1b7af132499128a91e395fb3472538b7">execute</a>(</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;};</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="../../de/d7d/class_instructions_1_1_long_1_1_const__0.xhtml">  113</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../de/d7d/class_instructions_1_1_long_1_1_const__0.xhtml">Const_0</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="../../de/d7d/class_instructions_1_1_long_1_1_const__0.xhtml#a92effcb2d5a66152380bfa336fd25508">  115</a></span>&#160;  <a class="code" href="../../de/d7d/class_instructions_1_1_long_1_1_const__0.xhtml#a92effcb2d5a66152380bfa336fd25508">Const_0</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a7076d84b3ee6c6fe0fdf033dba3b05aa">kLCONST_0</a>) {}</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../de/d7d/class_instructions_1_1_long_1_1_const__0.xhtml#a5699efaf31a0b4a50e8e016c3abae259">execute</a>(</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;};</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="../../d1/dca/class_instructions_1_1_long_1_1_const__1.xhtml">  123</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/dca/class_instructions_1_1_long_1_1_const__1.xhtml">Const_1</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="../../d1/dca/class_instructions_1_1_long_1_1_const__1.xhtml#a36f4fb30259cbb105248cfc693c7e00b">  125</a></span>&#160;  <a class="code" href="../../d1/dca/class_instructions_1_1_long_1_1_const__1.xhtml#a36f4fb30259cbb105248cfc693c7e00b">Const_1</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a72da1184e5ca2404a4654d945fd42c35">kLCONST_1</a>) {}</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d1/dca/class_instructions_1_1_long_1_1_const__1.xhtml#a2e25027cf5930533ccbdb836123c10af">execute</a>(</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;};</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="../../d6/d8b/class_instructions_1_1_long_1_1_div.xhtml">  133</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/d8b/class_instructions_1_1_long_1_1_div.xhtml">Div</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="../../d6/d8b/class_instructions_1_1_long_1_1_div.xhtml#a9e6fdb7496827c1fea87a12731abdc42">  135</a></span>&#160;  <a class="code" href="../../d6/d8b/class_instructions_1_1_long_1_1_div.xhtml#a9e6fdb7496827c1fea87a12731abdc42">Div</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a006dad5025f98b7b576209d2c7a02f45">kLDIV</a>) {}</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d6/d8b/class_instructions_1_1_long_1_1_div.xhtml#aa40b5db43c42bd60b69e8703574129e0">execute</a>(</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;};</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml">  143</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml">Load</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml#a12bd615e1642f8df300cd99c2579cddd">  145</a></span>&#160;  <a class="code" href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml#a12bd615e1642f8df300cd99c2579cddd">Load</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a501b299a4d4e91a3a377ebe5bf4a709f">kLLOAD</a>) {}</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml#a0d644df82394d3f696611907d1409ee9">  147</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml#a0d644df82394d3f696611907d1409ee9">toBytecode</a>(</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      (*ss) &lt;&lt; index;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      (*ss) &lt;&lt; <span class="keywordtype">int</span>{index};</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      *delta_code = 1;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    (*ss) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml#ade51fa26cd9b1f5761fb1892489261c7">  166</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml#ade51fa26cd9b1f5761fb1892489261c7">toBytecode_json</a>(</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(index)};</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    *delta_code = 1;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(<span class="keywordtype">int</span>{index})};</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml#afc7ee925b27896f55848c2f3a76bef59">execute</a>(</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;};</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="../../dd/d38/class_instructions_1_1_long_1_1_load__0.xhtml">  185</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/d38/class_instructions_1_1_long_1_1_load__0.xhtml">Load_0</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="../../dd/d38/class_instructions_1_1_long_1_1_load__0.xhtml#a1dec28f7b5db3eaf0fa70123f52be736">  187</a></span>&#160;  <a class="code" href="../../dd/d38/class_instructions_1_1_long_1_1_load__0.xhtml#a1dec28f7b5db3eaf0fa70123f52be736">Load_0</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aa01bcd4d9a280cbaafd8a69d52e919d4">kLLOAD_0</a>) {}</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dd/d38/class_instructions_1_1_long_1_1_load__0.xhtml#a5144a47009e642729a217a8c07d13eac">execute</a>(</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;};</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="../../d7/dfb/class_instructions_1_1_long_1_1_load__1.xhtml">  195</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/dfb/class_instructions_1_1_long_1_1_load__1.xhtml">Load_1</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="../../d7/dfb/class_instructions_1_1_long_1_1_load__1.xhtml#a783fd4779293bac4879f2844ea872067">  197</a></span>&#160;  <a class="code" href="../../d7/dfb/class_instructions_1_1_long_1_1_load__1.xhtml#a783fd4779293bac4879f2844ea872067">Load_1</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a65d1bdf4e3e3782b5108adf5b47019a8">kLLOAD_1</a>) {}</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d7/dfb/class_instructions_1_1_long_1_1_load__1.xhtml#aec90bf8a1273725d005621f8055041e4">execute</a>(</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;};</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="../../dc/dda/class_instructions_1_1_long_1_1_load__2.xhtml">  205</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dc/dda/class_instructions_1_1_long_1_1_load__2.xhtml">Load_2</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="../../dc/dda/class_instructions_1_1_long_1_1_load__2.xhtml#a8d9db2e4df9ed90a7c07c86d8f22bf03">  207</a></span>&#160;  <a class="code" href="../../dc/dda/class_instructions_1_1_long_1_1_load__2.xhtml#a8d9db2e4df9ed90a7c07c86d8f22bf03">Load_2</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a5c00b1045f493f5cc1eec54a637cea8b">kLLOAD_2</a>) {}</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dc/dda/class_instructions_1_1_long_1_1_load__2.xhtml#a2e57353b1d2f40d48332887f5ea544fb">execute</a>(</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;};</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="../../d6/dc9/class_instructions_1_1_long_1_1_load__3.xhtml">  215</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/dc9/class_instructions_1_1_long_1_1_load__3.xhtml">Load_3</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="../../d6/dc9/class_instructions_1_1_long_1_1_load__3.xhtml#aa647ca5d40d65cecf088cc774462d73f">  217</a></span>&#160;  <a class="code" href="../../d6/dc9/class_instructions_1_1_long_1_1_load__3.xhtml#aa647ca5d40d65cecf088cc774462d73f">Load_3</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a31a088422cdc7246d4d3c87002ca8e73">kLLOAD_3</a>) {}</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d6/dc9/class_instructions_1_1_long_1_1_load__3.xhtml#a76e8b1dc79adc6a01b8fc16161931352">execute</a>(</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;};</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="../../d6/dc0/class_instructions_1_1_long_1_1_mul.xhtml">  225</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/dc0/class_instructions_1_1_long_1_1_mul.xhtml">Mul</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="../../d6/dc0/class_instructions_1_1_long_1_1_mul.xhtml#a46d4e8271b7d0f9038e79159fe1c8552">  227</a></span>&#160;  <a class="code" href="../../d6/dc0/class_instructions_1_1_long_1_1_mul.xhtml#a46d4e8271b7d0f9038e79159fe1c8552">Mul</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a9ddc9c31727c8bd4be6a113c9c38827d">kLMUL</a>) {}</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d6/dc0/class_instructions_1_1_long_1_1_mul.xhtml#a6893c417c625a03c7314489f6c42d4ad">execute</a>(</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;};</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="../../db/df5/class_instructions_1_1_long_1_1_neg.xhtml">  235</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/df5/class_instructions_1_1_long_1_1_neg.xhtml">Neg</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00237"></a><span class="lineno"><a class="line" href="../../db/df5/class_instructions_1_1_long_1_1_neg.xhtml#ab95d85966fd24c529b91687344cd9883">  237</a></span>&#160;  <a class="code" href="../../db/df5/class_instructions_1_1_long_1_1_neg.xhtml#ab95d85966fd24c529b91687344cd9883">Neg</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af4d632d3b0ef904be7713ad552e4e051">kLNEG</a>) {}</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../db/df5/class_instructions_1_1_long_1_1_neg.xhtml#a8a55cebe0e4e37e1a32082cfedd261a8">execute</a>(</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;};</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="../../dd/d18/class_instructions_1_1_long_1_1_or.xhtml">  245</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/d18/class_instructions_1_1_long_1_1_or.xhtml">Or</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="../../dd/d18/class_instructions_1_1_long_1_1_or.xhtml#ac5fbb7385c1546e33bccb5d747ed1c64">  247</a></span>&#160;  <a class="code" href="../../dd/d18/class_instructions_1_1_long_1_1_or.xhtml#ac5fbb7385c1546e33bccb5d747ed1c64">Or</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aef499e2a4c669350186b1574e633ab06">kLOR</a>) {}</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dd/d18/class_instructions_1_1_long_1_1_or.xhtml#ab348cf329f604981175123d5f87a2750">execute</a>(</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;};</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="../../d5/d24/class_instructions_1_1_long_1_1_rem.xhtml">  255</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d5/d24/class_instructions_1_1_long_1_1_rem.xhtml">Rem</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="../../d5/d24/class_instructions_1_1_long_1_1_rem.xhtml#a021cbec260d39f3cad5b9c62069b4e33">  257</a></span>&#160;  <a class="code" href="../../d5/d24/class_instructions_1_1_long_1_1_rem.xhtml#a021cbec260d39f3cad5b9c62069b4e33">Rem</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ab70658b93da707dc24a15baca089eb41">kLREM</a>) {}</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d5/d24/class_instructions_1_1_long_1_1_rem.xhtml#a6a31e676d2b9f55425f755da5bea3922">execute</a>(</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;};</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="../../d7/de4/class_instructions_1_1_long_1_1_return.xhtml">  265</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/de4/class_instructions_1_1_long_1_1_return.xhtml">Return</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="../../d7/de4/class_instructions_1_1_long_1_1_return.xhtml#ae7ad779ec098d6722808de309e6ed9eb">  267</a></span>&#160;  <a class="code" href="../../d7/de4/class_instructions_1_1_long_1_1_return.xhtml#ae7ad779ec098d6722808de309e6ed9eb">Return</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae1e314f4ce79ea37a980b952d2dfc166">kLRETURN</a>) {}</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d7/de4/class_instructions_1_1_long_1_1_return.xhtml#a1ce344289dfbd42389378a98cca6b46a">execute</a>(</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;};</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; </div>
<div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="../../da/d23/class_instructions_1_1_long_1_1_shift_left.xhtml">  275</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d23/class_instructions_1_1_long_1_1_shift_left.xhtml">ShiftLeft</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="../../da/d23/class_instructions_1_1_long_1_1_shift_left.xhtml#ad3cf06ad3ea88cf57562f97abf5fc603">  277</a></span>&#160;  <a class="code" href="../../da/d23/class_instructions_1_1_long_1_1_shift_left.xhtml#ad3cf06ad3ea88cf57562f97abf5fc603">ShiftLeft</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a842ba0558567dc8bb7dfec563a4ca396">kLSHL</a>) {}</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../da/d23/class_instructions_1_1_long_1_1_shift_left.xhtml#a18c37f3222844c9e7e187298dff48df4">execute</a>(</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;};</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; </div>
<div class="line"><a name="l00285"></a><span class="lineno"><a class="line" href="../../d7/de5/class_instructions_1_1_long_1_1_arithmetic_shift_right.xhtml">  285</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/de5/class_instructions_1_1_long_1_1_arithmetic_shift_right.xhtml">ArithmeticShiftRight</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="../../d7/de5/class_instructions_1_1_long_1_1_arithmetic_shift_right.xhtml#af93efbe4227ad70760c36e64c2566e46">  287</a></span>&#160;  <a class="code" href="../../d7/de5/class_instructions_1_1_long_1_1_arithmetic_shift_right.xhtml#af93efbe4227ad70760c36e64c2566e46">ArithmeticShiftRight</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aebaa0fb58cc89a873eaf1e1d3a61a832">kLSHR</a>) {}</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d7/de5/class_instructions_1_1_long_1_1_arithmetic_shift_right.xhtml#a3349ca446168e9b4ed26e5664c53937f">execute</a>(</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;};</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml">  295</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml">Store</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00297"></a><span class="lineno"><a class="line" href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml#a71452d468dba52a416943ac8e863a76b">  297</a></span>&#160;  <a class="code" href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml#a71452d468dba52a416943ac8e863a76b">Store</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af640f32a3fb8f26dd0e3e54c54e49603">kLSTORE</a>) {}</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160; </div>
<div class="line"><a name="l00299"></a><span class="lineno"><a class="line" href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml#a6ecd897d761bd2286f536ae72f48c786">  299</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml#a6ecd897d761bd2286f536ae72f48c786">toBytecode</a>(</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;      (*ss) &lt;&lt; index;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;      (*ss) &lt;&lt; <span class="keywordtype">int</span>{index};</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;      *delta_code = 1;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    }</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    (*ss) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160; </div>
<div class="line"><a name="l00317"></a><span class="lineno"><a class="line" href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml#a9f34f0bc093b998f982664b346b5cb56">  317</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml#a9f34f0bc093b998f982664b346b5cb56">toBytecode_json</a>(</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;      <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(index)};</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    }</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    *delta_code = 1;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(<span class="keywordtype">int</span>{index})};</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  }</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml#a681230479ce61c4384addc025164a95c">execute</a>(</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;};</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160; </div>
<div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="../../db/d10/class_instructions_1_1_long_1_1_store__0.xhtml">  336</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/d10/class_instructions_1_1_long_1_1_store__0.xhtml">Store_0</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00338"></a><span class="lineno"><a class="line" href="../../db/d10/class_instructions_1_1_long_1_1_store__0.xhtml#a58f9d5336d8ad4ae755403636e33d06a">  338</a></span>&#160;  <a class="code" href="../../db/d10/class_instructions_1_1_long_1_1_store__0.xhtml#a58f9d5336d8ad4ae755403636e33d06a">Store_0</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a2fc11e9a5b31c6f7b1838c6c94df1047">kLSTORE_0</a>) {}</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; </div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../db/d10/class_instructions_1_1_long_1_1_store__0.xhtml#aacea3008cee8ea84b98109bc9a58d262">execute</a>(</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;};</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160; </div>
<div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="../../da/d5a/class_instructions_1_1_long_1_1_store__1.xhtml">  346</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d5a/class_instructions_1_1_long_1_1_store__1.xhtml">Store_1</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="../../da/d5a/class_instructions_1_1_long_1_1_store__1.xhtml#a63289d39ca32f35a0ffc26af91c4649c">  348</a></span>&#160;  <a class="code" href="../../da/d5a/class_instructions_1_1_long_1_1_store__1.xhtml#a63289d39ca32f35a0ffc26af91c4649c">Store_1</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ab6b3d473c9ce4c867bbdec6928e1d183">kLSTORE_1</a>) {}</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160; </div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../da/d5a/class_instructions_1_1_long_1_1_store__1.xhtml#a52357e131eb4714c3241b178e82e6970">execute</a>(</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;};</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160; </div>
<div class="line"><a name="l00356"></a><span class="lineno"><a class="line" href="../../d7/da1/class_instructions_1_1_long_1_1_store__2.xhtml">  356</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/da1/class_instructions_1_1_long_1_1_store__2.xhtml">Store_2</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="../../d7/da1/class_instructions_1_1_long_1_1_store__2.xhtml#aab0e3b55fcbbb8f28338229f0f2a2e7b">  358</a></span>&#160;  <a class="code" href="../../d7/da1/class_instructions_1_1_long_1_1_store__2.xhtml#aab0e3b55fcbbb8f28338229f0f2a2e7b">Store_2</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8318932ceb8b858a3c9a0a3c31d03308">kLSTORE_2</a>) {}</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160; </div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d7/da1/class_instructions_1_1_long_1_1_store__2.xhtml#ad51b26a98191a61faab86be04cf68bce">execute</a>(</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;};</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160; </div>
<div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="../../d8/d87/class_instructions_1_1_long_1_1_store__3.xhtml">  366</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/d87/class_instructions_1_1_long_1_1_store__3.xhtml">Store_3</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00368"></a><span class="lineno"><a class="line" href="../../d8/d87/class_instructions_1_1_long_1_1_store__3.xhtml#a4de38d8c6d4d01885f68818b8c56dcb9">  368</a></span>&#160;  <a class="code" href="../../d8/d87/class_instructions_1_1_long_1_1_store__3.xhtml#a4de38d8c6d4d01885f68818b8c56dcb9">Store_3</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a96f9e5561ffa1edf7eee2ea3435f3745">kLSTORE_3</a>) {}</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160; </div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d8/d87/class_instructions_1_1_long_1_1_store__3.xhtml#a087aaa0db9a7375c0082b142c05303e4">execute</a>(</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;};</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160; </div>
<div class="line"><a name="l00376"></a><span class="lineno"><a class="line" href="../../dc/de6/class_instructions_1_1_long_1_1_sub.xhtml">  376</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dc/de6/class_instructions_1_1_long_1_1_sub.xhtml">Sub</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00378"></a><span class="lineno"><a class="line" href="../../dc/de6/class_instructions_1_1_long_1_1_sub.xhtml#ab270dff44d6b0a2de84d2513846c82de">  378</a></span>&#160;  <a class="code" href="../../dc/de6/class_instructions_1_1_long_1_1_sub.xhtml#ab270dff44d6b0a2de84d2513846c82de">Sub</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37abbdf5e2c80983a3f0a797b4e9a2cff69">kLSUB</a>) {}</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160; </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dc/de6/class_instructions_1_1_long_1_1_sub.xhtml#a613fe3b53e06a0078a642241f46603b0">execute</a>(</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;};</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160; </div>
<div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="../../d8/dcb/class_instructions_1_1_long_1_1_logical_shift_right.xhtml">  386</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/dcb/class_instructions_1_1_long_1_1_logical_shift_right.xhtml">LogicalShiftRight</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00388"></a><span class="lineno"><a class="line" href="../../d8/dcb/class_instructions_1_1_long_1_1_logical_shift_right.xhtml#a133fda0a53d5757daa45ab115191cd40">  388</a></span>&#160;  <a class="code" href="../../d8/dcb/class_instructions_1_1_long_1_1_logical_shift_right.xhtml#a133fda0a53d5757daa45ab115191cd40">LogicalShiftRight</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a85fffc11627c5b6bcdf9095a39fae435">kLUSHR</a>) {}</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160; </div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d8/dcb/class_instructions_1_1_long_1_1_logical_shift_right.xhtml#a91d0690f3d7dfe07aaba4f7d4c68c814">execute</a>(</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;};</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160; </div>
<div class="line"><a name="l00396"></a><span class="lineno"><a class="line" href="../../d4/d3e/class_instructions_1_1_long_1_1_xor.xhtml">  396</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d3e/class_instructions_1_1_long_1_1_xor.xhtml">Xor</a> : <span class="keyword">public</span> <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a> {</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="../../d4/d3e/class_instructions_1_1_long_1_1_xor.xhtml#a1c564a05e7f9470f17b9387717891e90">  398</a></span>&#160;  <a class="code" href="../../d4/d3e/class_instructions_1_1_long_1_1_xor.xhtml#a1c564a05e7f9470f17b9387717891e90">Xor</a>() : <a class="code" href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">BaseLong</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a2f58174642d3c4a49cd1af2f4ef96d8f">kLXOR</a>) {}</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160; </div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d4/d3e/class_instructions_1_1_long_1_1_xor.xhtml#ae22918f3e84d4b20fc3975f710e1bbed">execute</a>(</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;};</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;}  <span class="comment">// namespace Long</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;}  <span class="comment">// namespace Instructions</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160; </div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="preprocessor">#endif  // INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_LONG_H_</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store_xhtml_a6ecd897d761bd2286f536ae72f48c786"><div class="ttname"><a href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml#a6ecd897d761bd2286f536ae72f48c786">Instructions::Long::Store::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> long.h:299</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load__0_xhtml_a5144a47009e642729a217a8c07d13eac"><div class="ttname"><a href="../../dd/d38/class_instructions_1_1_long_1_1_load__0.xhtml#a5144a47009e642729a217a8c07d13eac">Instructions::Long::Load_0::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load_xhtml_a12bd615e1642f8df300cd99c2579cddd"><div class="ttname"><a href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml#a12bd615e1642f8df300cd99c2579cddd">Instructions::Long::Load::Load</a></div><div class="ttdeci">Load()</div><div class="ttdef"><b>Definition:</b> long.h:145</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_logical_shift_right_xhtml_a133fda0a53d5757daa45ab115191cd40"><div class="ttname"><a href="../../d8/dcb/class_instructions_1_1_long_1_1_logical_shift_right.xhtml#a133fda0a53d5757daa45ab115191cd40">Instructions::Long::LogicalShiftRight::LogicalShiftRight</a></div><div class="ttdeci">LogicalShiftRight()</div><div class="ttdef"><b>Definition:</b> long.h:388</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_arithmetic_shift_right_xhtml_af93efbe4227ad70760c36e64c2566e46"><div class="ttname"><a href="../../d7/de5/class_instructions_1_1_long_1_1_arithmetic_shift_right.xhtml#af93efbe4227ad70760c36e64c2566e46">Instructions::Long::ArithmeticShiftRight::ArithmeticShiftRight</a></div><div class="ttdeci">ArithmeticShiftRight()</div><div class="ttdef"><b>Definition:</b> long.h:287</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af30608c42043934b85070beb435f10e2"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af30608c42043934b85070beb435f10e2">Instructions::Opcodes::kL2I</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:165</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_and_xhtml_a42c84a128f683deb71e4f4444be5244a"><div class="ttname"><a href="../../d0/de9/class_instructions_1_1_long_1_1_and.xhtml#a42c84a128f683deb71e4f4444be5244a">Instructions::Long::And::And</a></div><div class="ttdeci">And()</div><div class="ttdef"><b>Definition:</b> long.h:85</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load_xhtml_afc7ee925b27896f55848c2f3a76bef59"><div class="ttname"><a href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml#afc7ee925b27896f55848c2f3a76bef59">Instructions::Long::Load::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load__3_xhtml_a76e8b1dc79adc6a01b8fc16161931352"><div class="ttname"><a href="../../d6/dc9/class_instructions_1_1_long_1_1_load__3.xhtml#a76e8b1dc79adc6a01b8fc16161931352">Instructions::Long::Load_3::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_shift_left_xhtml_a18c37f3222844c9e7e187298dff48df4"><div class="ttname"><a href="../../da/d23/class_instructions_1_1_long_1_1_shift_left.xhtml#a18c37f3222844c9e7e187298dff48df4">Instructions::Long::ShiftLeft::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_sub_xhtml_ab270dff44d6b0a2de84d2513846c82de"><div class="ttname"><a href="../../dc/de6/class_instructions_1_1_long_1_1_sub.xhtml#ab270dff44d6b0a2de84d2513846c82de">Instructions::Long::Sub::Sub</a></div><div class="ttdeci">Sub()</div><div class="ttdef"><b>Definition:</b> long.h:378</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a85fffc11627c5b6bcdf9095a39fae435"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a85fffc11627c5b6bcdf9095a39fae435">Instructions::Opcodes::kLUSHR</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:196</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load__2_xhtml_a2e57353b1d2f40d48332887f5ea544fb"><div class="ttname"><a href="../../dc/dda/class_instructions_1_1_long_1_1_load__2.xhtml#a2e57353b1d2f40d48332887f5ea544fb">Instructions::Long::Load_2::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instructions::Instruction</a></div><div class="ttdef"><b>Definition:</b> base.h:15</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load_from_array_xhtml_a582b3c67621f1f1b54c88c012cbf50d2"><div class="ttname"><a href="../../de/d7c/class_instructions_1_1_long_1_1_load_from_array.xhtml#a582b3c67621f1f1b54c88c012cbf50d2">Instructions::Long::LoadFromArray::LoadFromArray</a></div><div class="ttdeci">LoadFromArray()</div><div class="ttdef"><b>Definition:</b> long.h:75</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_compare_xhtml_a1b7af132499128a91e395fb3472538b7"><div class="ttname"><a href="../../d7/dbf/class_instructions_1_1_long_1_1_compare.xhtml#a1b7af132499128a91e395fb3472538b7">Instructions::Long::Compare::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37acb69c7c817271e28292f0fbe2e452f59"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37acb69c7c817271e28292f0fbe2e452f59">Instructions::Opcodes::kL2F</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:164</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store__0_xhtml_a58f9d5336d8ad4ae755403636e33d06a"><div class="ttname"><a href="../../db/d10/class_instructions_1_1_long_1_1_store__0.xhtml#a58f9d5336d8ad4ae755403636e33d06a">Instructions::Long::Store_0::Store_0</a></div><div class="ttdeci">Store_0()</div><div class="ttdef"><b>Definition:</b> long.h:338</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load__1_xhtml"><div class="ttname"><a href="../../d7/dfb/class_instructions_1_1_long_1_1_load__1.xhtml">Instructions::Long::Load_1</a></div><div class="ttdef"><b>Definition:</b> long.h:195</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_or_xhtml"><div class="ttname"><a href="../../dd/d18/class_instructions_1_1_long_1_1_or.xhtml">Instructions::Long::Or</a></div><div class="ttdef"><b>Definition:</b> long.h:245</div></div>
<div class="ttc" id="abase_8h_xhtml"><div class="ttname"><a href="../../d3/d5a/base_8h.xhtml">base.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_div_xhtml"><div class="ttname"><a href="../../d6/d8b/class_instructions_1_1_long_1_1_div.xhtml">Instructions::Long::Div</a></div><div class="ttdef"><b>Definition:</b> long.h:133</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_to_float_xhtml_aa55f7f37f6fbe8c8ba0de81b8c1fc620"><div class="ttname"><a href="../../d6/d24/class_instructions_1_1_long_1_1_to_float.xhtml#aa55f7f37f6fbe8c8ba0de81b8c1fc620">Instructions::Long::ToFloat::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store__2_xhtml_ad51b26a98191a61faab86be04cf68bce"><div class="ttname"><a href="../../d7/da1/class_instructions_1_1_long_1_1_store__2.xhtml#ad51b26a98191a61faab86be04cf68bce">Instructions::Long::Store_2::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_base_long_xhtml_a8f346d09080da604765c2d5420670c8b"><div class="ttname"><a href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml#a8f346d09080da604765c2d5420670c8b">Instructions::Long::BaseLong::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> long.h:17</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load__0_xhtml_a1dec28f7b5db3eaf0fa70123f52be736"><div class="ttname"><a href="../../dd/d38/class_instructions_1_1_long_1_1_load__0.xhtml#a1dec28f7b5db3eaf0fa70123f52be736">Instructions::Long::Load_0::Load_0</a></div><div class="ttdeci">Load_0()</div><div class="ttdef"><b>Definition:</b> long.h:187</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_const__0_xhtml_a5699efaf31a0b4a50e8e016c3abae259"><div class="ttname"><a href="../../de/d7d/class_instructions_1_1_long_1_1_const__0.xhtml#a5699efaf31a0b4a50e8e016c3abae259">Instructions::Long::Const_0::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_to_float_xhtml_a0eff2e30402308b2f347a7fc6069a07c"><div class="ttname"><a href="../../d6/d24/class_instructions_1_1_long_1_1_to_float.xhtml#a0eff2e30402308b2f347a7fc6069a07c">Instructions::Long::ToFloat::ToFloat</a></div><div class="ttdeci">ToFloat()</div><div class="ttdef"><b>Definition:</b> long.h:45</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_to_integer_xhtml"><div class="ttname"><a href="../../d6/def/class_instructions_1_1_long_1_1_to_integer.xhtml">Instructions::Long::ToInteger</a></div><div class="ttdef"><b>Definition:</b> long.h:53</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_to_integer_xhtml_ac3780131c91054cd7d8643c6447b2100"><div class="ttname"><a href="../../d6/def/class_instructions_1_1_long_1_1_to_integer.xhtml#ac3780131c91054cd7d8643c6447b2100">Instructions::Long::ToInteger::ToInteger</a></div><div class="ttdeci">ToInteger()</div><div class="ttdef"><b>Definition:</b> long.h:55</div></div>
<div class="ttc" id="astring_8h_xhtml"><div class="ttname"><a href="../../da/d66/string_8h.xhtml">string.h</a></div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a2fc11e9a5b31c6f7b1838c6c94df1047"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a2fc11e9a5b31c6f7b1838c6c94df1047">Instructions::Opcodes::kLSTORE_0</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:191</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_const__1_xhtml"><div class="ttname"><a href="../../d1/dca/class_instructions_1_1_long_1_1_const__1.xhtml">Instructions::Long::Const_1</a></div><div class="ttdef"><b>Definition:</b> long.h:123</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_to_double_xhtml"><div class="ttname"><a href="../../da/de9/class_instructions_1_1_long_1_1_to_double.xhtml">Instructions::Long::ToDouble</a></div><div class="ttdef"><b>Definition:</b> long.h:33</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_xor_xhtml"><div class="ttname"><a href="../../d4/d3e/class_instructions_1_1_long_1_1_xor.xhtml">Instructions::Long::Xor</a></div><div class="ttdef"><b>Definition:</b> long.h:396</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_return_xhtml"><div class="ttname"><a href="../../d7/de4/class_instructions_1_1_long_1_1_return.xhtml">Instructions::Long::Return</a></div><div class="ttdef"><b>Definition:</b> long.h:265</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_or_xhtml_ac5fbb7385c1546e33bccb5d747ed1c64"><div class="ttname"><a href="../../dd/d18/class_instructions_1_1_long_1_1_or.xhtml#ac5fbb7385c1546e33bccb5d747ed1c64">Instructions::Long::Or::Or</a></div><div class="ttdeci">Or()</div><div class="ttdef"><b>Definition:</b> long.h:247</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a7dc165dc32e94a22d26ad0f2a1759360"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a7dc165dc32e94a22d26ad0f2a1759360">Instructions::Opcodes::kLAND</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:168</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a9ddc9c31727c8bd4be6a113c9c38827d"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a9ddc9c31727c8bd4be6a113c9c38827d">Instructions::Opcodes::kLMUL</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:182</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ac31a4ea06c9cc7deaab286ad8960d44f"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ac31a4ea06c9cc7deaab286ad8960d44f">Instructions::Opcodes::kLCMP</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:170</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store__1_xhtml"><div class="ttname"><a href="../../da/d5a/class_instructions_1_1_long_1_1_store__1.xhtml">Instructions::Long::Store_1</a></div><div class="ttdef"><b>Definition:</b> long.h:346</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_add_xhtml_a9104fb1e68d11a837e45459b1c40cff2"><div class="ttname"><a href="../../df/df0/class_instructions_1_1_long_1_1_add.xhtml#a9104fb1e68d11a837e45459b1c40cff2">Instructions::Long::Add::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_ab765ddcb61c4d60f2647154d87f97ae2"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Instructions::Opcodes::getMnemonic</a></div><div class="ttdeci">std::string getMnemonic(const Utils::Types::u1 &amp;opcode)</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store__1_xhtml_a52357e131eb4714c3241b178e82e6970"><div class="ttname"><a href="../../da/d5a/class_instructions_1_1_long_1_1_store__1.xhtml#a52357e131eb4714c3241b178e82e6970">Instructions::Long::Store_1::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store_xhtml"><div class="ttname"><a href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml">Instructions::Long::Store</a></div><div class="ttdef"><b>Definition:</b> long.h:295</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ae3b06a8f94166c64990f26ef6287b337"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae3b06a8f94166c64990f26ef6287b337">Instructions::Opcodes::kLALOAD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:167</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a006dad5025f98b7b576209d2c7a02f45"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a006dad5025f98b7b576209d2c7a02f45">Instructions::Opcodes::kLDIV</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:176</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_return_xhtml_a1ce344289dfbd42389378a98cca6b46a"><div class="ttname"><a href="../../d7/de4/class_instructions_1_1_long_1_1_return.xhtml#a1ce344289dfbd42389378a98cca6b46a">Instructions::Long::Return::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_compare_xhtml_a2b524086ec2c953b586c7f3e174b27bf"><div class="ttname"><a href="../../d7/dbf/class_instructions_1_1_long_1_1_compare.xhtml#a2b524086ec2c953b586c7f3e174b27bf">Instructions::Long::Compare::Compare</a></div><div class="ttdeci">Compare()</div><div class="ttdef"><b>Definition:</b> long.h:105</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ab6b3d473c9ce4c867bbdec6928e1d183"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ab6b3d473c9ce4c867bbdec6928e1d183">Instructions::Opcodes::kLSTORE_1</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:192</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_or_xhtml_ab348cf329f604981175123d5f87a2750"><div class="ttname"><a href="../../dd/d18/class_instructions_1_1_long_1_1_or.xhtml#ab348cf329f604981175123d5f87a2750">Instructions::Long::Or::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a8318932ceb8b858a3c9a0a3c31d03308"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8318932ceb8b858a3c9a0a3c31d03308">Instructions::Opcodes::kLSTORE_2</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:193</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a72da1184e5ca2404a4654d945fd42c35"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a72da1184e5ca2404a4654d945fd42c35">Instructions::Opcodes::kLCONST_1</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:172</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37abbdf5e2c80983a3f0a797b4e9a2cff69"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37abbdf5e2c80983a3f0a797b4e9a2cff69">Instructions::Opcodes::kLSUB</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:195</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load__2_xhtml_a8d9db2e4df9ed90a7c07c86d8f22bf03"><div class="ttname"><a href="../../dc/dda/class_instructions_1_1_long_1_1_load__2.xhtml#a8d9db2e4df9ed90a7c07c86d8f22bf03">Instructions::Long::Load_2::Load_2</a></div><div class="ttdeci">Load_2()</div><div class="ttdef"><b>Definition:</b> long.h:207</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_sub_xhtml_a613fe3b53e06a0078a642241f46603b0"><div class="ttname"><a href="../../dc/de6/class_instructions_1_1_long_1_1_sub.xhtml#a613fe3b53e06a0078a642241f46603b0">Instructions::Long::Sub::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_add_xhtml"><div class="ttname"><a href="../../df/df0/class_instructions_1_1_long_1_1_add.xhtml">Instructions::Long::Add</a></div><div class="ttdef"><b>Definition:</b> long.h:63</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load__3_xhtml_aa647ca5d40d65cecf088cc774462d73f"><div class="ttname"><a href="../../d6/dc9/class_instructions_1_1_long_1_1_load__3.xhtml#aa647ca5d40d65cecf088cc774462d73f">Instructions::Long::Load_3::Load_3</a></div><div class="ttdeci">Load_3()</div><div class="ttdef"><b>Definition:</b> long.h:217</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_and_xhtml"><div class="ttname"><a href="../../d0/de9/class_instructions_1_1_long_1_1_and.xhtml">Instructions::Long::And</a></div><div class="ttdef"><b>Definition:</b> long.h:83</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load_from_array_xhtml_a91eb7239c92eca1603cfd5b5a003d959"><div class="ttname"><a href="../../de/d7c/class_instructions_1_1_long_1_1_load_from_array.xhtml#a91eb7239c92eca1603cfd5b5a003d959">Instructions::Long::LoadFromArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_sub_xhtml"><div class="ttname"><a href="../../dc/de6/class_instructions_1_1_long_1_1_sub.xhtml">Instructions::Long::Sub</a></div><div class="ttdef"><b>Definition:</b> long.h:376</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37aef499e2a4c669350186b1574e633ab06"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aef499e2a4c669350186b1574e633ab06">Instructions::Opcodes::kLOR</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:185</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_logical_shift_right_xhtml_a91d0690f3d7dfe07aaba4f7d4c68c814"><div class="ttname"><a href="../../d8/dcb/class_instructions_1_1_long_1_1_logical_shift_right.xhtml#a91d0690f3d7dfe07aaba4f7d4c68c814">Instructions::Long::LogicalShiftRight::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml_abce4218201520f9ca8880bda8ab78e40"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">Instructions::Instruction::opcode</a></div><div class="ttdeci">const Utils::Types::u1 opcode</div><div class="ttdef"><b>Definition:</b> base.h:35</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store_xhtml_a681230479ce61c4384addc025164a95c"><div class="ttname"><a href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml#a681230479ce61c4384addc025164a95c">Instructions::Long::Store::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_rem_xhtml_a021cbec260d39f3cad5b9c62069b4e33"><div class="ttname"><a href="../../d5/d24/class_instructions_1_1_long_1_1_rem.xhtml#a021cbec260d39f3cad5b9c62069b4e33">Instructions::Long::Rem::Rem</a></div><div class="ttdeci">Rem()</div><div class="ttdef"><b>Definition:</b> long.h:257</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_to_integer_xhtml_a2aa72aa0cc730be9235b9dff616e892b"><div class="ttname"><a href="../../d6/def/class_instructions_1_1_long_1_1_to_integer.xhtml#a2aa72aa0cc730be9235b9dff616e892b">Instructions::Long::ToInteger::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_rem_xhtml_a6a31e676d2b9f55425f755da5bea3922"><div class="ttname"><a href="../../d5/d24/class_instructions_1_1_long_1_1_rem.xhtml#a6a31e676d2b9f55425f755da5bea3922">Instructions::Long::Rem::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_neg_xhtml_ab95d85966fd24c529b91687344cd9883"><div class="ttname"><a href="../../db/df5/class_instructions_1_1_long_1_1_neg.xhtml#ab95d85966fd24c529b91687344cd9883">Instructions::Long::Neg::Neg</a></div><div class="ttdeci">Neg()</div><div class="ttdef"><b>Definition:</b> long.h:237</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_div_xhtml_aa40b5db43c42bd60b69e8703574129e0"><div class="ttname"><a href="../../d6/d8b/class_instructions_1_1_long_1_1_div.xhtml#aa40b5db43c42bd60b69e8703574129e0">Instructions::Long::Div::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load__1_xhtml_a783fd4779293bac4879f2844ea872067"><div class="ttname"><a href="../../d7/dfb/class_instructions_1_1_long_1_1_load__1.xhtml#a783fd4779293bac4879f2844ea872067">Instructions::Long::Load_1::Load_1</a></div><div class="ttdeci">Load_1()</div><div class="ttdef"><b>Definition:</b> long.h:197</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a2f58174642d3c4a49cd1af2f4ef96d8f"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a2f58174642d3c4a49cd1af2f4ef96d8f">Instructions::Opcodes::kLXOR</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:197</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_logical_shift_right_xhtml"><div class="ttname"><a href="../../d8/dcb/class_instructions_1_1_long_1_1_logical_shift_right.xhtml">Instructions::Long::LogicalShiftRight</a></div><div class="ttdef"><b>Definition:</b> long.h:386</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_to_double_xhtml_aad6ed631515852ac99237e959f67b422"><div class="ttname"><a href="../../da/de9/class_instructions_1_1_long_1_1_to_double.xhtml#aad6ed631515852ac99237e959f67b422">Instructions::Long::ToDouble::ToDouble</a></div><div class="ttdeci">ToDouble()</div><div class="ttdef"><b>Definition:</b> long.h:35</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_compare_xhtml"><div class="ttname"><a href="../../d7/dbf/class_instructions_1_1_long_1_1_compare.xhtml">Instructions::Long::Compare</a></div><div class="ttdef"><b>Definition:</b> long.h:103</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a5c00b1045f493f5cc1eec54a637cea8b"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a5c00b1045f493f5cc1eec54a637cea8b">Instructions::Opcodes::kLLOAD_2</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:180</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store_xhtml_a71452d468dba52a416943ac8e863a76b"><div class="ttname"><a href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml#a71452d468dba52a416943ac8e863a76b">Instructions::Long::Store::Store</a></div><div class="ttdeci">Store()</div><div class="ttdef"><b>Definition:</b> long.h:297</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load__1_xhtml_aec90bf8a1273725d005621f8055041e4"><div class="ttname"><a href="../../d7/dfb/class_instructions_1_1_long_1_1_load__1.xhtml#aec90bf8a1273725d005621f8055041e4">Instructions::Long::Load_1::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load__0_xhtml"><div class="ttname"><a href="../../dd/d38/class_instructions_1_1_long_1_1_load__0.xhtml">Instructions::Long::Load_0</a></div><div class="ttdef"><b>Definition:</b> long.h:185</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_const__1_xhtml_a2e25027cf5930533ccbdb836123c10af"><div class="ttname"><a href="../../d1/dca/class_instructions_1_1_long_1_1_const__1.xhtml#a2e25027cf5930533ccbdb836123c10af">Instructions::Long::Const_1::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ab70658b93da707dc24a15baca089eb41"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ab70658b93da707dc24a15baca089eb41">Instructions::Opcodes::kLREM</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:186</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a0ee2c67ba1dc629ca8e3f89dbe6e1627"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a0ee2c67ba1dc629ca8e3f89dbe6e1627">Instructions::Opcodes::kL2D</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:163</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_xor_xhtml_a1c564a05e7f9470f17b9387717891e90"><div class="ttname"><a href="../../d4/d3e/class_instructions_1_1_long_1_1_xor.xhtml#a1c564a05e7f9470f17b9387717891e90">Instructions::Long::Xor::Xor</a></div><div class="ttdeci">Xor()</div><div class="ttdef"><b>Definition:</b> long.h:398</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load_xhtml_a0d644df82394d3f696611907d1409ee9"><div class="ttname"><a href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml#a0d644df82394d3f696611907d1409ee9">Instructions::Long::Load::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> long.h:147</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a96f9e5561ffa1edf7eee2ea3435f3745"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a96f9e5561ffa1edf7eee2ea3435f3745">Instructions::Opcodes::kLSTORE_3</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:194</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load__3_xhtml"><div class="ttname"><a href="../../d6/dc9/class_instructions_1_1_long_1_1_load__3.xhtml">Instructions::Long::Load_3</a></div><div class="ttdef"><b>Definition:</b> long.h:215</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_base_long_xhtml"><div class="ttname"><a href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml">Instructions::Long::BaseLong</a></div><div class="ttdef"><b>Definition:</b> long.h:13</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_const__1_xhtml_a36f4fb30259cbb105248cfc693c7e00b"><div class="ttname"><a href="../../d1/dca/class_instructions_1_1_long_1_1_const__1.xhtml#a36f4fb30259cbb105248cfc693c7e00b">Instructions::Long::Const_1::Const_1</a></div><div class="ttdeci">Const_1()</div><div class="ttdef"><b>Definition:</b> long.h:125</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ae1e314f4ce79ea37a980b952d2dfc166"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae1e314f4ce79ea37a980b952d2dfc166">Instructions::Opcodes::kLRETURN</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:187</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store__0_xhtml"><div class="ttname"><a href="../../db/d10/class_instructions_1_1_long_1_1_store__0.xhtml">Instructions::Long::Store_0</a></div><div class="ttdef"><b>Definition:</b> long.h:336</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37aeeaa7a03aba4d633f7c55f78de7202dc"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aeeaa7a03aba4d633f7c55f78de7202dc">Instructions::Opcodes::kLASTORE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:169</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_add_xhtml_a7b92fdb861c37eff857607a5a854fae7"><div class="ttname"><a href="../../df/df0/class_instructions_1_1_long_1_1_add.xhtml#a7b92fdb861c37eff857607a5a854fae7">Instructions::Long::Add::Add</a></div><div class="ttdeci">Add()</div><div class="ttdef"><b>Definition:</b> long.h:65</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_mul_xhtml_a6893c417c625a03c7314489f6c42d4ad"><div class="ttname"><a href="../../d6/dc0/class_instructions_1_1_long_1_1_mul.xhtml#a6893c417c625a03c7314489f6c42d4ad">Instructions::Long::Mul::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37aa01bcd4d9a280cbaafd8a69d52e919d4"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aa01bcd4d9a280cbaafd8a69d52e919d4">Instructions::Opcodes::kLLOAD_0</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:178</div></div>
<div class="ttc" id="aopcodes_8h_xhtml"><div class="ttname"><a href="../../d3/de6/opcodes_8h.xhtml">opcodes.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_to_double_xhtml_a156cf11499598b1315c555e18439c4d3"><div class="ttname"><a href="../../da/de9/class_instructions_1_1_long_1_1_to_double.xhtml#a156cf11499598b1315c555e18439c4d3">Instructions::Long::ToDouble::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a7076d84b3ee6c6fe0fdf033dba3b05aa"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a7076d84b3ee6c6fe0fdf033dba3b05aa">Instructions::Opcodes::kLCONST_0</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:171</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_const__0_xhtml"><div class="ttname"><a href="../../de/d7d/class_instructions_1_1_long_1_1_const__0.xhtml">Instructions::Long::Const_0</a></div><div class="ttdef"><b>Definition:</b> long.h:113</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_and_xhtml_a39ede195d36a73d2d3d776858b699c9c"><div class="ttname"><a href="../../d0/de9/class_instructions_1_1_long_1_1_and.xhtml#a39ede195d36a73d2d3d776858b699c9c">Instructions::Long::And::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load__2_xhtml"><div class="ttname"><a href="../../dc/dda/class_instructions_1_1_long_1_1_load__2.xhtml">Instructions::Long::Load_2</a></div><div class="ttdef"><b>Definition:</b> long.h:205</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_mul_xhtml_a46d4e8271b7d0f9038e79159fe1c8552"><div class="ttname"><a href="../../d6/dc0/class_instructions_1_1_long_1_1_mul.xhtml#a46d4e8271b7d0f9038e79159fe1c8552">Instructions::Long::Mul::Mul</a></div><div class="ttdeci">Mul()</div><div class="ttdef"><b>Definition:</b> long.h:227</div></div>
<div class="ttc" id="anamespace_instructions_xhtml"><div class="ttname"><a href="../../da/d11/namespace_instructions.xhtml">Instructions</a></div><div class="ttdef"><b>Definition:</b> execution_engine.h:12</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store_into_array_xhtml"><div class="ttname"><a href="../../d4/d04/class_instructions_1_1_long_1_1_store_into_array.xhtml">Instructions::Long::StoreIntoArray</a></div><div class="ttdef"><b>Definition:</b> long.h:93</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_mul_xhtml"><div class="ttname"><a href="../../d6/dc0/class_instructions_1_1_long_1_1_mul.xhtml">Instructions::Long::Mul</a></div><div class="ttdef"><b>Definition:</b> long.h:225</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_arithmetic_shift_right_xhtml_a3349ca446168e9b4ed26e5664c53937f"><div class="ttname"><a href="../../d7/de5/class_instructions_1_1_long_1_1_arithmetic_shift_right.xhtml#a3349ca446168e9b4ed26e5664c53937f">Instructions::Long::ArithmeticShiftRight::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_shift_left_xhtml"><div class="ttname"><a href="../../da/d23/class_instructions_1_1_long_1_1_shift_left.xhtml">Instructions::Long::ShiftLeft</a></div><div class="ttdef"><b>Definition:</b> long.h:275</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_arithmetic_shift_right_xhtml"><div class="ttname"><a href="../../d7/de5/class_instructions_1_1_long_1_1_arithmetic_shift_right.xhtml">Instructions::Long::ArithmeticShiftRight</a></div><div class="ttdef"><b>Definition:</b> long.h:285</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_xor_xhtml_ae22918f3e84d4b20fc3975f710e1bbed"><div class="ttname"><a href="../../d4/d3e/class_instructions_1_1_long_1_1_xor.xhtml#ae22918f3e84d4b20fc3975f710e1bbed">Instructions::Long::Xor::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_neg_xhtml"><div class="ttname"><a href="../../db/df5/class_instructions_1_1_long_1_1_neg.xhtml">Instructions::Long::Neg</a></div><div class="ttdef"><b>Definition:</b> long.h:235</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store__2_xhtml"><div class="ttname"><a href="../../d7/da1/class_instructions_1_1_long_1_1_store__2.xhtml">Instructions::Long::Store_2</a></div><div class="ttdef"><b>Definition:</b> long.h:356</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_return_xhtml_ae7ad779ec098d6722808de309e6ed9eb"><div class="ttname"><a href="../../d7/de4/class_instructions_1_1_long_1_1_return.xhtml#ae7ad779ec098d6722808de309e6ed9eb">Instructions::Long::Return::Return</a></div><div class="ttdeci">Return()</div><div class="ttdef"><b>Definition:</b> long.h:267</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a842ba0558567dc8bb7dfec563a4ca396"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a842ba0558567dc8bb7dfec563a4ca396">Instructions::Opcodes::kLSHL</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:188</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store_into_array_xhtml_a695f4ec060050aa283667bb880125ecf"><div class="ttname"><a href="../../d4/d04/class_instructions_1_1_long_1_1_store_into_array.xhtml#a695f4ec060050aa283667bb880125ecf">Instructions::Long::StoreIntoArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_rem_xhtml"><div class="ttname"><a href="../../d5/d24/class_instructions_1_1_long_1_1_rem.xhtml">Instructions::Long::Rem</a></div><div class="ttdef"><b>Definition:</b> long.h:255</div></div>
<div class="ttc" id="anamespace_utils_1_1_types_xhtml_a987afa1d65d5f43c5e379d4cdafacd44"><div class="ttname"><a href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a></div><div class="ttdeci">std::uint8_t u1</div><div class="ttdef"><b>Definition:</b> types.h:8</div></div>
<div class="ttc" id="anamespace_utils_1_1_string_xhtml_aec9a3efb3bd837c1f21fec1ceba1eec9"><div class="ttname"><a href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a></div><div class="ttdeci">std::string toString(const T &amp;num)</div><div class="ttdef"><b>Definition:</b> string.h:21</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store__3_xhtml_a087aaa0db9a7375c0082b142c05303e4"><div class="ttname"><a href="../../d8/d87/class_instructions_1_1_long_1_1_store__3.xhtml#a087aaa0db9a7375c0082b142c05303e4">Instructions::Long::Store_3::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store__1_xhtml_a63289d39ca32f35a0ffc26af91c4649c"><div class="ttname"><a href="../../da/d5a/class_instructions_1_1_long_1_1_store__1.xhtml#a63289d39ca32f35a0ffc26af91c4649c">Instructions::Long::Store_1::Store_1</a></div><div class="ttdeci">Store_1()</div><div class="ttdef"><b>Definition:</b> long.h:348</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_to_float_xhtml"><div class="ttname"><a href="../../d6/d24/class_instructions_1_1_long_1_1_to_float.xhtml">Instructions::Long::ToFloat</a></div><div class="ttdef"><b>Definition:</b> long.h:43</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a94dcfa635cb44922af0f858af13d77a8"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a94dcfa635cb44922af0f858af13d77a8">Instructions::Opcodes::kLADD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:166</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store_into_array_xhtml_a866bdb6d3051b0520089ce2905306f1e"><div class="ttname"><a href="../../d4/d04/class_instructions_1_1_long_1_1_store_into_array.xhtml#a866bdb6d3051b0520089ce2905306f1e">Instructions::Long::StoreIntoArray::StoreIntoArray</a></div><div class="ttdeci">StoreIntoArray()</div><div class="ttdef"><b>Definition:</b> long.h:95</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load_xhtml_ade51fa26cd9b1f5761fb1892489261c7"><div class="ttname"><a href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml#ade51fa26cd9b1f5761fb1892489261c7">Instructions::Long::Load::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> long.h:166</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store__3_xhtml_a4de38d8c6d4d01885f68818b8c56dcb9"><div class="ttname"><a href="../../d8/d87/class_instructions_1_1_long_1_1_store__3.xhtml#a4de38d8c6d4d01885f68818b8c56dcb9">Instructions::Long::Store_3::Store_3</a></div><div class="ttdeci">Store_3()</div><div class="ttdef"><b>Definition:</b> long.h:368</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_neg_xhtml_a8a55cebe0e4e37e1a32082cfedd261a8"><div class="ttname"><a href="../../db/df5/class_instructions_1_1_long_1_1_neg.xhtml#a8a55cebe0e4e37e1a32082cfedd261a8">Instructions::Long::Neg::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a501b299a4d4e91a3a377ebe5bf4a709f"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a501b299a4d4e91a3a377ebe5bf4a709f">Instructions::Opcodes::kLLOAD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:177</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_const__0_xhtml_a92effcb2d5a66152380bfa336fd25508"><div class="ttname"><a href="../../de/d7d/class_instructions_1_1_long_1_1_const__0.xhtml#a92effcb2d5a66152380bfa336fd25508">Instructions::Long::Const_0::Const_0</a></div><div class="ttdeci">Const_0()</div><div class="ttdef"><b>Definition:</b> long.h:115</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a65d1bdf4e3e3782b5108adf5b47019a8"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a65d1bdf4e3e3782b5108adf5b47019a8">Instructions::Opcodes::kLLOAD_1</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:179</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af4d632d3b0ef904be7713ad552e4e051"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af4d632d3b0ef904be7713ad552e4e051">Instructions::Opcodes::kLNEG</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:183</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_shift_left_xhtml_ad3cf06ad3ea88cf57562f97abf5fc603"><div class="ttname"><a href="../../da/d23/class_instructions_1_1_long_1_1_shift_left.xhtml#ad3cf06ad3ea88cf57562f97abf5fc603">Instructions::Long::ShiftLeft::ShiftLeft</a></div><div class="ttdeci">ShiftLeft()</div><div class="ttdef"><b>Definition:</b> long.h:277</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37aebaa0fb58cc89a873eaf1e1d3a61a832"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aebaa0fb58cc89a873eaf1e1d3a61a832">Instructions::Opcodes::kLSHR</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:189</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store__2_xhtml_aab0e3b55fcbbb8f28338229f0f2a2e7b"><div class="ttname"><a href="../../d7/da1/class_instructions_1_1_long_1_1_store__2.xhtml#aab0e3b55fcbbb8f28338229f0f2a2e7b">Instructions::Long::Store_2::Store_2</a></div><div class="ttdeci">Store_2()</div><div class="ttdef"><b>Definition:</b> long.h:358</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af640f32a3fb8f26dd0e3e54c54e49603"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af640f32a3fb8f26dd0e3e54c54e49603">Instructions::Opcodes::kLSTORE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:190</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_base_long_xhtml_ad59703a8c92679417682c8bef92a7ba1"><div class="ttname"><a href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml#ad59703a8c92679417682c8bef92a7ba1">Instructions::Long::BaseLong::BaseLong</a></div><div class="ttdeci">BaseLong(const Utils::Types::u1 &amp;tag)</div><div class="ttdef"><b>Definition:</b> long.h:15</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_base_long_xhtml_a68ede168a08a07226f5b03c33f3ebf69"><div class="ttname"><a href="../../da/d32/class_instructions_1_1_long_1_1_base_long.xhtml#a68ede168a08a07226f5b03c33f3ebf69">Instructions::Long::BaseLong::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> long.h:25</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load_from_array_xhtml"><div class="ttname"><a href="../../de/d7c/class_instructions_1_1_long_1_1_load_from_array.xhtml">Instructions::Long::LoadFromArray</a></div><div class="ttdef"><b>Definition:</b> long.h:73</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_div_xhtml_a9e6fdb7496827c1fea87a12731abdc42"><div class="ttname"><a href="../../d6/d8b/class_instructions_1_1_long_1_1_div.xhtml#a9e6fdb7496827c1fea87a12731abdc42">Instructions::Long::Div::Div</a></div><div class="ttdeci">Div()</div><div class="ttdef"><b>Definition:</b> long.h:135</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store_xhtml_a9f34f0bc093b998f982664b346b5cb56"><div class="ttname"><a href="../../d0/d64/class_instructions_1_1_long_1_1_store.xhtml#a9f34f0bc093b998f982664b346b5cb56">Instructions::Long::Store::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> long.h:317</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a31a088422cdc7246d4d3c87002ca8e73"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a31a088422cdc7246d4d3c87002ca8e73">Instructions::Opcodes::kLLOAD_3</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:181</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store__3_xhtml"><div class="ttname"><a href="../../d8/d87/class_instructions_1_1_long_1_1_store__3.xhtml">Instructions::Long::Store_3</a></div><div class="ttdef"><b>Definition:</b> long.h:366</div></div>
<div class="ttc" id="aclass_memory_areas_1_1_thread_xhtml"><div class="ttname"><a href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a></div><div class="ttdef"><b>Definition:</b> thread.h:11</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_load_xhtml"><div class="ttname"><a href="../../d9/db2/class_instructions_1_1_long_1_1_load.xhtml">Instructions::Long::Load</a></div><div class="ttdef"><b>Definition:</b> long.h:143</div></div>
<div class="ttc" id="aclass_instructions_1_1_long_1_1_store__0_xhtml_aacea3008cee8ea84b98109bc9a58d262"><div class="ttname"><a href="../../db/d10/class_instructions_1_1_long_1_1_store__0.xhtml#aacea3008cee8ea84b98109bc9a58d262">Instructions::Long::Store_0::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Nov 21 2019 16:45:45 for JVM 8 SB 2019/2 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.16
</small></address>
</body>
</html>
