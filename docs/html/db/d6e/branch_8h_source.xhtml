<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.16"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>JVM 8 SB 2019/2: include/instructions/instruction_set/branch.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">JVM 8 SB 2019/2
   </div>
   <div id="projectbrief">projeto que visa fazer uma implementação simples da JVM 8</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.16 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_2843b2c750ff6b39dcfe98bf2554dba0.xhtml">instructions</a></li><li class="navelem"><a class="el" href="../../dir_7ef69e660d75507825e3f78a695283fd.xhtml">instruction_set</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">branch.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../db/d6e/branch_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_BRANCH_H_</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_BRANCH_H_</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/d5a/base_8h.xhtml">instructions/instruction_set/base.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/de6/opcodes_8h.xhtml">instructions/opcodes.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/d66/string_8h.xhtml">utils/string.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../da/d11/namespace_instructions.xhtml">Instructions</a> {</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d1/d20/namespace_instructions_1_1_branch.xhtml">   12</a></span>&#160;<span class="keyword">namespace </span>Branch {</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">   13</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml#a9ecae23b06c9725cbf4f35237f5fd25a">   15</a></span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml#a9ecae23b06c9725cbf4f35237f5fd25a">BaseBranch</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a> &amp;tag) : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(tag) {}</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml#afb9d94c61241404cd0caae9180326e78">   16</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml#afb9d94c61241404cd0caae9180326e78">toBytecode</a>(</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    int16_t offset = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;          &lt;&lt; (static_cast&lt;int16_t&gt;(*pc) + offset) &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; std::showpos</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;          &lt;&lt; offset &lt;&lt; <span class="stringliteral">&quot;)\n&quot;</span>;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    *delta_code = 2;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  }</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml#afd8c87a80492aea804057329ddbf4eb8">   28</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml#afd8c87a80492aea804057329ddbf4eb8">toBytecode_json</a>(</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    int16_t offset = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    *delta_code = 2;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(offset)};</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  }</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;};</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="../../da/d77/class_instructions_1_1_branch_1_1_ref_compare_equal.xhtml">   37</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d77/class_instructions_1_1_branch_1_1_ref_compare_equal.xhtml">RefCompareEqual</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../da/d77/class_instructions_1_1_branch_1_1_ref_compare_equal.xhtml#a0ffe7ab193ae574c74a880ae6ed5c193">   39</a></span>&#160;  <a class="code" href="../../da/d77/class_instructions_1_1_branch_1_1_ref_compare_equal.xhtml#a0ffe7ab193ae574c74a880ae6ed5c193">RefCompareEqual</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a432fd07683b00c30b4de9e45ed1b9355">kIF_ACMPEQ</a>) {}</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../da/d77/class_instructions_1_1_branch_1_1_ref_compare_equal.xhtml#a0dc418a02c53a593f24d7c818f7478df">execute</a>(</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;};</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="../../d5/dd2/class_instructions_1_1_branch_1_1_ref_compare_not_equal.xhtml">   47</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d5/dd2/class_instructions_1_1_branch_1_1_ref_compare_not_equal.xhtml">RefCompareNotEqual</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="../../d5/dd2/class_instructions_1_1_branch_1_1_ref_compare_not_equal.xhtml#a4d884bf79c151d00833b603b5ae00313">   49</a></span>&#160;  <a class="code" href="../../d5/dd2/class_instructions_1_1_branch_1_1_ref_compare_not_equal.xhtml#a4d884bf79c151d00833b603b5ae00313">RefCompareNotEqual</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a3c6f26dca9d4ab5b84fd0ad520bd3641">kIF_ACMPNE</a>) {}</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d5/dd2/class_instructions_1_1_branch_1_1_ref_compare_not_equal.xhtml#a76268c320c2253d984f7d789da525ca5">execute</a>(</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;};</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../d4/d2d/class_instructions_1_1_branch_1_1_integer_compare_equal.xhtml">   57</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d2d/class_instructions_1_1_branch_1_1_integer_compare_equal.xhtml">IntegerCompareEqual</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../d4/d2d/class_instructions_1_1_branch_1_1_integer_compare_equal.xhtml#a01323e0be461a3ddcd643546cb04fc39">   59</a></span>&#160;  <a class="code" href="../../d4/d2d/class_instructions_1_1_branch_1_1_integer_compare_equal.xhtml#a01323e0be461a3ddcd643546cb04fc39">IntegerCompareEqual</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37afa35ecfdf3f4adafdc4dfcd6a9ec2083">kIF_ICMPEQ</a>) {}</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d4/d2d/class_instructions_1_1_branch_1_1_integer_compare_equal.xhtml#a750ddae2dea6162d8f25d2b8957103f1">execute</a>(</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;};</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="../../d5/dc8/class_instructions_1_1_branch_1_1_integer_compare_greater_equal.xhtml">   67</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d5/dc8/class_instructions_1_1_branch_1_1_integer_compare_greater_equal.xhtml">IntegerCompareGreaterEqual</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="../../d5/dc8/class_instructions_1_1_branch_1_1_integer_compare_greater_equal.xhtml#a1a8e93353ca7b198fc5b2085cf191347">   69</a></span>&#160;  <a class="code" href="../../d5/dc8/class_instructions_1_1_branch_1_1_integer_compare_greater_equal.xhtml#a1a8e93353ca7b198fc5b2085cf191347">IntegerCompareGreaterEqual</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af81f94f36e58767ee132f415a26ca364">kIF_ICMPGE</a>) {}</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d5/dc8/class_instructions_1_1_branch_1_1_integer_compare_greater_equal.xhtml#a8d8e4f9b0114ad8222fb5cf4f6ebdfa6">execute</a>(</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;};</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../d7/d1f/class_instructions_1_1_branch_1_1_integer_compare_greater_than.xhtml">   77</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/d1f/class_instructions_1_1_branch_1_1_integer_compare_greater_than.xhtml">IntegerCompareGreaterThan</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="../../d7/d1f/class_instructions_1_1_branch_1_1_integer_compare_greater_than.xhtml#a29ca1a9d8e11b9a9635657d58f511969">   79</a></span>&#160;  <a class="code" href="../../d7/d1f/class_instructions_1_1_branch_1_1_integer_compare_greater_than.xhtml#a29ca1a9d8e11b9a9635657d58f511969">IntegerCompareGreaterThan</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ac73d5eb1eec76255c1f6ad25aa6197f4">kIF_ICMPGT</a>) {}</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d7/d1f/class_instructions_1_1_branch_1_1_integer_compare_greater_than.xhtml#a1ced04a65f430d73af0bf1f682c7d74b">execute</a>(</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;};</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="../../d2/de7/class_instructions_1_1_branch_1_1_integer_compare_less_equal.xhtml">   87</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d2/de7/class_instructions_1_1_branch_1_1_integer_compare_less_equal.xhtml">IntegerCompareLessEqual</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../d2/de7/class_instructions_1_1_branch_1_1_integer_compare_less_equal.xhtml#a93eb5ff94c4969f329451a476d2fdf89">   89</a></span>&#160;  <a class="code" href="../../d2/de7/class_instructions_1_1_branch_1_1_integer_compare_less_equal.xhtml#a93eb5ff94c4969f329451a476d2fdf89">IntegerCompareLessEqual</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a3cc2474a65d94d73c3438709b88b2c4e">kIF_ICMPLE</a>) {}</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d2/de7/class_instructions_1_1_branch_1_1_integer_compare_less_equal.xhtml#a79a2aa55518dbb992eab50bcfec73f11">execute</a>(</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;};</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="../../d8/d39/class_instructions_1_1_branch_1_1_integer_compare_less_than.xhtml">   97</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/d39/class_instructions_1_1_branch_1_1_integer_compare_less_than.xhtml">IntegerCompareLessThan</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="../../d8/d39/class_instructions_1_1_branch_1_1_integer_compare_less_than.xhtml#a0da5b0f5965cda2aa8efdb3f5362e72b">   99</a></span>&#160;  <a class="code" href="../../d8/d39/class_instructions_1_1_branch_1_1_integer_compare_less_than.xhtml#a0da5b0f5965cda2aa8efdb3f5362e72b">IntegerCompareLessThan</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37acbc81ed69617f1d2c625b2a5479e8224">kIF_ICMPLT</a>) {}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d8/d39/class_instructions_1_1_branch_1_1_integer_compare_less_than.xhtml#a6bac938a1c5c28767fd065c6fab1bd51">execute</a>(</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;};</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="../../d1/ddf/class_instructions_1_1_branch_1_1_integer_compare_not_equal.xhtml">  107</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/ddf/class_instructions_1_1_branch_1_1_integer_compare_not_equal.xhtml">IntegerCompareNotEqual</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="../../d1/ddf/class_instructions_1_1_branch_1_1_integer_compare_not_equal.xhtml#a35a0a6545bb69ad8ff008143cf3b6ab0">  109</a></span>&#160;  <a class="code" href="../../d1/ddf/class_instructions_1_1_branch_1_1_integer_compare_not_equal.xhtml#a35a0a6545bb69ad8ff008143cf3b6ab0">IntegerCompareNotEqual</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a4415b4b8c25bb55ff86d74e0abc0a8fd">kIF_ICMPNE</a>) {}</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d1/ddf/class_instructions_1_1_branch_1_1_integer_compare_not_equal.xhtml#ac8a283fbb388a3c94a331fa380515acb">execute</a>(</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;};</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="../../d3/de5/class_instructions_1_1_branch_1_1_equal_zero.xhtml">  117</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d3/de5/class_instructions_1_1_branch_1_1_equal_zero.xhtml">EqualZero</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="../../d3/de5/class_instructions_1_1_branch_1_1_equal_zero.xhtml#a39e4c3a10791b97180a2b055095640c4">  119</a></span>&#160;  <a class="code" href="../../d3/de5/class_instructions_1_1_branch_1_1_equal_zero.xhtml#a39e4c3a10791b97180a2b055095640c4">EqualZero</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aee823774367247ea06bef3d01ae72a54">kIFEQ</a>) {}</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d3/de5/class_instructions_1_1_branch_1_1_equal_zero.xhtml#a394b64fab40178eae80375ae89ef7cb0">execute</a>(</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;};</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="../../df/d9b/class_instructions_1_1_branch_1_1_greater_equal_zero.xhtml">  127</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../df/d9b/class_instructions_1_1_branch_1_1_greater_equal_zero.xhtml">GreaterEqualZero</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="../../df/d9b/class_instructions_1_1_branch_1_1_greater_equal_zero.xhtml#a0c2bbd954bb120f2e98f786c014eea06">  129</a></span>&#160;  <a class="code" href="../../df/d9b/class_instructions_1_1_branch_1_1_greater_equal_zero.xhtml#a0c2bbd954bb120f2e98f786c014eea06">GreaterEqualZero</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ad633fc38df0cdc80d22948f39d662fc0">kIFGE</a>) {}</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../df/d9b/class_instructions_1_1_branch_1_1_greater_equal_zero.xhtml#ad16137357f8175f74e5d2b14070a90df">execute</a>(</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;};</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="../../da/da1/class_instructions_1_1_branch_1_1_greater_than_zero.xhtml">  137</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/da1/class_instructions_1_1_branch_1_1_greater_than_zero.xhtml">GreaterThanZero</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="../../da/da1/class_instructions_1_1_branch_1_1_greater_than_zero.xhtml#ad29398b694e0d308cd70a87d5d4134c6">  139</a></span>&#160;  <a class="code" href="../../da/da1/class_instructions_1_1_branch_1_1_greater_than_zero.xhtml#ad29398b694e0d308cd70a87d5d4134c6">GreaterThanZero</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a99b8c5c4565aa43d61958f6f7f2a2a68">kIFGT</a>) {}</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../da/da1/class_instructions_1_1_branch_1_1_greater_than_zero.xhtml#a80e38dd3e0b975b5412917d42ba71b3c">execute</a>(</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;};</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="../../dc/da3/class_instructions_1_1_branch_1_1_less_equal_zero.xhtml">  147</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dc/da3/class_instructions_1_1_branch_1_1_less_equal_zero.xhtml">LessEqualZero</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="../../dc/da3/class_instructions_1_1_branch_1_1_less_equal_zero.xhtml#a90977382c9a41d81072731e72c85ab0d">  149</a></span>&#160;  <a class="code" href="../../dc/da3/class_instructions_1_1_branch_1_1_less_equal_zero.xhtml#a90977382c9a41d81072731e72c85ab0d">LessEqualZero</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ad3cdb8b92bf4112755a9aa36bfed30eb">kIFLE</a>) {}</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dc/da3/class_instructions_1_1_branch_1_1_less_equal_zero.xhtml#a2631cdd1d8a22a5bc71b94dddbb3c366">execute</a>(</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;};</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="../../d6/dd8/class_instructions_1_1_branch_1_1_less_than_zero.xhtml">  157</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/dd8/class_instructions_1_1_branch_1_1_less_than_zero.xhtml">LessThanZero</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="../../d6/dd8/class_instructions_1_1_branch_1_1_less_than_zero.xhtml#af1395cd6871e9e71b06eb8852fb0a985">  159</a></span>&#160;  <a class="code" href="../../d6/dd8/class_instructions_1_1_branch_1_1_less_than_zero.xhtml#af1395cd6871e9e71b06eb8852fb0a985">LessThanZero</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8a3a1e69f56f722410742114562a6533">kIFLT</a>) {}</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d6/dd8/class_instructions_1_1_branch_1_1_less_than_zero.xhtml#ac84257739b51d6e2bca4547b9a2c6223">execute</a>(</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;};</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="../../de/dc0/class_instructions_1_1_branch_1_1_not_equal_zero.xhtml">  167</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../de/dc0/class_instructions_1_1_branch_1_1_not_equal_zero.xhtml">NotEqualZero</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="../../de/dc0/class_instructions_1_1_branch_1_1_not_equal_zero.xhtml#ae79fe8b0806e5e3c637eb70ea9e332bc">  169</a></span>&#160;  <a class="code" href="../../de/dc0/class_instructions_1_1_branch_1_1_not_equal_zero.xhtml#ae79fe8b0806e5e3c637eb70ea9e332bc">NotEqualZero</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37afc6f30851dec1fab6ecf7072bd7edfa6">kIFNE</a>) {}</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../de/dc0/class_instructions_1_1_branch_1_1_not_equal_zero.xhtml#a3092f59a5bd5bfcea3956fd12b08c806">execute</a>(</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;};</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="../../dc/d4f/class_instructions_1_1_branch_1_1_non_null.xhtml">  177</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dc/d4f/class_instructions_1_1_branch_1_1_non_null.xhtml">NonNull</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="../../dc/d4f/class_instructions_1_1_branch_1_1_non_null.xhtml#aff0917cd41d7bdae18c85fb0cb4eb5f0">  179</a></span>&#160;  <a class="code" href="../../dc/d4f/class_instructions_1_1_branch_1_1_non_null.xhtml#aff0917cd41d7bdae18c85fb0cb4eb5f0">NonNull</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a78eb246c2786489ddaf05bcdb7eac2d1">kIFNONNULL</a>) {}</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dc/d4f/class_instructions_1_1_branch_1_1_non_null.xhtml#a17f22ae5e076cfc08392b9151eda3dbc">execute</a>(</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;};</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="../../de/da3/class_instructions_1_1_branch_1_1_ref_null.xhtml">  187</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../de/da3/class_instructions_1_1_branch_1_1_ref_null.xhtml">RefNull</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a> {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="../../de/da3/class_instructions_1_1_branch_1_1_ref_null.xhtml#a6783b2e73e6879ff06d144a981597370">  189</a></span>&#160;  <a class="code" href="../../de/da3/class_instructions_1_1_branch_1_1_ref_null.xhtml#a6783b2e73e6879ff06d144a981597370">RefNull</a>() : <a class="code" href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">BaseBranch</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a4a4d8c30c7cf24d7e774a11e7f91b093">kIFNULL</a>) {}</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../de/da3/class_instructions_1_1_branch_1_1_ref_null.xhtml#af28bc24fe34c73cd1ddf415c7e14ddf8">execute</a>(</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;};</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}  <span class="comment">// namespace Branch</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;}  <span class="comment">// namespace Instructions</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor">#endif  // INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_BRANCH_H_</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_base_branch_xhtml_afb9d94c61241404cd0caae9180326e78"><div class="ttname"><a href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml#afb9d94c61241404cd0caae9180326e78">Instructions::Branch::BaseBranch::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> branch.h:16</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_greater_than_xhtml_a1ced04a65f430d73af0bf1f682c7d74b"><div class="ttname"><a href="../../d7/d1f/class_instructions_1_1_branch_1_1_integer_compare_greater_than.xhtml#a1ced04a65f430d73af0bf1f682c7d74b">Instructions::Branch::IntegerCompareGreaterThan::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_not_equal_zero_xhtml_a3092f59a5bd5bfcea3956fd12b08c806"><div class="ttname"><a href="../../de/dc0/class_instructions_1_1_branch_1_1_not_equal_zero.xhtml#a3092f59a5bd5bfcea3956fd12b08c806">Instructions::Branch::NotEqualZero::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_greater_than_xhtml"><div class="ttname"><a href="../../d7/d1f/class_instructions_1_1_branch_1_1_integer_compare_greater_than.xhtml">Instructions::Branch::IntegerCompareGreaterThan</a></div><div class="ttdef"><b>Definition:</b> branch.h:77</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_less_equal_zero_xhtml"><div class="ttname"><a href="../../dc/da3/class_instructions_1_1_branch_1_1_less_equal_zero.xhtml">Instructions::Branch::LessEqualZero</a></div><div class="ttdef"><b>Definition:</b> branch.h:147</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_greater_than_zero_xhtml"><div class="ttname"><a href="../../da/da1/class_instructions_1_1_branch_1_1_greater_than_zero.xhtml">Instructions::Branch::GreaterThanZero</a></div><div class="ttdef"><b>Definition:</b> branch.h:137</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_greater_than_xhtml_a29ca1a9d8e11b9a9635657d58f511969"><div class="ttname"><a href="../../d7/d1f/class_instructions_1_1_branch_1_1_integer_compare_greater_than.xhtml#a29ca1a9d8e11b9a9635657d58f511969">Instructions::Branch::IntegerCompareGreaterThan::IntegerCompareGreaterThan</a></div><div class="ttdeci">IntegerCompareGreaterThan()</div><div class="ttdef"><b>Definition:</b> branch.h:79</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instructions::Instruction</a></div><div class="ttdef"><b>Definition:</b> base.h:15</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_non_null_xhtml_aff0917cd41d7bdae18c85fb0cb4eb5f0"><div class="ttname"><a href="../../dc/d4f/class_instructions_1_1_branch_1_1_non_null.xhtml#aff0917cd41d7bdae18c85fb0cb4eb5f0">Instructions::Branch::NonNull::NonNull</a></div><div class="ttdeci">NonNull()</div><div class="ttdef"><b>Definition:</b> branch.h:179</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_less_equal_xhtml"><div class="ttname"><a href="../../d2/de7/class_instructions_1_1_branch_1_1_integer_compare_less_equal.xhtml">Instructions::Branch::IntegerCompareLessEqual</a></div><div class="ttdef"><b>Definition:</b> branch.h:87</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_less_than_xhtml_a0da5b0f5965cda2aa8efdb3f5362e72b"><div class="ttname"><a href="../../d8/d39/class_instructions_1_1_branch_1_1_integer_compare_less_than.xhtml#a0da5b0f5965cda2aa8efdb3f5362e72b">Instructions::Branch::IntegerCompareLessThan::IntegerCompareLessThan</a></div><div class="ttdeci">IntegerCompareLessThan()</div><div class="ttdef"><b>Definition:</b> branch.h:99</div></div>
<div class="ttc" id="abase_8h_xhtml"><div class="ttname"><a href="../../d3/d5a/base_8h.xhtml">base.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_less_equal_xhtml_a79a2aa55518dbb992eab50bcfec73f11"><div class="ttname"><a href="../../d2/de7/class_instructions_1_1_branch_1_1_integer_compare_less_equal.xhtml#a79a2aa55518dbb992eab50bcfec73f11">Instructions::Branch::IntegerCompareLessEqual::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_less_than_zero_xhtml_af1395cd6871e9e71b06eb8852fb0a985"><div class="ttname"><a href="../../d6/dd8/class_instructions_1_1_branch_1_1_less_than_zero.xhtml#af1395cd6871e9e71b06eb8852fb0a985">Instructions::Branch::LessThanZero::LessThanZero</a></div><div class="ttdeci">LessThanZero()</div><div class="ttdef"><b>Definition:</b> branch.h:159</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_greater_equal_zero_xhtml_ad16137357f8175f74e5d2b14070a90df"><div class="ttname"><a href="../../df/d9b/class_instructions_1_1_branch_1_1_greater_equal_zero.xhtml#ad16137357f8175f74e5d2b14070a90df">Instructions::Branch::GreaterEqualZero::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_equal_zero_xhtml"><div class="ttname"><a href="../../d3/de5/class_instructions_1_1_branch_1_1_equal_zero.xhtml">Instructions::Branch::EqualZero</a></div><div class="ttdef"><b>Definition:</b> branch.h:117</div></div>
<div class="ttc" id="astring_8h_xhtml"><div class="ttname"><a href="../../da/d66/string_8h.xhtml">string.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_ref_compare_not_equal_xhtml_a76268c320c2253d984f7d789da525ca5"><div class="ttname"><a href="../../d5/dd2/class_instructions_1_1_branch_1_1_ref_compare_not_equal.xhtml#a76268c320c2253d984f7d789da525ca5">Instructions::Branch::RefCompareNotEqual::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_not_equal_xhtml_ac8a283fbb388a3c94a331fa380515acb"><div class="ttname"><a href="../../d1/ddf/class_instructions_1_1_branch_1_1_integer_compare_not_equal.xhtml#ac8a283fbb388a3c94a331fa380515acb">Instructions::Branch::IntegerCompareNotEqual::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_base_branch_xhtml_a9ecae23b06c9725cbf4f35237f5fd25a"><div class="ttname"><a href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml#a9ecae23b06c9725cbf4f35237f5fd25a">Instructions::Branch::BaseBranch::BaseBranch</a></div><div class="ttdeci">BaseBranch(const Utils::Types::u1 &amp;tag)</div><div class="ttdef"><b>Definition:</b> branch.h:15</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_non_null_xhtml_a17f22ae5e076cfc08392b9151eda3dbc"><div class="ttname"><a href="../../dc/d4f/class_instructions_1_1_branch_1_1_non_null.xhtml#a17f22ae5e076cfc08392b9151eda3dbc">Instructions::Branch::NonNull::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a78eb246c2786489ddaf05bcdb7eac2d1"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a78eb246c2786489ddaf05bcdb7eac2d1">Instructions::Opcodes::kIFNONNULL</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:130</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_not_equal_xhtml"><div class="ttname"><a href="../../d1/ddf/class_instructions_1_1_branch_1_1_integer_compare_not_equal.xhtml">Instructions::Branch::IntegerCompareNotEqual</a></div><div class="ttdef"><b>Definition:</b> branch.h:107</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37afa35ecfdf3f4adafdc4dfcd6a9ec2083"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37afa35ecfdf3f4adafdc4dfcd6a9ec2083">Instructions::Opcodes::kIF_ICMPEQ</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:118</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_less_equal_zero_xhtml_a2631cdd1d8a22a5bc71b94dddbb3c366"><div class="ttname"><a href="../../dc/da3/class_instructions_1_1_branch_1_1_less_equal_zero.xhtml#a2631cdd1d8a22a5bc71b94dddbb3c366">Instructions::Branch::LessEqualZero::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_greater_equal_zero_xhtml_a0c2bbd954bb120f2e98f786c014eea06"><div class="ttname"><a href="../../df/d9b/class_instructions_1_1_branch_1_1_greater_equal_zero.xhtml#a0c2bbd954bb120f2e98f786c014eea06">Instructions::Branch::GreaterEqualZero::GreaterEqualZero</a></div><div class="ttdeci">GreaterEqualZero()</div><div class="ttdef"><b>Definition:</b> branch.h:129</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_ab765ddcb61c4d60f2647154d87f97ae2"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Instructions::Opcodes::getMnemonic</a></div><div class="ttdeci">std::string getMnemonic(const Utils::Types::u1 &amp;opcode)</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_less_than_zero_xhtml_ac84257739b51d6e2bca4547b9a2c6223"><div class="ttname"><a href="../../d6/dd8/class_instructions_1_1_branch_1_1_less_than_zero.xhtml#ac84257739b51d6e2bca4547b9a2c6223">Instructions::Branch::LessThanZero::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_ref_compare_not_equal_xhtml_a4d884bf79c151d00833b603b5ae00313"><div class="ttname"><a href="../../d5/dd2/class_instructions_1_1_branch_1_1_ref_compare_not_equal.xhtml#a4d884bf79c151d00833b603b5ae00313">Instructions::Branch::RefCompareNotEqual::RefCompareNotEqual</a></div><div class="ttdeci">RefCompareNotEqual()</div><div class="ttdef"><b>Definition:</b> branch.h:49</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_equal_xhtml_a750ddae2dea6162d8f25d2b8957103f1"><div class="ttname"><a href="../../d4/d2d/class_instructions_1_1_branch_1_1_integer_compare_equal.xhtml#a750ddae2dea6162d8f25d2b8957103f1">Instructions::Branch::IntegerCompareEqual::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_less_than_zero_xhtml"><div class="ttname"><a href="../../d6/dd8/class_instructions_1_1_branch_1_1_less_than_zero.xhtml">Instructions::Branch::LessThanZero</a></div><div class="ttdef"><b>Definition:</b> branch.h:157</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_greater_than_zero_xhtml_ad29398b694e0d308cd70a87d5d4134c6"><div class="ttname"><a href="../../da/da1/class_instructions_1_1_branch_1_1_greater_than_zero.xhtml#ad29398b694e0d308cd70a87d5d4134c6">Instructions::Branch::GreaterThanZero::GreaterThanZero</a></div><div class="ttdeci">GreaterThanZero()</div><div class="ttdef"><b>Definition:</b> branch.h:139</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_equal_xhtml_a01323e0be461a3ddcd643546cb04fc39"><div class="ttname"><a href="../../d4/d2d/class_instructions_1_1_branch_1_1_integer_compare_equal.xhtml#a01323e0be461a3ddcd643546cb04fc39">Instructions::Branch::IntegerCompareEqual::IntegerCompareEqual</a></div><div class="ttdeci">IntegerCompareEqual()</div><div class="ttdef"><b>Definition:</b> branch.h:59</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a4a4d8c30c7cf24d7e774a11e7f91b093"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a4a4d8c30c7cf24d7e774a11e7f91b093">Instructions::Opcodes::kIFNULL</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:131</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_equal_zero_xhtml_a394b64fab40178eae80375ae89ef7cb0"><div class="ttname"><a href="../../d3/de5/class_instructions_1_1_branch_1_1_equal_zero.xhtml#a394b64fab40178eae80375ae89ef7cb0">Instructions::Branch::EqualZero::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37acbc81ed69617f1d2c625b2a5479e8224"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37acbc81ed69617f1d2c625b2a5479e8224">Instructions::Opcodes::kIF_ICMPLT</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:122</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_not_equal_xhtml_a35a0a6545bb69ad8ff008143cf3b6ab0"><div class="ttname"><a href="../../d1/ddf/class_instructions_1_1_branch_1_1_integer_compare_not_equal.xhtml#a35a0a6545bb69ad8ff008143cf3b6ab0">Instructions::Branch::IntegerCompareNotEqual::IntegerCompareNotEqual</a></div><div class="ttdeci">IntegerCompareNotEqual()</div><div class="ttdef"><b>Definition:</b> branch.h:109</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_greater_than_zero_xhtml_a80e38dd3e0b975b5412917d42ba71b3c"><div class="ttname"><a href="../../da/da1/class_instructions_1_1_branch_1_1_greater_than_zero.xhtml#a80e38dd3e0b975b5412917d42ba71b3c">Instructions::Branch::GreaterThanZero::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_base_branch_xhtml"><div class="ttname"><a href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml">Instructions::Branch::BaseBranch</a></div><div class="ttdef"><b>Definition:</b> branch.h:13</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml_abce4218201520f9ca8880bda8ab78e40"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">Instructions::Instruction::opcode</a></div><div class="ttdeci">const Utils::Types::u1 opcode</div><div class="ttdef"><b>Definition:</b> base.h:35</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_non_null_xhtml"><div class="ttname"><a href="../../dc/d4f/class_instructions_1_1_branch_1_1_non_null.xhtml">Instructions::Branch::NonNull</a></div><div class="ttdef"><b>Definition:</b> branch.h:177</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a4415b4b8c25bb55ff86d74e0abc0a8fd"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a4415b4b8c25bb55ff86d74e0abc0a8fd">Instructions::Opcodes::kIF_ICMPNE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:123</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_ref_null_xhtml_af28bc24fe34c73cd1ddf415c7e14ddf8"><div class="ttname"><a href="../../de/da3/class_instructions_1_1_branch_1_1_ref_null.xhtml#af28bc24fe34c73cd1ddf415c7e14ddf8">Instructions::Branch::RefNull::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_not_equal_zero_xhtml"><div class="ttname"><a href="../../de/dc0/class_instructions_1_1_branch_1_1_not_equal_zero.xhtml">Instructions::Branch::NotEqualZero</a></div><div class="ttdef"><b>Definition:</b> branch.h:167</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37aee823774367247ea06bef3d01ae72a54"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aee823774367247ea06bef3d01ae72a54">Instructions::Opcodes::kIFEQ</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:124</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_greater_equal_zero_xhtml"><div class="ttname"><a href="../../df/d9b/class_instructions_1_1_branch_1_1_greater_equal_zero.xhtml">Instructions::Branch::GreaterEqualZero</a></div><div class="ttdef"><b>Definition:</b> branch.h:127</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_ref_compare_equal_xhtml_a0ffe7ab193ae574c74a880ae6ed5c193"><div class="ttname"><a href="../../da/d77/class_instructions_1_1_branch_1_1_ref_compare_equal.xhtml#a0ffe7ab193ae574c74a880ae6ed5c193">Instructions::Branch::RefCompareEqual::RefCompareEqual</a></div><div class="ttdeci">RefCompareEqual()</div><div class="ttdef"><b>Definition:</b> branch.h:39</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37afc6f30851dec1fab6ecf7072bd7edfa6"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37afc6f30851dec1fab6ecf7072bd7edfa6">Instructions::Opcodes::kIFNE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:129</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a8a3a1e69f56f722410742114562a6533"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8a3a1e69f56f722410742114562a6533">Instructions::Opcodes::kIFLT</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:128</div></div>
<div class="ttc" id="aopcodes_8h_xhtml"><div class="ttname"><a href="../../d3/de6/opcodes_8h.xhtml">opcodes.h</a></div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ac73d5eb1eec76255c1f6ad25aa6197f4"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ac73d5eb1eec76255c1f6ad25aa6197f4">Instructions::Opcodes::kIF_ICMPGT</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:120</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_ref_compare_not_equal_xhtml"><div class="ttname"><a href="../../d5/dd2/class_instructions_1_1_branch_1_1_ref_compare_not_equal.xhtml">Instructions::Branch::RefCompareNotEqual</a></div><div class="ttdef"><b>Definition:</b> branch.h:47</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_ref_compare_equal_xhtml_a0dc418a02c53a593f24d7c818f7478df"><div class="ttname"><a href="../../da/d77/class_instructions_1_1_branch_1_1_ref_compare_equal.xhtml#a0dc418a02c53a593f24d7c818f7478df">Instructions::Branch::RefCompareEqual::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ad3cdb8b92bf4112755a9aa36bfed30eb"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ad3cdb8b92bf4112755a9aa36bfed30eb">Instructions::Opcodes::kIFLE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:127</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_equal_zero_xhtml_a39e4c3a10791b97180a2b055095640c4"><div class="ttname"><a href="../../d3/de5/class_instructions_1_1_branch_1_1_equal_zero.xhtml#a39e4c3a10791b97180a2b055095640c4">Instructions::Branch::EqualZero::EqualZero</a></div><div class="ttdeci">EqualZero()</div><div class="ttdef"><b>Definition:</b> branch.h:119</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_less_equal_zero_xhtml_a90977382c9a41d81072731e72c85ab0d"><div class="ttname"><a href="../../dc/da3/class_instructions_1_1_branch_1_1_less_equal_zero.xhtml#a90977382c9a41d81072731e72c85ab0d">Instructions::Branch::LessEqualZero::LessEqualZero</a></div><div class="ttdeci">LessEqualZero()</div><div class="ttdef"><b>Definition:</b> branch.h:149</div></div>
<div class="ttc" id="anamespace_instructions_xhtml"><div class="ttname"><a href="../../da/d11/namespace_instructions.xhtml">Instructions</a></div><div class="ttdef"><b>Definition:</b> execution_engine.h:12</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_not_equal_zero_xhtml_ae79fe8b0806e5e3c637eb70ea9e332bc"><div class="ttname"><a href="../../de/dc0/class_instructions_1_1_branch_1_1_not_equal_zero.xhtml#ae79fe8b0806e5e3c637eb70ea9e332bc">Instructions::Branch::NotEqualZero::NotEqualZero</a></div><div class="ttdeci">NotEqualZero()</div><div class="ttdef"><b>Definition:</b> branch.h:169</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_greater_equal_xhtml"><div class="ttname"><a href="../../d5/dc8/class_instructions_1_1_branch_1_1_integer_compare_greater_equal.xhtml">Instructions::Branch::IntegerCompareGreaterEqual</a></div><div class="ttdef"><b>Definition:</b> branch.h:67</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a99b8c5c4565aa43d61958f6f7f2a2a68"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a99b8c5c4565aa43d61958f6f7f2a2a68">Instructions::Opcodes::kIFGT</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:126</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_equal_xhtml"><div class="ttname"><a href="../../d4/d2d/class_instructions_1_1_branch_1_1_integer_compare_equal.xhtml">Instructions::Branch::IntegerCompareEqual</a></div><div class="ttdef"><b>Definition:</b> branch.h:57</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a432fd07683b00c30b4de9e45ed1b9355"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a432fd07683b00c30b4de9e45ed1b9355">Instructions::Opcodes::kIF_ACMPEQ</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:116</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_base_branch_xhtml_afd8c87a80492aea804057329ddbf4eb8"><div class="ttname"><a href="../../d7/d51/class_instructions_1_1_branch_1_1_base_branch.xhtml#afd8c87a80492aea804057329ddbf4eb8">Instructions::Branch::BaseBranch::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> branch.h:28</div></div>
<div class="ttc" id="anamespace_utils_1_1_types_xhtml_a987afa1d65d5f43c5e379d4cdafacd44"><div class="ttname"><a href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a></div><div class="ttdeci">std::uint8_t u1</div><div class="ttdef"><b>Definition:</b> types.h:8</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a3cc2474a65d94d73c3438709b88b2c4e"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a3cc2474a65d94d73c3438709b88b2c4e">Instructions::Opcodes::kIF_ICMPLE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:121</div></div>
<div class="ttc" id="anamespace_utils_1_1_string_xhtml_aec9a3efb3bd837c1f21fec1ceba1eec9"><div class="ttname"><a href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a></div><div class="ttdeci">std::string toString(const T &amp;num)</div><div class="ttdef"><b>Definition:</b> string.h:21</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ad633fc38df0cdc80d22948f39d662fc0"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ad633fc38df0cdc80d22948f39d662fc0">Instructions::Opcodes::kIFGE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:125</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_ref_compare_equal_xhtml"><div class="ttname"><a href="../../da/d77/class_instructions_1_1_branch_1_1_ref_compare_equal.xhtml">Instructions::Branch::RefCompareEqual</a></div><div class="ttdef"><b>Definition:</b> branch.h:37</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_less_than_xhtml"><div class="ttname"><a href="../../d8/d39/class_instructions_1_1_branch_1_1_integer_compare_less_than.xhtml">Instructions::Branch::IntegerCompareLessThan</a></div><div class="ttdef"><b>Definition:</b> branch.h:97</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_greater_equal_xhtml_a8d8e4f9b0114ad8222fb5cf4f6ebdfa6"><div class="ttname"><a href="../../d5/dc8/class_instructions_1_1_branch_1_1_integer_compare_greater_equal.xhtml#a8d8e4f9b0114ad8222fb5cf4f6ebdfa6">Instructions::Branch::IntegerCompareGreaterEqual::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_ref_null_xhtml"><div class="ttname"><a href="../../de/da3/class_instructions_1_1_branch_1_1_ref_null.xhtml">Instructions::Branch::RefNull</a></div><div class="ttdef"><b>Definition:</b> branch.h:187</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_greater_equal_xhtml_a1a8e93353ca7b198fc5b2085cf191347"><div class="ttname"><a href="../../d5/dc8/class_instructions_1_1_branch_1_1_integer_compare_greater_equal.xhtml#a1a8e93353ca7b198fc5b2085cf191347">Instructions::Branch::IntegerCompareGreaterEqual::IntegerCompareGreaterEqual</a></div><div class="ttdeci">IntegerCompareGreaterEqual()</div><div class="ttdef"><b>Definition:</b> branch.h:69</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_less_equal_xhtml_a93eb5ff94c4969f329451a476d2fdf89"><div class="ttname"><a href="../../d2/de7/class_instructions_1_1_branch_1_1_integer_compare_less_equal.xhtml#a93eb5ff94c4969f329451a476d2fdf89">Instructions::Branch::IntegerCompareLessEqual::IntegerCompareLessEqual</a></div><div class="ttdeci">IntegerCompareLessEqual()</div><div class="ttdef"><b>Definition:</b> branch.h:89</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af81f94f36e58767ee132f415a26ca364"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af81f94f36e58767ee132f415a26ca364">Instructions::Opcodes::kIF_ICMPGE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:119</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_ref_null_xhtml_a6783b2e73e6879ff06d144a981597370"><div class="ttname"><a href="../../de/da3/class_instructions_1_1_branch_1_1_ref_null.xhtml#a6783b2e73e6879ff06d144a981597370">Instructions::Branch::RefNull::RefNull</a></div><div class="ttdeci">RefNull()</div><div class="ttdef"><b>Definition:</b> branch.h:189</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a3c6f26dca9d4ab5b84fd0ad520bd3641"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a3c6f26dca9d4ab5b84fd0ad520bd3641">Instructions::Opcodes::kIF_ACMPNE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:117</div></div>
<div class="ttc" id="aclass_memory_areas_1_1_thread_xhtml"><div class="ttname"><a href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a></div><div class="ttdef"><b>Definition:</b> thread.h:11</div></div>
<div class="ttc" id="aclass_instructions_1_1_branch_1_1_integer_compare_less_than_xhtml_a6bac938a1c5c28767fd065c6fab1bd51"><div class="ttname"><a href="../../d8/d39/class_instructions_1_1_branch_1_1_integer_compare_less_than.xhtml#a6bac938a1c5c28767fd065c6fab1bd51">Instructions::Branch::IntegerCompareLessThan::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Nov 21 2019 16:45:44 for JVM 8 SB 2019/2 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.16
</small></address>
</body>
</html>
