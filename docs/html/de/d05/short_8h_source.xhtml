<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.16"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>JVM 8 SB 2019/2: include/instructions/instruction_set/short.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">JVM 8 SB 2019/2
   </div>
   <div id="projectbrief">projeto que visa fazer uma implementação simples da JVM 8</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.16 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_2843b2c750ff6b39dcfe98bf2554dba0.xhtml">instructions</a></li><li class="navelem"><a class="el" href="../../dir_7ef69e660d75507825e3f78a695283fd.xhtml">instruction_set</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">short.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../de/d05/short_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_SHORT_H_</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_SHORT_H_</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/d5a/base_8h.xhtml">instructions/instruction_set/base.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/de6/opcodes_8h.xhtml">instructions/opcodes.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/d66/string_8h.xhtml">utils/string.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../da/d11/namespace_instructions.xhtml">Instructions</a> {</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d2/d51/namespace_instructions_1_1_short.xhtml">   12</a></span>&#160;<span class="keyword">namespace </span>Short {</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml">   13</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml">LoadFromArray</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml#a8e7364d2340753646b05af34df82bba9">   15</a></span>&#160;  <a class="code" href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml#a8e7364d2340753646b05af34df82bba9">LoadFromArray</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a68ea3e7111c0c0bf650896ebda4bb91d">kSALOAD</a>) {}</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml#ab9b7eed4a8313ad5d78ca3324a87f1cf">   17</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml#ab9b7eed4a8313ad5d78ca3324a87f1cf">toBytecode</a>(</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  }</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml#aa039de2a69553ca7f439fe03e2b83b16">   25</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml#aa039de2a69553ca7f439fe03e2b83b16">toBytecode_json</a>(</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml#a0afffc763bdac884586c2f7b82fd849c">execute</a>(</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;};</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml">   37</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml">StoreIntoArray</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml#ae3a524f8208dfb30a011ae1b4d1d9dd5">   39</a></span>&#160;  <a class="code" href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml#ae3a524f8208dfb30a011ae1b4d1d9dd5">StoreIntoArray</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a83c34d4e942beac69ca458a2a461cb1b">kSASTORE</a>) {}</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml#a4e1b7e71aeb9f959f3b6c5dedd4aa3ac">   41</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml#a4e1b7e71aeb9f959f3b6c5dedd4aa3ac">toBytecode</a>(</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml#a93e04ce4c4b4756e58d562091c601603">   49</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml#a93e04ce4c4b4756e58d562091c601603">toBytecode_json</a>(</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml#ab103eeb12ea654a888d75fce1d7f1ed7">execute</a>(</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;};</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml">   61</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml">Push</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml#a25311d7f14b1d1f0e686f9f16baa844f">   63</a></span>&#160;  <a class="code" href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml#a25311d7f14b1d1f0e686f9f16baa844f">Push</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a5e830911c67b2f0f663511b3e097071d">kSIPUSH</a>) {}</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml#aad1de151f550c1d430ff351f73841eea">   65</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml#aad1de151f550c1d430ff351f73841eea">toBytecode</a>(</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    int16_t s = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; s &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    *delta_code = 2;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml#a92f2a3cd6fc67228618b3d2b12211621">   75</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml#a92f2a3cd6fc67228618b3d2b12211621">toBytecode_json</a>(</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    int16_t s = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    *delta_code = 2;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(s)};</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml#a80778c4c60fec97f293a1d28779fc55e">execute</a>(</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;};</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}  <span class="comment">// namespace Short</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}  <span class="comment">// namespace Instructions</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">#endif  // INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_SHORT_H_</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a68ea3e7111c0c0bf650896ebda4bb91d"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a68ea3e7111c0c0bf650896ebda4bb91d">Instructions::Opcodes::kSALOAD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:210</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_push_xhtml_a80778c4c60fec97f293a1d28779fc55e"><div class="ttname"><a href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml#a80778c4c60fec97f293a1d28779fc55e">Instructions::Short::Push::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_load_from_array_xhtml_ab9b7eed4a8313ad5d78ca3324a87f1cf"><div class="ttname"><a href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml#ab9b7eed4a8313ad5d78ca3324a87f1cf">Instructions::Short::LoadFromArray::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> short.h:17</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a83c34d4e942beac69ca458a2a461cb1b"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a83c34d4e942beac69ca458a2a461cb1b">Instructions::Opcodes::kSASTORE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:211</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instructions::Instruction</a></div><div class="ttdef"><b>Definition:</b> base.h:15</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_push_xhtml_a25311d7f14b1d1f0e686f9f16baa844f"><div class="ttname"><a href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml#a25311d7f14b1d1f0e686f9f16baa844f">Instructions::Short::Push::Push</a></div><div class="ttdeci">Push()</div><div class="ttdef"><b>Definition:</b> short.h:63</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_store_into_array_xhtml_ab103eeb12ea654a888d75fce1d7f1ed7"><div class="ttname"><a href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml#ab103eeb12ea654a888d75fce1d7f1ed7">Instructions::Short::StoreIntoArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="abase_8h_xhtml"><div class="ttname"><a href="../../d3/d5a/base_8h.xhtml">base.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_store_into_array_xhtml_ae3a524f8208dfb30a011ae1b4d1d9dd5"><div class="ttname"><a href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml#ae3a524f8208dfb30a011ae1b4d1d9dd5">Instructions::Short::StoreIntoArray::StoreIntoArray</a></div><div class="ttdeci">StoreIntoArray()</div><div class="ttdef"><b>Definition:</b> short.h:39</div></div>
<div class="ttc" id="astring_8h_xhtml"><div class="ttname"><a href="../../da/d66/string_8h.xhtml">string.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_store_into_array_xhtml"><div class="ttname"><a href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml">Instructions::Short::StoreIntoArray</a></div><div class="ttdef"><b>Definition:</b> short.h:37</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_ab765ddcb61c4d60f2647154d87f97ae2"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Instructions::Opcodes::getMnemonic</a></div><div class="ttdeci">std::string getMnemonic(const Utils::Types::u1 &amp;opcode)</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_load_from_array_xhtml_a8e7364d2340753646b05af34df82bba9"><div class="ttname"><a href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml#a8e7364d2340753646b05af34df82bba9">Instructions::Short::LoadFromArray::LoadFromArray</a></div><div class="ttdeci">LoadFromArray()</div><div class="ttdef"><b>Definition:</b> short.h:15</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_store_into_array_xhtml_a93e04ce4c4b4756e58d562091c601603"><div class="ttname"><a href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml#a93e04ce4c4b4756e58d562091c601603">Instructions::Short::StoreIntoArray::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> short.h:49</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_load_from_array_xhtml_a0afffc763bdac884586c2f7b82fd849c"><div class="ttname"><a href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml#a0afffc763bdac884586c2f7b82fd849c">Instructions::Short::LoadFromArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml_abce4218201520f9ca8880bda8ab78e40"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">Instructions::Instruction::opcode</a></div><div class="ttdeci">const Utils::Types::u1 opcode</div><div class="ttdef"><b>Definition:</b> base.h:35</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_push_xhtml"><div class="ttname"><a href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml">Instructions::Short::Push</a></div><div class="ttdef"><b>Definition:</b> short.h:61</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_store_into_array_xhtml_a4e1b7e71aeb9f959f3b6c5dedd4aa3ac"><div class="ttname"><a href="../../d1/d1a/class_instructions_1_1_short_1_1_store_into_array.xhtml#a4e1b7e71aeb9f959f3b6c5dedd4aa3ac">Instructions::Short::StoreIntoArray::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> short.h:41</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a5e830911c67b2f0f663511b3e097071d"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a5e830911c67b2f0f663511b3e097071d">Instructions::Opcodes::kSIPUSH</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:212</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_push_xhtml_aad1de151f550c1d430ff351f73841eea"><div class="ttname"><a href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml#aad1de151f550c1d430ff351f73841eea">Instructions::Short::Push::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> short.h:65</div></div>
<div class="ttc" id="aopcodes_8h_xhtml"><div class="ttname"><a href="../../d3/de6/opcodes_8h.xhtml">opcodes.h</a></div></div>
<div class="ttc" id="anamespace_instructions_xhtml"><div class="ttname"><a href="../../da/d11/namespace_instructions.xhtml">Instructions</a></div><div class="ttdef"><b>Definition:</b> execution_engine.h:12</div></div>
<div class="ttc" id="anamespace_utils_1_1_string_xhtml_aec9a3efb3bd837c1f21fec1ceba1eec9"><div class="ttname"><a href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a></div><div class="ttdeci">std::string toString(const T &amp;num)</div><div class="ttdef"><b>Definition:</b> string.h:21</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_push_xhtml_a92f2a3cd6fc67228618b3d2b12211621"><div class="ttname"><a href="../../d1/dcc/class_instructions_1_1_short_1_1_push.xhtml#a92f2a3cd6fc67228618b3d2b12211621">Instructions::Short::Push::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> short.h:75</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_load_from_array_xhtml"><div class="ttname"><a href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml">Instructions::Short::LoadFromArray</a></div><div class="ttdef"><b>Definition:</b> short.h:13</div></div>
<div class="ttc" id="aclass_instructions_1_1_short_1_1_load_from_array_xhtml_aa039de2a69553ca7f439fe03e2b83b16"><div class="ttname"><a href="../../dc/d51/class_instructions_1_1_short_1_1_load_from_array.xhtml#aa039de2a69553ca7f439fe03e2b83b16">Instructions::Short::LoadFromArray::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> short.h:25</div></div>
<div class="ttc" id="aclass_memory_areas_1_1_thread_xhtml"><div class="ttname"><a href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a></div><div class="ttdef"><b>Definition:</b> thread.h:11</div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 2 2019 03:56:32 for JVM 8 SB 2019/2 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.16
</small></address>
</body>
</html>
