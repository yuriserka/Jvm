<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.16"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>JVM 8 SB 2019/2: include/instructions/instruction_set/char.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">JVM 8 SB 2019/2
   </div>
   <div id="projectbrief">projeto que visa fazer uma implementação simples da JVM 8</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.16 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_2843b2c750ff6b39dcfe98bf2554dba0.xhtml">instructions</a></li><li class="navelem"><a class="el" href="../../dir_7ef69e660d75507825e3f78a695283fd.xhtml">instruction_set</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">char.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d3/df3/char_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_CHAR_H_</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_CHAR_H_</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/d5a/base_8h.xhtml">instructions/instruction_set/base.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/de6/opcodes_8h.xhtml">instructions/opcodes.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../da/d11/namespace_instructions.xhtml">Instructions</a> {</div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="../../d4/d41/namespace_instructions_1_1_char.xhtml">   11</a></span>&#160;<span class="keyword">namespace </span>Char {</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml">   12</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml">BaseChar</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml#ab6ddbc9467f26f4dba5cc22938791c4b">   14</a></span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml#ab6ddbc9467f26f4dba5cc22938791c4b">BaseChar</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a> &amp;tag) : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(tag) {}</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml#a824fe6c104347a1a9615742b9ffea122">   16</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml#a824fe6c104347a1a9615742b9ffea122">toBytecode</a>(</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  }</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml#ac932881c2a351f493950b44239d33c46">   24</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml#ac932881c2a351f493950b44239d33c46">toBytecode_json</a>(</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  }</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;};</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="../../de/dbd/class_instructions_1_1_char_1_1_load_from_array.xhtml">   31</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../de/dbd/class_instructions_1_1_char_1_1_load_from_array.xhtml">LoadFromArray</a> : <span class="keyword">public</span> <a class="code" href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml">BaseChar</a> {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="../../de/dbd/class_instructions_1_1_char_1_1_load_from_array.xhtml#a989d4a7b0489c666f3c65c32277448be">   33</a></span>&#160;  <a class="code" href="../../de/dbd/class_instructions_1_1_char_1_1_load_from_array.xhtml#a989d4a7b0489c666f3c65c32277448be">LoadFromArray</a>() : <a class="code" href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml">BaseChar</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a819134b61e5cfbaba95d17cdf474be00">kCALOAD</a>) {}</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../de/dbd/class_instructions_1_1_char_1_1_load_from_array.xhtml#abf7246021395e7b92f29010ed789e9f5">execute</a>(</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;};</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../de/d04/class_instructions_1_1_char_1_1_store_into_array.xhtml">   41</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../de/d04/class_instructions_1_1_char_1_1_store_into_array.xhtml">StoreIntoArray</a> : <span class="keyword">public</span> <a class="code" href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml">BaseChar</a> {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="../../de/d04/class_instructions_1_1_char_1_1_store_into_array.xhtml#a8ade92b46f8d2c63d699ccab40a3f74d">   43</a></span>&#160;  <a class="code" href="../../de/d04/class_instructions_1_1_char_1_1_store_into_array.xhtml#a8ade92b46f8d2c63d699ccab40a3f74d">StoreIntoArray</a>() : <a class="code" href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml">BaseChar</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aee9a2abe6a8ac296d46ffa8f93c3c4bf">kCASTORE</a>) {}</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../de/d04/class_instructions_1_1_char_1_1_store_into_array.xhtml#a7faa7d8852ecf44404ae2a610126aca9">execute</a>(</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;};</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}  <span class="comment">// namespace Char</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}  <span class="comment">// namespace Instructions</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#endif  // INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_CHAR_H_</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclass_instructions_1_1_char_1_1_base_char_xhtml"><div class="ttname"><a href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml">Instructions::Char::BaseChar</a></div><div class="ttdef"><b>Definition:</b> char.h:12</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instructions::Instruction</a></div><div class="ttdef"><b>Definition:</b> base.h:15</div></div>
<div class="ttc" id="abase_8h_xhtml"><div class="ttname"><a href="../../d3/d5a/base_8h.xhtml">base.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_char_1_1_store_into_array_xhtml_a7faa7d8852ecf44404ae2a610126aca9"><div class="ttname"><a href="../../de/d04/class_instructions_1_1_char_1_1_store_into_array.xhtml#a7faa7d8852ecf44404ae2a610126aca9">Instructions::Char::StoreIntoArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_ab765ddcb61c4d60f2647154d87f97ae2"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Instructions::Opcodes::getMnemonic</a></div><div class="ttdeci">std::string getMnemonic(const Utils::Types::u1 &amp;opcode)</div></div>
<div class="ttc" id="aclass_instructions_1_1_char_1_1_load_from_array_xhtml"><div class="ttname"><a href="../../de/dbd/class_instructions_1_1_char_1_1_load_from_array.xhtml">Instructions::Char::LoadFromArray</a></div><div class="ttdef"><b>Definition:</b> char.h:31</div></div>
<div class="ttc" id="aclass_instructions_1_1_char_1_1_store_into_array_xhtml_a8ade92b46f8d2c63d699ccab40a3f74d"><div class="ttname"><a href="../../de/d04/class_instructions_1_1_char_1_1_store_into_array.xhtml#a8ade92b46f8d2c63d699ccab40a3f74d">Instructions::Char::StoreIntoArray::StoreIntoArray</a></div><div class="ttdeci">StoreIntoArray()</div><div class="ttdef"><b>Definition:</b> char.h:43</div></div>
<div class="ttc" id="aclass_instructions_1_1_char_1_1_load_from_array_xhtml_abf7246021395e7b92f29010ed789e9f5"><div class="ttname"><a href="../../de/dbd/class_instructions_1_1_char_1_1_load_from_array.xhtml#abf7246021395e7b92f29010ed789e9f5">Instructions::Char::LoadFromArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml_abce4218201520f9ca8880bda8ab78e40"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">Instructions::Instruction::opcode</a></div><div class="ttdeci">const Utils::Types::u1 opcode</div><div class="ttdef"><b>Definition:</b> base.h:35</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a819134b61e5cfbaba95d17cdf474be00"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a819134b61e5cfbaba95d17cdf474be00">Instructions::Opcodes::kCALOAD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:32</div></div>
<div class="ttc" id="aopcodes_8h_xhtml"><div class="ttname"><a href="../../d3/de6/opcodes_8h.xhtml">opcodes.h</a></div></div>
<div class="ttc" id="anamespace_instructions_xhtml"><div class="ttname"><a href="../../da/d11/namespace_instructions.xhtml">Instructions</a></div><div class="ttdef"><b>Definition:</b> execution_engine.h:12</div></div>
<div class="ttc" id="aclass_instructions_1_1_char_1_1_base_char_xhtml_ac932881c2a351f493950b44239d33c46"><div class="ttname"><a href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml#ac932881c2a351f493950b44239d33c46">Instructions::Char::BaseChar::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> char.h:24</div></div>
<div class="ttc" id="aclass_instructions_1_1_char_1_1_base_char_xhtml_a824fe6c104347a1a9615742b9ffea122"><div class="ttname"><a href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml#a824fe6c104347a1a9615742b9ffea122">Instructions::Char::BaseChar::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> char.h:16</div></div>
<div class="ttc" id="anamespace_utils_1_1_types_xhtml_a987afa1d65d5f43c5e379d4cdafacd44"><div class="ttname"><a href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a></div><div class="ttdeci">std::uint8_t u1</div><div class="ttdef"><b>Definition:</b> types.h:8</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37aee9a2abe6a8ac296d46ffa8f93c3c4bf"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aee9a2abe6a8ac296d46ffa8f93c3c4bf">Instructions::Opcodes::kCASTORE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:33</div></div>
<div class="ttc" id="aclass_instructions_1_1_char_1_1_store_into_array_xhtml"><div class="ttname"><a href="../../de/d04/class_instructions_1_1_char_1_1_store_into_array.xhtml">Instructions::Char::StoreIntoArray</a></div><div class="ttdef"><b>Definition:</b> char.h:41</div></div>
<div class="ttc" id="aclass_instructions_1_1_char_1_1_load_from_array_xhtml_a989d4a7b0489c666f3c65c32277448be"><div class="ttname"><a href="../../de/dbd/class_instructions_1_1_char_1_1_load_from_array.xhtml#a989d4a7b0489c666f3c65c32277448be">Instructions::Char::LoadFromArray::LoadFromArray</a></div><div class="ttdeci">LoadFromArray()</div><div class="ttdef"><b>Definition:</b> char.h:33</div></div>
<div class="ttc" id="aclass_instructions_1_1_char_1_1_base_char_xhtml_ab6ddbc9467f26f4dba5cc22938791c4b"><div class="ttname"><a href="../../d2/dae/class_instructions_1_1_char_1_1_base_char.xhtml#ab6ddbc9467f26f4dba5cc22938791c4b">Instructions::Char::BaseChar::BaseChar</a></div><div class="ttdeci">BaseChar(const Utils::Types::u1 &amp;tag)</div><div class="ttdef"><b>Definition:</b> char.h:14</div></div>
<div class="ttc" id="aclass_memory_areas_1_1_thread_xhtml"><div class="ttname"><a href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a></div><div class="ttdef"><b>Definition:</b> thread.h:11</div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 2 2019 03:56:32 for JVM 8 SB 2019/2 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.16
</small></address>
</body>
</html>
