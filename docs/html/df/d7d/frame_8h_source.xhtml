<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.16"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>JVM 8 SB 2019/2: include/utils/frame.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">JVM 8 SB 2019/2
   </div>
   <div id="projectbrief">projeto que visa fazer uma implementação simples da JVM 8</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.16 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_821002d4f10779a80d4fb17bc32f21f1.xhtml">utils</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">frame.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../df/d7d/frame_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef INCLUDE_UTILS_FRAME_H_</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define INCLUDE_UTILS_FRAME_H_</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;stack&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d0/d36/constant_pool_8h.xhtml">utils/constantPool.h</a>&quot;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/d45/errors_8h.xhtml">utils/errors.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../df/d8d/any_8h.xhtml">utils/external/any.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d49/types_8h.xhtml">utils/types.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../d1/d7c/namespace_utils.xhtml">Utils</a> {</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml">   12</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml">Frame</a> {</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml#aa85abf88a1a35d7cd574cd1ae17315ca">   14</a></span>&#160;  <a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#aa85abf88a1a35d7cd574cd1ae17315ca">Frame</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d94/namespace_utils_1_1_types.xhtml#aba1cd9c4d65348f39647c945c32a9954">Types::u2</a> &amp;stack_size, <span class="keyword">const</span> <a class="code" href="../../d0/d94/namespace_utils_1_1_types.xhtml#aba1cd9c4d65348f39647c945c32a9954">Types::u2</a> &amp;localvar_size,</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;        <span class="keyword">const</span> std::vector&lt;ConstantPool::cp_info&gt; &amp;kpool) {</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    this-&gt;max_operand_stack_size = stack_size;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    this-&gt;max_localvar_size = localvar_size;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    this-&gt;local_variables.resize(localvar_size);</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    this-&gt;runtime_constant_pool = kpool;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    this-&gt;<a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#af2a23de5a4d89d79d7987b43ffb7612f">pc</a> = 0;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  }</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml#ae34314899a2561d682db538129caf09d">   24</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#ae34314899a2561d682db538129caf09d">pushLocalVar</a>(<span class="keyword">const</span> T &amp;localvar) {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">if</span> (this-&gt;local_variables.size() &gt; this-&gt;max_localvar_size) {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      <span class="keywordflow">throw</span> <a class="code" href="../../d6/d12/class_utils_1_1_errors_1_1_exception.xhtml">Utils::Errors::Exception</a>(<a class="code" href="../../d4/d01/namespace_utils_1_1_errors.xhtml#a0b174cdbfa547389df18071526c63e7fa939e54c77b5278427b350e618b3e3476">Utils::Errors::kSTACK</a>,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                                     <span class="stringliteral">&quot;Loval Variable Overflow&quot;</span>);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    }</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    this-&gt;local_variables[this-&gt;last_index++] = localvar;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="comment">// double e long ocupam 2 slots do vetor de variaveis locais, uma</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="comment">// implementação possivel seria colocar o high e o low em uma, mas eu do</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="comment">// push no valor cheio logo em apenas uma posição</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">if</span> (std::is_same&lt;T, double&gt;::value || std::is_same&lt;T, long&gt;::value) {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      this-&gt;local_variables[this-&gt;last_index++] = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml#a35ca73411f6f115b20f3a740abf98d2c">   39</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#a35ca73411f6f115b20f3a740abf98d2c">pushLocalVar</a>(<span class="keyword">const</span> T &amp;localvar, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;index) {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">if</span> (this-&gt;local_variables.size() &gt; this-&gt;max_localvar_size) {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordflow">throw</span> <a class="code" href="../../d6/d12/class_utils_1_1_errors_1_1_exception.xhtml">Utils::Errors::Exception</a>(<a class="code" href="../../d4/d01/namespace_utils_1_1_errors.xhtml#a0b174cdbfa547389df18071526c63e7fa939e54c77b5278427b350e618b3e3476">Utils::Errors::kSTACK</a>,</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                     <span class="stringliteral">&quot;Loval Variable Overflow&quot;</span>);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    this-&gt;local_variables[index] = localvar;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="comment">// double e long ocupam 2 slots do vetor de variaveis locais, uma</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="comment">// implementação possivel seria colocar o high e o low em uma, mas eu do</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="comment">// push no valor cheio logo em apenas uma posição</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">if</span> (std::is_same&lt;T, double&gt;::value || std::is_same&lt;T, long&gt;::value) {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      this-&gt;local_variables[index + 1] = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml#a756e8b4eab7d53e0982668f53ec6ec05">   54</a></span>&#160;  T <a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#a756e8b4eab7d53e0982668f53ec6ec05">getLocalVarValue</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;index) {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">return</span> this-&gt;local_variables[index].as&lt;T&gt;();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml#a24f927852fbf6627d783b3987b6622f8">   59</a></span>&#160;  T *<a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#a24f927852fbf6627d783b3987b6622f8">getLocalVarReference</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;index) {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">return</span> &amp;this-&gt;local_variables[index].as&lt;T&gt;();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml#a237175c998e76ecba63539775183b200">   64</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#a237175c998e76ecba63539775183b200">pushOperand</a>(<span class="keyword">const</span> T &amp;operand) {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">if</span> (this-&gt;operand_stack.size() &gt; this-&gt;max_operand_stack_size) {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      <span class="keywordflow">throw</span> <a class="code" href="../../d6/d12/class_utils_1_1_errors_1_1_exception.xhtml">Utils::Errors::Exception</a>(<a class="code" href="../../d4/d01/namespace_utils_1_1_errors.xhtml#a0b174cdbfa547389df18071526c63e7fa939e54c77b5278427b350e618b3e3476">Utils::Errors::kSTACK</a>,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                     <span class="stringliteral">&quot;Stack Frame Overflow&quot;</span>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    this-&gt;operand_stack.push(operand);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml#a450c8adfdb95d0d19813fbd88ba4d01f">   73</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#a450c8adfdb95d0d19813fbd88ba4d01f">pushOperand</a>(T *operand) {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">if</span> (this-&gt;operand_stack.size() &gt; this-&gt;max_operand_stack_size) {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordflow">throw</span> <a class="code" href="../../d6/d12/class_utils_1_1_errors_1_1_exception.xhtml">Utils::Errors::Exception</a>(<a class="code" href="../../d4/d01/namespace_utils_1_1_errors.xhtml#a0b174cdbfa547389df18071526c63e7fa939e54c77b5278427b350e618b3e3476">Utils::Errors::kSTACK</a>,</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                     <span class="stringliteral">&quot;Stack Frame Overflow&quot;</span>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    this-&gt;operand_stack.push(operand);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml#acb68a5bf4b14811e669ab9d31cb263f3">   82</a></span>&#160;  T <a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#acb68a5bf4b14811e669ab9d31cb263f3">popOperand</a>() {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">auto</span> any = this-&gt;operand_stack.top();</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">if</span> (std::is_same&lt;T, Any&gt;::value) {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      this-&gt;operand_stack.pop();</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordflow">return</span> any;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (!any.is&lt;T&gt;()) {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordflow">throw</span> <a class="code" href="../../d6/d12/class_utils_1_1_errors_1_1_exception.xhtml">Utils::Errors::Exception</a>(<a class="code" href="../../d4/d01/namespace_utils_1_1_errors.xhtml#a0b174cdbfa547389df18071526c63e7faa7c46ec87c6814cd49d9933a6c8aecae">Utils::Errors::kBADCAST</a>,</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                     <span class="stringliteral">&quot;invalid cast in pop operand&quot;</span>);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    this-&gt;operand_stack.pop();</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">return</span> any.as&lt;T&gt;();</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml#adc219377f454b5f1b837d6602f26b33b">   96</a></span>&#160;  T *<a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#adc219377f454b5f1b837d6602f26b33b">popOperandReference</a>() {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keyword">auto</span> any = this-&gt;operand_stack.top();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    this-&gt;operand_stack.pop();</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">if</span> (std::is_same&lt;T, Any&gt;::value) {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="keywordflow">return</span> any;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> &amp;any.as&lt;T&gt;();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml#a2d0d2b05ad58494c470f8472ea79f95d">  107</a></span>&#160;  <a class="code" href="../../db/da7/struct_any.xhtml">Any</a> <a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#a2d0d2b05ad58494c470f8472ea79f95d">topOperand</a>() { <span class="keywordflow">return</span> this-&gt;operand_stack.top(); }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml#a4a3353f984974f14086f597e32d59244">  109</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#a4a3353f984974f14086f597e32d59244">cleanOperands</a>() {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">while</span> (!this-&gt;operand_stack.empty()) {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      this-&gt;operand_stack.pop();</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="../../d8/d62/class_utils_1_1_frame.xhtml#af2a23de5a4d89d79d7987b43ffb7612f">  115</a></span>&#160;  <span class="keywordtype">int</span> <a class="code" href="../../d8/d62/class_utils_1_1_frame.xhtml#af2a23de5a4d89d79d7987b43ffb7612f">pc</a>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; <span class="keyword">private</span>:</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordtype">int</span> last_index = 0;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  std::vector&lt;Any&gt; local_variables;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  std::stack&lt;Any&gt; operand_stack;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  uint16_t max_operand_stack_size;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  uint16_t max_localvar_size;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  std::vector&lt;ConstantPool::cp_info&gt; runtime_constant_pool;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;};</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}  <span class="comment">// namespace Utils</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">// std::vector&lt;Any&gt; local_variables = {Any(115), Any(&quot;Hello mundo cruel&quot;),</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">//                                     Any(651151613.144456), Any(3.14159f)};</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">// std::cout &lt;&lt; local_variables[0].as&lt;int&gt;() &lt;&lt; &quot;\n&quot;;</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">// std::cout &lt;&lt; local_variables[1].as&lt;const char *&gt;() &lt;&lt; &quot;\n&quot;;</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">// std::cout &lt;&lt; local_variables[2].as&lt;double&gt;() &lt;&lt; &quot;\n&quot;;</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">// std::cout &lt;&lt; local_variables[3].as&lt;float&gt;() &lt;&lt; &quot;\n&quot;;</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">#endif  // INCLUDE_UTILS_FRAME_H_</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclass_utils_1_1_frame_xhtml_aa85abf88a1a35d7cd574cd1ae17315ca"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml#aa85abf88a1a35d7cd574cd1ae17315ca">Utils::Frame::Frame</a></div><div class="ttdeci">Frame(const Types::u2 &amp;stack_size, const Types::u2 &amp;localvar_size, const std::vector&lt; ConstantPool::cp_info &gt; &amp;kpool)</div><div class="ttdef"><b>Definition:</b> frame.h:14</div></div>
<div class="ttc" id="aclass_utils_1_1_frame_xhtml_a756e8b4eab7d53e0982668f53ec6ec05"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml#a756e8b4eab7d53e0982668f53ec6ec05">Utils::Frame::getLocalVarValue</a></div><div class="ttdeci">T getLocalVarValue(const int &amp;index)</div><div class="ttdef"><b>Definition:</b> frame.h:54</div></div>
<div class="ttc" id="aclass_utils_1_1_frame_xhtml_adc219377f454b5f1b837d6602f26b33b"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml#adc219377f454b5f1b837d6602f26b33b">Utils::Frame::popOperandReference</a></div><div class="ttdeci">T * popOperandReference()</div><div class="ttdef"><b>Definition:</b> frame.h:96</div></div>
<div class="ttc" id="aclass_utils_1_1_frame_xhtml_a35ca73411f6f115b20f3a740abf98d2c"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml#a35ca73411f6f115b20f3a740abf98d2c">Utils::Frame::pushLocalVar</a></div><div class="ttdeci">void pushLocalVar(const T &amp;localvar, const int &amp;index)</div><div class="ttdef"><b>Definition:</b> frame.h:39</div></div>
<div class="ttc" id="aclass_utils_1_1_frame_xhtml_ae34314899a2561d682db538129caf09d"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml#ae34314899a2561d682db538129caf09d">Utils::Frame::pushLocalVar</a></div><div class="ttdeci">void pushLocalVar(const T &amp;localvar)</div><div class="ttdef"><b>Definition:</b> frame.h:24</div></div>
<div class="ttc" id="aclass_utils_1_1_frame_xhtml_acb68a5bf4b14811e669ab9d31cb263f3"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml#acb68a5bf4b14811e669ab9d31cb263f3">Utils::Frame::popOperand</a></div><div class="ttdeci">T popOperand()</div><div class="ttdef"><b>Definition:</b> frame.h:82</div></div>
<div class="ttc" id="aclass_utils_1_1_frame_xhtml"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml">Utils::Frame</a></div><div class="ttdef"><b>Definition:</b> frame.h:12</div></div>
<div class="ttc" id="aany_8h_xhtml"><div class="ttname"><a href="../../df/d8d/any_8h.xhtml">any.h</a></div></div>
<div class="ttc" id="aclass_utils_1_1_frame_xhtml_a4a3353f984974f14086f597e32d59244"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml#a4a3353f984974f14086f597e32d59244">Utils::Frame::cleanOperands</a></div><div class="ttdeci">void cleanOperands()</div><div class="ttdef"><b>Definition:</b> frame.h:109</div></div>
<div class="ttc" id="anamespace_utils_1_1_types_xhtml_aba1cd9c4d65348f39647c945c32a9954"><div class="ttname"><a href="../../d0/d94/namespace_utils_1_1_types.xhtml#aba1cd9c4d65348f39647c945c32a9954">Utils::Types::u2</a></div><div class="ttdeci">std::uint16_t u2</div><div class="ttdef"><b>Definition:</b> types.h:9</div></div>
<div class="ttc" id="anamespace_utils_xhtml"><div class="ttname"><a href="../../d1/d7c/namespace_utils.xhtml">Utils</a></div><div class="ttdef"><b>Definition:</b> accessFlags.h:8</div></div>
<div class="ttc" id="aerrors_8h_xhtml"><div class="ttname"><a href="../../de/d45/errors_8h.xhtml">errors.h</a></div></div>
<div class="ttc" id="aclass_utils_1_1_frame_xhtml_af2a23de5a4d89d79d7987b43ffb7612f"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml#af2a23de5a4d89d79d7987b43ffb7612f">Utils::Frame::pc</a></div><div class="ttdeci">int pc</div><div class="ttdef"><b>Definition:</b> frame.h:115</div></div>
<div class="ttc" id="aclass_utils_1_1_frame_xhtml_a237175c998e76ecba63539775183b200"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml#a237175c998e76ecba63539775183b200">Utils::Frame::pushOperand</a></div><div class="ttdeci">void pushOperand(const T &amp;operand)</div><div class="ttdef"><b>Definition:</b> frame.h:64</div></div>
<div class="ttc" id="aclass_utils_1_1_frame_xhtml_a2d0d2b05ad58494c470f8472ea79f95d"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml#a2d0d2b05ad58494c470f8472ea79f95d">Utils::Frame::topOperand</a></div><div class="ttdeci">Any topOperand()</div><div class="ttdef"><b>Definition:</b> frame.h:107</div></div>
<div class="ttc" id="anamespace_utils_1_1_errors_xhtml_a0b174cdbfa547389df18071526c63e7fa939e54c77b5278427b350e618b3e3476"><div class="ttname"><a href="../../d4/d01/namespace_utils_1_1_errors.xhtml#a0b174cdbfa547389df18071526c63e7fa939e54c77b5278427b350e618b3e3476">Utils::Errors::kSTACK</a></div><div class="ttdef"><b>Definition:</b> errors.h:57</div></div>
<div class="ttc" id="anamespace_utils_1_1_errors_xhtml_a0b174cdbfa547389df18071526c63e7faa7c46ec87c6814cd49d9933a6c8aecae"><div class="ttname"><a href="../../d4/d01/namespace_utils_1_1_errors.xhtml#a0b174cdbfa547389df18071526c63e7faa7c46ec87c6814cd49d9933a6c8aecae">Utils::Errors::kBADCAST</a></div><div class="ttdef"><b>Definition:</b> errors.h:48</div></div>
<div class="ttc" id="atypes_8h_xhtml"><div class="ttname"><a href="../../d9/d49/types_8h.xhtml">types.h</a></div></div>
<div class="ttc" id="aconstant_pool_8h_xhtml"><div class="ttname"><a href="../../d0/d36/constant_pool_8h.xhtml">constantPool.h</a></div></div>
<div class="ttc" id="aclass_utils_1_1_frame_xhtml_a24f927852fbf6627d783b3987b6622f8"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml#a24f927852fbf6627d783b3987b6622f8">Utils::Frame::getLocalVarReference</a></div><div class="ttdeci">T * getLocalVarReference(const int &amp;index)</div><div class="ttdef"><b>Definition:</b> frame.h:59</div></div>
<div class="ttc" id="aclass_utils_1_1_errors_1_1_exception_xhtml"><div class="ttname"><a href="../../d6/d12/class_utils_1_1_errors_1_1_exception.xhtml">Utils::Errors::Exception</a></div><div class="ttdef"><b>Definition:</b> errors.h:9</div></div>
<div class="ttc" id="astruct_any_xhtml"><div class="ttname"><a href="../../db/da7/struct_any.xhtml">Any</a></div><div class="ttdef"><b>Definition:</b> any.h:14</div></div>
<div class="ttc" id="aclass_utils_1_1_frame_xhtml_a450c8adfdb95d0d19813fbd88ba4d01f"><div class="ttname"><a href="../../d8/d62/class_utils_1_1_frame.xhtml#a450c8adfdb95d0d19813fbd88ba4d01f">Utils::Frame::pushOperand</a></div><div class="ttdeci">void pushOperand(T *operand)</div><div class="ttdef"><b>Definition:</b> frame.h:73</div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 2 2019 14:03:38 for JVM 8 SB 2019/2 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.16
</small></address>
</body>
</html>
