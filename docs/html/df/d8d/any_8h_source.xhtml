<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.16"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>JVM 8 SB 2019/2: include/utils/external/any.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">JVM 8 SB 2019/2
   </div>
   <div id="projectbrief">projeto que visa fazer uma implementação simples da JVM 8</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.16 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_821002d4f10779a80d4fb17bc32f21f1.xhtml">utils</a></li><li class="navelem"><a class="el" href="../../dir_b25c1feb59ff708db6e0b9f30ee13dca.xhtml">external</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">any.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../df/d8d/any_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef INCLUDE_UTILS_EXTERNAL_ANY_H_</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define INCLUDE_UTILS_EXTERNAL_ANY_H_</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;typeinfo&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">using</span> <a class="code" href="../../df/d8d/any_8h.xhtml#a8434e215dac35ea0e00eeee9d56d8590">StorageType</a> =</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../df/d8d/any_8h.xhtml#a8434e215dac35ea0e00eeee9d56d8590">   12</a></span>&#160;    <span class="keyword">typename</span> std::decay&lt;typename std::remove_reference&lt;T&gt;::type&gt;<a class="code" href="../../db/d0a/classstd_1_1conditional_1_1type.xhtml">::type</a>;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml">   14</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../db/da7/struct_any.xhtml">Any</a> {</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#aa041abb43b0efb5f21a35cde6a5bb2ed">   15</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../db/da7/struct_any.xhtml#aa041abb43b0efb5f21a35cde6a5bb2ed">is_null</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !this-&gt;ptr; }</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#ac9b01808e80c3b5bc5da1b18cb8e8063">   16</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../db/da7/struct_any.xhtml#ac9b01808e80c3b5bc5da1b18cb8e8063">not_null</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> this-&gt;ptr; }</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#ad6ec8d630f58bcc86a6316764b7e6766">   19</a></span>&#160;  <a class="code" href="../../db/da7/struct_any.xhtml#ad6ec8d630f58bcc86a6316764b7e6766">Any</a>(U &amp;&amp;value) : ptr(new Derived&lt;<a class="code" href="../../df/d8d/any_8h.xhtml#a8434e215dac35ea0e00eeee9d56d8590">StorageType</a>&lt;U&gt;&gt;(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::forward&lt;U&gt;(value))) {}</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> U&gt;</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#a518bb467847983d8e5563460f64e44c6">   22</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../db/da7/struct_any.xhtml#a518bb467847983d8e5563460f64e44c6">is</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">typedef</span> <a class="code" href="../../df/d8d/any_8h.xhtml#a8434e215dac35ea0e00eeee9d56d8590">StorageType&lt;U&gt;</a> T;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keyword">auto</span> derived = <span class="keyword">dynamic_cast&lt;</span>Derived&lt;T&gt; *<span class="keyword">&gt;</span>(this-&gt;ptr);</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">return</span> derived;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  }</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> U&gt;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#a9f8f21b5fb83040297ecd19b40c471cd">   30</a></span>&#160;  <a class="code" href="../../df/d8d/any_8h.xhtml#a8434e215dac35ea0e00eeee9d56d8590">StorageType&lt;U&gt;</a> &amp;<a class="code" href="../../db/da7/struct_any.xhtml#a9f8f21b5fb83040297ecd19b40c471cd">as</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">typedef</span> <a class="code" href="../../df/d8d/any_8h.xhtml#a8434e215dac35ea0e00eeee9d56d8590">StorageType&lt;U&gt;</a> T;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keyword">auto</span> derived = <span class="keyword">dynamic_cast&lt;</span>Derived&lt;T&gt; *<span class="keyword">&gt;</span>(this-&gt;ptr);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordflow">if</span> (!derived) {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordflow">throw</span> std::bad_cast();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">return</span> derived-&gt;value;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  }</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> U&gt;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#aed5e667a20ba065f337587590d03e0bf">   42</a></span>&#160;  <span class="keyword">operator</span> U() {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">return</span> as&lt;StorageType&lt;U&gt;&gt;();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  }</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#adde1510a848d26d7d19f940c508ab24a">   46</a></span>&#160;  <a class="code" href="../../db/da7/struct_any.xhtml#adde1510a848d26d7d19f940c508ab24a">Any</a>() : ptr(nullptr) {}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#a0a7de767d8f403100eacdf30ae341498">   48</a></span>&#160;  <a class="code" href="../../db/da7/struct_any.xhtml#a0a7de767d8f403100eacdf30ae341498">Any</a>(<a class="code" href="../../db/da7/struct_any.xhtml">Any</a> &amp;that) : ptr(that.clone()) {}</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#aacda5b5ad9807300d99ea1fd3ca05114">   50</a></span>&#160;  <a class="code" href="../../db/da7/struct_any.xhtml#aacda5b5ad9807300d99ea1fd3ca05114">Any</a>(<a class="code" href="../../db/da7/struct_any.xhtml">Any</a> &amp;&amp;that) : ptr(that.ptr) { that.ptr = <span class="keyword">nullptr</span>; }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#a5a58ff5201e09a2aa8162859e3e1eef9">   52</a></span>&#160;  <a class="code" href="../../db/da7/struct_any.xhtml#a5a58ff5201e09a2aa8162859e3e1eef9">Any</a>(<span class="keyword">const</span> <a class="code" href="../../db/da7/struct_any.xhtml">Any</a> &amp;that) : ptr(that.clone()) {}</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#a4825d0e1754d93a7d3492ba88de40856">   54</a></span>&#160;  <a class="code" href="../../db/da7/struct_any.xhtml#a4825d0e1754d93a7d3492ba88de40856">Any</a>(<span class="keyword">const</span> <a class="code" href="../../db/da7/struct_any.xhtml">Any</a> &amp;&amp;that) : ptr(that.clone()) {}</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#a32c7c4e0a4b02302715ecfa75bd3c570">   56</a></span>&#160;  <a class="code" href="../../db/da7/struct_any.xhtml">Any</a> &amp;<a class="code" href="../../db/da7/struct_any.xhtml#a32c7c4e0a4b02302715ecfa75bd3c570">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../db/da7/struct_any.xhtml">Any</a> &amp;a) {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">if</span> (this-&gt;ptr == a.ptr) {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">auto</span> old_ptr = this-&gt;ptr;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    this-&gt;ptr = a.clone();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">if</span> (old_ptr) {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="keyword">delete</span> old_ptr;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#af7f4cdc90d94c0814c80bd163c81a337">   71</a></span>&#160;  <a class="code" href="../../db/da7/struct_any.xhtml">Any</a> &amp;<a class="code" href="../../db/da7/struct_any.xhtml#af7f4cdc90d94c0814c80bd163c81a337">operator=</a>(<a class="code" href="../../db/da7/struct_any.xhtml">Any</a> &amp;&amp;a) {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">if</span> (this-&gt;ptr == a.ptr) {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="../../d8/dcc/namespacestd.xhtml#a907191b7578e209391ce938e3b2afdf7">std::swap</a>(this-&gt;ptr, a.ptr);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="../../db/da7/struct_any.xhtml#aebc7abba71ec4596aa7715daec6c1204">   80</a></span>&#160;  <a class="code" href="../../db/da7/struct_any.xhtml#aebc7abba71ec4596aa7715daec6c1204">~Any</a>() {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">if</span> (this-&gt;ptr) <span class="keyword">delete</span> this-&gt;ptr;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; <span class="keyword">private</span>:</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keyword">struct </span>Base {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">virtual</span> ~Base() {}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keyword">virtual</span> Base *clone() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  };</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keyword">struct </span>Derived : Base {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    Derived(U &amp;&amp;value) : value(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::forward&lt;U&gt;(value)) {}</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    T value;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    Base *clone()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">new</span> Derived&lt;T&gt;(value); }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  };</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  Base *clone()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (this-&gt;ptr ? this-&gt;ptr-&gt;clone() : <span class="keyword">nullptr</span>); }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  Base *ptr;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;};</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">#endif  // INCLUDE_UTILS_EXTERNAL_ANY_H_</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aany_8h_xhtml_a8434e215dac35ea0e00eeee9d56d8590"><div class="ttname"><a href="../../df/d8d/any_8h.xhtml#a8434e215dac35ea0e00eeee9d56d8590">StorageType</a></div><div class="ttdeci">typename std::decay&lt; typename std::remove_reference&lt; T &gt;::type &gt;::type StorageType</div><div class="ttdef"><b>Definition:</b> any.h:12</div></div>
<div class="ttc" id="aclassstd_1_1conditional_1_1type_xhtml"><div class="ttname"><a href="../../db/d0a/classstd_1_1conditional_1_1type.xhtml">type</a></div></div>
<div class="ttc" id="astruct_any_xhtml_af7f4cdc90d94c0814c80bd163c81a337"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#af7f4cdc90d94c0814c80bd163c81a337">Any::operator=</a></div><div class="ttdeci">Any &amp; operator=(Any &amp;&amp;a)</div><div class="ttdef"><b>Definition:</b> any.h:71</div></div>
<div class="ttc" id="astruct_any_xhtml_a9f8f21b5fb83040297ecd19b40c471cd"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#a9f8f21b5fb83040297ecd19b40c471cd">Any::as</a></div><div class="ttdeci">StorageType&lt; U &gt; &amp; as() const</div><div class="ttdef"><b>Definition:</b> any.h:30</div></div>
<div class="ttc" id="astruct_any_xhtml_ad6ec8d630f58bcc86a6316764b7e6766"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#ad6ec8d630f58bcc86a6316764b7e6766">Any::Any</a></div><div class="ttdeci">Any(U &amp;&amp;value)</div><div class="ttdef"><b>Definition:</b> any.h:19</div></div>
<div class="ttc" id="astruct_any_xhtml_adde1510a848d26d7d19f940c508ab24a"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#adde1510a848d26d7d19f940c508ab24a">Any::Any</a></div><div class="ttdeci">Any()</div><div class="ttdef"><b>Definition:</b> any.h:46</div></div>
<div class="ttc" id="astruct_any_xhtml_a5a58ff5201e09a2aa8162859e3e1eef9"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#a5a58ff5201e09a2aa8162859e3e1eef9">Any::Any</a></div><div class="ttdeci">Any(const Any &amp;that)</div><div class="ttdef"><b>Definition:</b> any.h:52</div></div>
<div class="ttc" id="astruct_any_xhtml_a0a7de767d8f403100eacdf30ae341498"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#a0a7de767d8f403100eacdf30ae341498">Any::Any</a></div><div class="ttdeci">Any(Any &amp;that)</div><div class="ttdef"><b>Definition:</b> any.h:48</div></div>
<div class="ttc" id="anamespacestd_xhtml_a907191b7578e209391ce938e3b2afdf7"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml#a907191b7578e209391ce938e3b2afdf7">std::swap</a></div><div class="ttdeci">void swap(nlohmann::json &amp;j1, nlohmann::json &amp;j2) noexcept(is_nothrow_move_constructible&lt; nlohmann::json &gt;::value and is_nothrow_move_assignable&lt; nlohmann::json &gt;::value)</div><div class="ttdoc">exchanges the values of two JSON objects</div><div class="ttdef"><b>Definition:</b> nlohmann_json.hpp:11831</div></div>
<div class="ttc" id="astruct_any_xhtml_aa041abb43b0efb5f21a35cde6a5bb2ed"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#aa041abb43b0efb5f21a35cde6a5bb2ed">Any::is_null</a></div><div class="ttdeci">bool is_null() const</div><div class="ttdef"><b>Definition:</b> any.h:15</div></div>
<div class="ttc" id="astruct_any_xhtml_a518bb467847983d8e5563460f64e44c6"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#a518bb467847983d8e5563460f64e44c6">Any::is</a></div><div class="ttdeci">bool is() const</div><div class="ttdef"><b>Definition:</b> any.h:22</div></div>
<div class="ttc" id="astruct_any_xhtml_aebc7abba71ec4596aa7715daec6c1204"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#aebc7abba71ec4596aa7715daec6c1204">Any::~Any</a></div><div class="ttdeci">~Any()</div><div class="ttdef"><b>Definition:</b> any.h:80</div></div>
<div class="ttc" id="astruct_any_xhtml_aacda5b5ad9807300d99ea1fd3ca05114"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#aacda5b5ad9807300d99ea1fd3ca05114">Any::Any</a></div><div class="ttdeci">Any(Any &amp;&amp;that)</div><div class="ttdef"><b>Definition:</b> any.h:50</div></div>
<div class="ttc" id="astruct_any_xhtml_a4825d0e1754d93a7d3492ba88de40856"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#a4825d0e1754d93a7d3492ba88de40856">Any::Any</a></div><div class="ttdeci">Any(const Any &amp;&amp;that)</div><div class="ttdef"><b>Definition:</b> any.h:54</div></div>
<div class="ttc" id="astruct_any_xhtml_ac9b01808e80c3b5bc5da1b18cb8e8063"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#ac9b01808e80c3b5bc5da1b18cb8e8063">Any::not_null</a></div><div class="ttdeci">bool not_null() const</div><div class="ttdef"><b>Definition:</b> any.h:16</div></div>
<div class="ttc" id="anamespacestd_xhtml"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> nlohmann_json.hpp:11824</div></div>
<div class="ttc" id="astruct_any_xhtml_a32c7c4e0a4b02302715ecfa75bd3c570"><div class="ttname"><a href="../../db/da7/struct_any.xhtml#a32c7c4e0a4b02302715ecfa75bd3c570">Any::operator=</a></div><div class="ttdeci">Any &amp; operator=(const Any &amp;a)</div><div class="ttdef"><b>Definition:</b> any.h:56</div></div>
<div class="ttc" id="astruct_any_xhtml"><div class="ttname"><a href="../../db/da7/struct_any.xhtml">Any</a></div><div class="ttdef"><b>Definition:</b> any.h:14</div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Nov 21 2019 16:45:45 for JVM 8 SB 2019/2 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.16
</small></address>
</body>
</html>
