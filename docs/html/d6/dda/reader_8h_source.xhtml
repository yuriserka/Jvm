<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.16"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>JVM 8 SB 2019/2: include/reader.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">JVM 8 SB 2019/2
   </div>
   <div id="projectbrief">projeto que visa fazer uma implementação simples da JVM 8</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.16 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">reader.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d6/dda/reader_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef INCLUDE_READER_H_</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define INCLUDE_READER_H_</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d4/db4/classfile_8h.xhtml">classfile.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d0/d36/constant_pool_8h.xhtml">utils/constantPool.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/d45/errors_8h.xhtml">utils/errors.h</a>&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d0/dbb/class_reader.xhtml">   12</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/dbb/class_reader.xhtml">Reader</a> {</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d0/dbb/class_reader.xhtml#a860929fc8bfb2ec9a18cacb7845a1b80">Reader</a>(<a class="code" href="../../da/d41/class_class_file.xhtml">ClassFile</a> *cf, <span class="keyword">const</span> std::string &amp;fpath);</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../d0/dbb/class_reader.xhtml#a78089542fd27a0ac2df6702fffe8725c">   16</a></span>&#160;  <a class="code" href="../../d0/dbb/class_reader.xhtml#a78089542fd27a0ac2df6702fffe8725c">~Reader</a>() {</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keywordflow">if</span> (this-&gt;file.is_open()) {</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      this-&gt;file.close();</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    }</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  }</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/dbb/class_reader.xhtml#a364413545cca4cf40a540ad285b10902">readClassFile</a>();</div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="../../d0/dbb/class_reader.xhtml#ab0549436650dc9767c2ef20dcc97474f">   23</a></span>&#160;  std::string <a class="code" href="../../d0/dbb/class_reader.xhtml#ab0549436650dc9767c2ef20dcc97474f">fname</a>;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; <span class="keyword">private</span>:</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordtype">void</span> readMagic();</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordtype">void</span> readMinorVersion();</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">void</span> readMajorVersion();</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordtype">void</span> readConstantPool();</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">void</span> readConstantPoolCount();</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordtype">void</span> readConstantPoolInfo();</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keywordtype">void</span> readAccessFlags();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordtype">void</span> readThisClass();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordtype">void</span> readSuperClass();</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keywordtype">void</span> readInterfaces();</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordtype">void</span> readInterfaceCount();</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">void</span> readInterfaceInfo();</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keywordtype">void</span> readFields();</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">void</span> readFieldsCount();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordtype">void</span> readFieldsInfo();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keywordtype">void</span> readMethods();</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordtype">void</span> readMethodsCount();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordtype">void</span> readMethodsInfo();</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keywordtype">void</span> readAttributes();</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keywordtype">void</span> readAttributesCount();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">void</span> readAttributesInfo(</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      std::vector&lt;Utils::Attributes::attribute_info&gt; *attributes);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">void</span> endianSwap(T *objp) {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">auto</span> memp = reinterpret_cast&lt;unsigned char *&gt;(objp);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    std::reverse(memp, memp + <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">void</span> readBytes(T *objp, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;flip = <span class="keyword">true</span>) {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    this-&gt;file.read(reinterpret_cast&lt;char *&gt;(objp), <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">if</span> (flip) {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      this-&gt;endianSwap(objp);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordtype">void</span> kpoolValidEntry(<span class="keyword">const</span> <a class="code" href="../../d0/d94/namespace_utils_1_1_types.xhtml#aba1cd9c4d65348f39647c945c32a9954">Utils::Types::u2</a> &amp;index,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                       <span class="keyword">const</span> std::string &amp;indexname);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  T *kpoolValidInfo(<span class="keyword">const</span> <a class="code" href="../../d0/d94/namespace_utils_1_1_types.xhtml#aba1cd9c4d65348f39647c945c32a9954">Utils::Types::u2</a> &amp;index, <span class="keyword">const</span> std::string &amp;indexname,</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                    <span class="keyword">const</span> <a class="code" href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a> &amp;tag) {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    this-&gt;kpoolValidEntry(index, indexname);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">auto</span> kinfo = this-&gt;classfile-&gt;<a class="code" href="../../da/d41/class_class_file.xhtml#aa09d94e37b3f7552eed2eeb124e4c67f">constant_pool</a>[index - 1].getClass&lt;T&gt;();</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">if</span> (!kinfo) {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      <span class="keywordflow">throw</span> <a class="code" href="../../d6/d12/class_utils_1_1_errors_1_1_exception.xhtml">Utils::Errors::Exception</a>(</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;          <a class="code" href="../../d4/d01/namespace_utils_1_1_errors.xhtml#a0b174cdbfa547389df18071526c63e7fa6fb670d9a2827c0cbed42ce7edda0dcb">Utils::Errors::kATTRIBUTE</a>,</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;          <span class="stringliteral">&quot;The constant_pool entry at &quot;</span> + indexname +</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;              <span class="stringliteral">&quot; index must be a &quot;</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;              <span class="stringliteral">&quot;CONSTANT_&quot;</span> +</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;              <a class="code" href="../../d4/d0a/namespace_utils_1_1_constant_pool.xhtml#a7d309a535710d9fd872f1d62fbfb32ff">Utils::ConstantPool::getConstantTypename</a>(tag) +</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;              <span class="stringliteral">&quot;_info structure&quot;</span>);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> kinfo;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  std::fstream file;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <a class="code" href="../../da/d41/class_class_file.xhtml">ClassFile</a> *classfile;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  std::string path;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;};</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">#endif  // INCLUDE_READER_H_</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclass_reader_xhtml"><div class="ttname"><a href="../../d0/dbb/class_reader.xhtml">Reader</a></div><div class="ttdef"><b>Definition:</b> reader.h:12</div></div>
<div class="ttc" id="anamespace_utils_1_1_constant_pool_xhtml_a7d309a535710d9fd872f1d62fbfb32ff"><div class="ttname"><a href="../../d4/d0a/namespace_utils_1_1_constant_pool.xhtml#a7d309a535710d9fd872f1d62fbfb32ff">Utils::ConstantPool::getConstantTypename</a></div><div class="ttdeci">std::string getConstantTypename(const Types::u1 &amp;ct)</div></div>
<div class="ttc" id="aclass_reader_xhtml_a78089542fd27a0ac2df6702fffe8725c"><div class="ttname"><a href="../../d0/dbb/class_reader.xhtml#a78089542fd27a0ac2df6702fffe8725c">Reader::~Reader</a></div><div class="ttdeci">~Reader()</div><div class="ttdef"><b>Definition:</b> reader.h:16</div></div>
<div class="ttc" id="anamespace_utils_1_1_types_xhtml_aba1cd9c4d65348f39647c945c32a9954"><div class="ttname"><a href="../../d0/d94/namespace_utils_1_1_types.xhtml#aba1cd9c4d65348f39647c945c32a9954">Utils::Types::u2</a></div><div class="ttdeci">std::uint16_t u2</div><div class="ttdef"><b>Definition:</b> types.h:9</div></div>
<div class="ttc" id="aerrors_8h_xhtml"><div class="ttname"><a href="../../de/d45/errors_8h.xhtml">errors.h</a></div></div>
<div class="ttc" id="aclassfile_8h_xhtml"><div class="ttname"><a href="../../d4/db4/classfile_8h.xhtml">classfile.h</a></div></div>
<div class="ttc" id="aclass_class_file_xhtml_aa09d94e37b3f7552eed2eeb124e4c67f"><div class="ttname"><a href="../../da/d41/class_class_file.xhtml#aa09d94e37b3f7552eed2eeb124e4c67f">ClassFile::constant_pool</a></div><div class="ttdeci">std::vector&lt; Utils::ConstantPool::cp_info &gt; constant_pool</div><div class="ttdef"><b>Definition:</b> classfile.h:28</div></div>
<div class="ttc" id="aclass_reader_xhtml_a860929fc8bfb2ec9a18cacb7845a1b80"><div class="ttname"><a href="../../d0/dbb/class_reader.xhtml#a860929fc8bfb2ec9a18cacb7845a1b80">Reader::Reader</a></div><div class="ttdeci">Reader(ClassFile *cf, const std::string &amp;fpath)</div></div>
<div class="ttc" id="aclass_reader_xhtml_ab0549436650dc9767c2ef20dcc97474f"><div class="ttname"><a href="../../d0/dbb/class_reader.xhtml#ab0549436650dc9767c2ef20dcc97474f">Reader::fname</a></div><div class="ttdeci">std::string fname</div><div class="ttdef"><b>Definition:</b> reader.h:23</div></div>
<div class="ttc" id="aclass_reader_xhtml_a364413545cca4cf40a540ad285b10902"><div class="ttname"><a href="../../d0/dbb/class_reader.xhtml#a364413545cca4cf40a540ad285b10902">Reader::readClassFile</a></div><div class="ttdeci">void readClassFile()</div></div>
<div class="ttc" id="aclass_class_file_xhtml"><div class="ttname"><a href="../../da/d41/class_class_file.xhtml">ClassFile</a></div><div class="ttdef"><b>Definition:</b> classfile.h:12</div></div>
<div class="ttc" id="anamespace_utils_1_1_errors_xhtml_a0b174cdbfa547389df18071526c63e7fa6fb670d9a2827c0cbed42ce7edda0dcb"><div class="ttname"><a href="../../d4/d01/namespace_utils_1_1_errors.xhtml#a0b174cdbfa547389df18071526c63e7fa6fb670d9a2827c0cbed42ce7edda0dcb">Utils::Errors::kATTRIBUTE</a></div><div class="ttdef"><b>Definition:</b> errors.h:53</div></div>
<div class="ttc" id="anamespace_utils_1_1_types_xhtml_a987afa1d65d5f43c5e379d4cdafacd44"><div class="ttname"><a href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a></div><div class="ttdeci">std::uint8_t u1</div><div class="ttdef"><b>Definition:</b> types.h:8</div></div>
<div class="ttc" id="aconstant_pool_8h_xhtml"><div class="ttname"><a href="../../d0/d36/constant_pool_8h.xhtml">constantPool.h</a></div></div>
<div class="ttc" id="aclass_utils_1_1_errors_1_1_exception_xhtml"><div class="ttname"><a href="../../d6/d12/class_utils_1_1_errors_1_1_exception.xhtml">Utils::Errors::Exception</a></div><div class="ttdef"><b>Definition:</b> errors.h:9</div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 2 2019 14:03:37 for JVM 8 SB 2019/2 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.16
</small></address>
</body>
</html>
