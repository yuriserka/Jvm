<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.16"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>JVM 8 SB 2019/2: include/instructions/instruction_set/integer.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">JVM 8 SB 2019/2
   </div>
   <div id="projectbrief">projeto que visa fazer uma implementação simples da JVM 8</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.16 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_2843b2c750ff6b39dcfe98bf2554dba0.xhtml">instructions</a></li><li class="navelem"><a class="el" href="../../dir_7ef69e660d75507825e3f78a695283fd.xhtml">instruction_set</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">integer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d6/d3d/integer_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_INTEGER_H_</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_INTEGER_H_</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/d5a/base_8h.xhtml">instructions/instruction_set/base.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/de6/opcodes_8h.xhtml">instructions/opcodes.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/d66/string_8h.xhtml">utils/string.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../da/d11/namespace_instructions.xhtml">Instructions</a> {</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d3/d92/namespace_instructions_1_1_integer.xhtml">   12</a></span>&#160;<span class="keyword">namespace </span>Integer {</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">   13</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml#a99b3ec055aaf2cbfbf8d66b23d4ef417">   15</a></span>&#160;  <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml#a99b3ec055aaf2cbfbf8d66b23d4ef417">BaseInteger</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a> &amp;tag) : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(tag) {}</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml#a1244ce7d46b91416da40dd25734873c4">   17</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml#a1244ce7d46b91416da40dd25734873c4">toBytecode</a>(</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  }</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml#aac5eada7a7eebaaaf98961a6dd624a75">   25</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml#aac5eada7a7eebaaaf98961a6dd624a75">toBytecode_json</a>(</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;};</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../d9/d4c/class_instructions_1_1_integer_1_1_to_byte.xhtml">   32</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/d4c/class_instructions_1_1_integer_1_1_to_byte.xhtml">ToByte</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../d9/d4c/class_instructions_1_1_integer_1_1_to_byte.xhtml#a5fe6a3e711344484580f8059275c35b1">   34</a></span>&#160;  <a class="code" href="../../d9/d4c/class_instructions_1_1_integer_1_1_to_byte.xhtml#a5fe6a3e711344484580f8059275c35b1">ToByte</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a63ff623f212584eee401a9fb65cec6fa">kI2B</a>) {}</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d9/d4c/class_instructions_1_1_integer_1_1_to_byte.xhtml#a85e437086bb4bb8c18aa2bdedc245008">execute</a>(</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;};</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="../../d2/dab/class_instructions_1_1_integer_1_1_to_char.xhtml">   51</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d2/dab/class_instructions_1_1_integer_1_1_to_char.xhtml">ToChar</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../d2/dab/class_instructions_1_1_integer_1_1_to_char.xhtml#a1c0987f02e283b7b1c5f13def9f7661b">   53</a></span>&#160;  <a class="code" href="../../d2/dab/class_instructions_1_1_integer_1_1_to_char.xhtml#a1c0987f02e283b7b1c5f13def9f7661b">ToChar</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a23276368b0716668a01a2a733df242b0">kI2C</a>) {}</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d2/dab/class_instructions_1_1_integer_1_1_to_char.xhtml#a0ae16d71638f9486f12508e1f9ff2b65">execute</a>(</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;};</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../d5/d88/class_instructions_1_1_integer_1_1_to_double.xhtml">   70</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d5/d88/class_instructions_1_1_integer_1_1_to_double.xhtml">ToDouble</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="../../d5/d88/class_instructions_1_1_integer_1_1_to_double.xhtml#a3313ceba840465a9c853604d05954ee2">   72</a></span>&#160;  <a class="code" href="../../d5/d88/class_instructions_1_1_integer_1_1_to_double.xhtml#a3313ceba840465a9c853604d05954ee2">ToDouble</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a956c123ae243d78e2d0c022f859a211b">kI2D</a>) {}</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d5/d88/class_instructions_1_1_integer_1_1_to_double.xhtml#a3ff3effed56e077f469a27063cc6a48e">execute</a>(</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;};</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../dd/d94/class_instructions_1_1_integer_1_1_to_float.xhtml">   89</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/d94/class_instructions_1_1_integer_1_1_to_float.xhtml">ToFloat</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="../../dd/d94/class_instructions_1_1_integer_1_1_to_float.xhtml#a4f22e397e5e772119db6b66fec126d99">   91</a></span>&#160;  <a class="code" href="../../dd/d94/class_instructions_1_1_integer_1_1_to_float.xhtml#a4f22e397e5e772119db6b66fec126d99">ToFloat</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ace988950f2ec4b4a3ae19c325ce07ee8">kI2F</a>) {}</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dd/d94/class_instructions_1_1_integer_1_1_to_float.xhtml#a95ec451106fd8fe055828e99c9b7d65e">execute</a>(</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;};</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="../../d4/de1/class_instructions_1_1_integer_1_1_to_long.xhtml">  108</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/de1/class_instructions_1_1_integer_1_1_to_long.xhtml">ToLong</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="../../d4/de1/class_instructions_1_1_integer_1_1_to_long.xhtml#ac1933a33351b096de1f86ca322679c6f">  110</a></span>&#160;  <a class="code" href="../../d4/de1/class_instructions_1_1_integer_1_1_to_long.xhtml#ac1933a33351b096de1f86ca322679c6f">ToLong</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a186b24907d2233152ec65090c8624aee">kI2L</a>) {}</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d4/de1/class_instructions_1_1_integer_1_1_to_long.xhtml#adb6c6aa62cca3527ff41fc5d608cc462">execute</a>(</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;};</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="../../d9/d6f/class_instructions_1_1_integer_1_1_to_short.xhtml">  127</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/d6f/class_instructions_1_1_integer_1_1_to_short.xhtml">ToShort</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="../../d9/d6f/class_instructions_1_1_integer_1_1_to_short.xhtml#a0d0119fea20694f1e454acc64e3aa980">  129</a></span>&#160;  <a class="code" href="../../d9/d6f/class_instructions_1_1_integer_1_1_to_short.xhtml#a0d0119fea20694f1e454acc64e3aa980">ToShort</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8ba02537990bf5c4e381ec933f5c04d1">kI2S</a>) {}</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d9/d6f/class_instructions_1_1_integer_1_1_to_short.xhtml#a42169f39595aaf552db8390657a0f32c">execute</a>(</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;};</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="../../db/dc0/class_instructions_1_1_integer_1_1_add.xhtml">  146</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/dc0/class_instructions_1_1_integer_1_1_add.xhtml">Add</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="../../db/dc0/class_instructions_1_1_integer_1_1_add.xhtml#a4b9b12e73ec7cdfd4387bfe72094d563">  148</a></span>&#160;  <a class="code" href="../../db/dc0/class_instructions_1_1_integer_1_1_add.xhtml#a4b9b12e73ec7cdfd4387bfe72094d563">Add</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a9a5ab36c1f1363a1771b0a898071b04d">kIADD</a>) {}</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../db/dc0/class_instructions_1_1_integer_1_1_add.xhtml#a227f9c757428d671075c5b24e0ca7fe7">execute</a>(</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;};</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="../../d8/dc7/class_instructions_1_1_integer_1_1_load_from_array.xhtml">  165</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/dc7/class_instructions_1_1_integer_1_1_load_from_array.xhtml">LoadFromArray</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="../../d8/dc7/class_instructions_1_1_integer_1_1_load_from_array.xhtml#af737d3ac7a6acc7bde9766f69dcbc5dd">  167</a></span>&#160;  <a class="code" href="../../d8/dc7/class_instructions_1_1_integer_1_1_load_from_array.xhtml#af737d3ac7a6acc7bde9766f69dcbc5dd">LoadFromArray</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a6b30d55e30d5059b3992079ecb55e6b0">kIALOAD</a>) {}</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d8/dc7/class_instructions_1_1_integer_1_1_load_from_array.xhtml#adbd484b9f41dbe25069a19e4a2f172dc">execute</a>(</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;};</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="../../da/d68/class_instructions_1_1_integer_1_1_and.xhtml">  184</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d68/class_instructions_1_1_integer_1_1_and.xhtml">And</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="../../da/d68/class_instructions_1_1_integer_1_1_and.xhtml#ad73cddd417124f308e70c0a07314d119">  186</a></span>&#160;  <a class="code" href="../../da/d68/class_instructions_1_1_integer_1_1_and.xhtml#ad73cddd417124f308e70c0a07314d119">And</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ab92d6f17320b44c5b4b8d961c5ceacdd">kIAND</a>) {}</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../da/d68/class_instructions_1_1_integer_1_1_and.xhtml#a6e56f6e7c9ccd53d3285578d419d0db4">execute</a>(</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;};</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="../../d7/d93/class_instructions_1_1_integer_1_1_store_into_array.xhtml">  203</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/d93/class_instructions_1_1_integer_1_1_store_into_array.xhtml">StoreIntoArray</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="../../d7/d93/class_instructions_1_1_integer_1_1_store_into_array.xhtml#abf84efeb95fb13db3348e7fa456364b6">  205</a></span>&#160;  <a class="code" href="../../d7/d93/class_instructions_1_1_integer_1_1_store_into_array.xhtml#abf84efeb95fb13db3348e7fa456364b6">StoreIntoArray</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a55c30927abc50004d9d3026a2621fc5b">kIASTORE</a>) {}</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d7/d93/class_instructions_1_1_integer_1_1_store_into_array.xhtml#af5cbd742beeb99334e3829a54c142dfb">execute</a>(</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;};</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="../../d0/d9f/class_instructions_1_1_integer_1_1_const__m1.xhtml">  222</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/d9f/class_instructions_1_1_integer_1_1_const__m1.xhtml">Const_m1</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="../../d0/d9f/class_instructions_1_1_integer_1_1_const__m1.xhtml#aa485a2d2a2c92632b451e220540f7b20">  224</a></span>&#160;  <a class="code" href="../../d0/d9f/class_instructions_1_1_integer_1_1_const__m1.xhtml#aa485a2d2a2c92632b451e220540f7b20">Const_m1</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af35382060a7d9ec7eb852d2548efcabf">kICONST_M1</a>) {}</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d0/d9f/class_instructions_1_1_integer_1_1_const__m1.xhtml#afbe0a0707703941bf30ee5c1d2c61297">execute</a>(</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;};</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="../../db/dab/class_instructions_1_1_integer_1_1_const__0.xhtml">  241</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/dab/class_instructions_1_1_integer_1_1_const__0.xhtml">Const_0</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="../../db/dab/class_instructions_1_1_integer_1_1_const__0.xhtml#ac13336094c34f640f216bfdbf46d210d">  243</a></span>&#160;  <a class="code" href="../../db/dab/class_instructions_1_1_integer_1_1_const__0.xhtml#ac13336094c34f640f216bfdbf46d210d">Const_0</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a089376193dbce8b055a57c26ebb2904e">kICONST_0</a>) {}</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../db/dab/class_instructions_1_1_integer_1_1_const__0.xhtml#af8fe1b3fa03ef83e2b435581163279ff">execute</a>(</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;};</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160; </div>
<div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="../../df/db9/class_instructions_1_1_integer_1_1_const__1.xhtml">  260</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../df/db9/class_instructions_1_1_integer_1_1_const__1.xhtml">Const_1</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="../../df/db9/class_instructions_1_1_integer_1_1_const__1.xhtml#a96b6d4194beded61d7c5e09444bb7979">  262</a></span>&#160;  <a class="code" href="../../df/db9/class_instructions_1_1_integer_1_1_const__1.xhtml#a96b6d4194beded61d7c5e09444bb7979">Const_1</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae6c9e407aba6299f6b71688594cacf1d">kICONST_1</a>) {}</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../df/db9/class_instructions_1_1_integer_1_1_const__1.xhtml#abb10d2513f49134b020b84c9f7c02307">execute</a>(</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;};</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="../../d4/d99/class_instructions_1_1_integer_1_1_const__2.xhtml">  279</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d99/class_instructions_1_1_integer_1_1_const__2.xhtml">Const_2</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00281"></a><span class="lineno"><a class="line" href="../../d4/d99/class_instructions_1_1_integer_1_1_const__2.xhtml#ac7d5866f01a606096c95435dfbe4f7df">  281</a></span>&#160;  <a class="code" href="../../d4/d99/class_instructions_1_1_integer_1_1_const__2.xhtml#ac7d5866f01a606096c95435dfbe4f7df">Const_2</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a836511a8ef260985043b396e4eafcfbe">kICONST_2</a>) {}</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d4/d99/class_instructions_1_1_integer_1_1_const__2.xhtml#a5419637274cc969d2659eb1e864c0401">execute</a>(</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;};</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="../../d6/d7b/class_instructions_1_1_integer_1_1_const__3.xhtml">  298</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/d7b/class_instructions_1_1_integer_1_1_const__3.xhtml">Const_3</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="../../d6/d7b/class_instructions_1_1_integer_1_1_const__3.xhtml#a432bba6f58c885d18ea06eb6f6540b5b">  300</a></span>&#160;  <a class="code" href="../../d6/d7b/class_instructions_1_1_integer_1_1_const__3.xhtml#a432bba6f58c885d18ea06eb6f6540b5b">Const_3</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8f7f2bcafbf354fb16af808ec6fbfc72">kICONST_3</a>) {}</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d6/d7b/class_instructions_1_1_integer_1_1_const__3.xhtml#a4a3db8752cc7200376d436c8c3ea1aec">execute</a>(</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;};</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160; </div>
<div class="line"><a name="l00317"></a><span class="lineno"><a class="line" href="../../d9/dd6/class_instructions_1_1_integer_1_1_const__4.xhtml">  317</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/dd6/class_instructions_1_1_integer_1_1_const__4.xhtml">Const_4</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00319"></a><span class="lineno"><a class="line" href="../../d9/dd6/class_instructions_1_1_integer_1_1_const__4.xhtml#a597aa3462342d528925efd7e6855c11a">  319</a></span>&#160;  <a class="code" href="../../d9/dd6/class_instructions_1_1_integer_1_1_const__4.xhtml#a597aa3462342d528925efd7e6855c11a">Const_4</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ab9080e4ccbf730104f965ab2a9efbf1a">kICONST_4</a>) {}</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d9/dd6/class_instructions_1_1_integer_1_1_const__4.xhtml#a3a24afd14585f443811f771d4603d157">execute</a>(</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;};</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160; </div>
<div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="../../d0/daf/class_instructions_1_1_integer_1_1_const__5.xhtml">  336</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/daf/class_instructions_1_1_integer_1_1_const__5.xhtml">Const_5</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00338"></a><span class="lineno"><a class="line" href="../../d0/daf/class_instructions_1_1_integer_1_1_const__5.xhtml#a4b85c55648770a9f89c9ec7abb497877">  338</a></span>&#160;  <a class="code" href="../../d0/daf/class_instructions_1_1_integer_1_1_const__5.xhtml#a4b85c55648770a9f89c9ec7abb497877">Const_5</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a9d24380a7ef5e416e73085654fc07328">kICONST_5</a>) {}</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d0/daf/class_instructions_1_1_integer_1_1_const__5.xhtml#a3a781602820f47fef618ba8105c60ac7">execute</a>(</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;};</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; </div>
<div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="../../d5/da4/class_instructions_1_1_integer_1_1_compare_equal.xhtml">  355</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d5/da4/class_instructions_1_1_integer_1_1_compare_equal.xhtml">CompareEqual</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00357"></a><span class="lineno"><a class="line" href="../../d5/da4/class_instructions_1_1_integer_1_1_compare_equal.xhtml#ad34dcc8080622fc9d494e9d751145f38">  357</a></span>&#160;  <a class="code" href="../../d5/da4/class_instructions_1_1_integer_1_1_compare_equal.xhtml#ad34dcc8080622fc9d494e9d751145f38">CompareEqual</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37afa35ecfdf3f4adafdc4dfcd6a9ec2083">kIF_ICMPEQ</a>) {}</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d5/da4/class_instructions_1_1_integer_1_1_compare_equal.xhtml#a84f53048259f0da3f1f52119cda29b0d">execute</a>(</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;};</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160; </div>
<div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="../../de/d32/class_instructions_1_1_integer_1_1_compare_greater_equal.xhtml">  374</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../de/d32/class_instructions_1_1_integer_1_1_compare_greater_equal.xhtml">CompareGreaterEqual</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00376"></a><span class="lineno"><a class="line" href="../../de/d32/class_instructions_1_1_integer_1_1_compare_greater_equal.xhtml#a3a5a6be09656a45d24bb50468cfdb46f">  376</a></span>&#160;  <a class="code" href="../../de/d32/class_instructions_1_1_integer_1_1_compare_greater_equal.xhtml#a3a5a6be09656a45d24bb50468cfdb46f">CompareGreaterEqual</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af81f94f36e58767ee132f415a26ca364">kIF_ICMPGE</a>) {}</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../de/d32/class_instructions_1_1_integer_1_1_compare_greater_equal.xhtml#a8d860f7bef61cb3c25ce9eb429d1eceb">execute</a>(</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;};</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160; </div>
<div class="line"><a name="l00393"></a><span class="lineno"><a class="line" href="../../d8/de3/class_instructions_1_1_integer_1_1_compare_greater_than.xhtml">  393</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/de3/class_instructions_1_1_integer_1_1_compare_greater_than.xhtml">CompareGreaterThan</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00395"></a><span class="lineno"><a class="line" href="../../d8/de3/class_instructions_1_1_integer_1_1_compare_greater_than.xhtml#aaa182818d961893adf15932f40a92f43">  395</a></span>&#160;  <a class="code" href="../../d8/de3/class_instructions_1_1_integer_1_1_compare_greater_than.xhtml#aaa182818d961893adf15932f40a92f43">CompareGreaterThan</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ac73d5eb1eec76255c1f6ad25aa6197f4">kIF_ICMPGT</a>) {}</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d8/de3/class_instructions_1_1_integer_1_1_compare_greater_than.xhtml#a45c167c6e564aeccaf091e8f24109856">execute</a>(</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;};</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160; </div>
<div class="line"><a name="l00412"></a><span class="lineno"><a class="line" href="../../d9/df8/class_instructions_1_1_integer_1_1_compare_less_equal.xhtml">  412</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/df8/class_instructions_1_1_integer_1_1_compare_less_equal.xhtml">CompareLessEqual</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00414"></a><span class="lineno"><a class="line" href="../../d9/df8/class_instructions_1_1_integer_1_1_compare_less_equal.xhtml#ab809bf52726968d6ed70529d29ec4bf4">  414</a></span>&#160;  <a class="code" href="../../d9/df8/class_instructions_1_1_integer_1_1_compare_less_equal.xhtml#ab809bf52726968d6ed70529d29ec4bf4">CompareLessEqual</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a3cc2474a65d94d73c3438709b88b2c4e">kIF_ICMPLE</a>) {}</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d9/df8/class_instructions_1_1_integer_1_1_compare_less_equal.xhtml#a596aa8d8ee97e908c3e4fcaf40d676d4">execute</a>(</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;};</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160; </div>
<div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="../../d9/de2/class_instructions_1_1_integer_1_1_compare_less_than.xhtml">  431</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/de2/class_instructions_1_1_integer_1_1_compare_less_than.xhtml">CompareLessThan</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00433"></a><span class="lineno"><a class="line" href="../../d9/de2/class_instructions_1_1_integer_1_1_compare_less_than.xhtml#a98ab96d780c8dd2db42973bca4d66f5c">  433</a></span>&#160;  <a class="code" href="../../d9/de2/class_instructions_1_1_integer_1_1_compare_less_than.xhtml#a98ab96d780c8dd2db42973bca4d66f5c">CompareLessThan</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37acbc81ed69617f1d2c625b2a5479e8224">kIF_ICMPLT</a>) {}</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d9/de2/class_instructions_1_1_integer_1_1_compare_less_than.xhtml#ab9ce0c406078d03c2890c213b820119c">execute</a>(</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;};</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160; </div>
<div class="line"><a name="l00450"></a><span class="lineno"><a class="line" href="../../db/df9/class_instructions_1_1_integer_1_1_compare_not_equal.xhtml">  450</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/df9/class_instructions_1_1_integer_1_1_compare_not_equal.xhtml">CompareNotEqual</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00452"></a><span class="lineno"><a class="line" href="../../db/df9/class_instructions_1_1_integer_1_1_compare_not_equal.xhtml#ade3ddf37da137528c09b90e3fce59576">  452</a></span>&#160;  <a class="code" href="../../db/df9/class_instructions_1_1_integer_1_1_compare_not_equal.xhtml#ade3ddf37da137528c09b90e3fce59576">CompareNotEqual</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a4415b4b8c25bb55ff86d74e0abc0a8fd">kIF_ICMPNE</a>) {}</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../db/df9/class_instructions_1_1_integer_1_1_compare_not_equal.xhtml#ae1901ea37e42cff5ef4666e2cc19af3e">execute</a>(</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;};</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160; </div>
<div class="line"><a name="l00469"></a><span class="lineno"><a class="line" href="../../d4/d42/class_instructions_1_1_integer_1_1_div.xhtml">  469</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d42/class_instructions_1_1_integer_1_1_div.xhtml">Div</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00471"></a><span class="lineno"><a class="line" href="../../d4/d42/class_instructions_1_1_integer_1_1_div.xhtml#a2ae4a79fac0de7b8e782e689453424fb">  471</a></span>&#160;  <a class="code" href="../../d4/d42/class_instructions_1_1_integer_1_1_div.xhtml#a2ae4a79fac0de7b8e782e689453424fb">Div</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a474170d3acd4bea7f3079d2ba4aefaef">kIDIV</a>) {}</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d4/d42/class_instructions_1_1_integer_1_1_div.xhtml#a5556ab6b4fa55e599386b8dce2ac19e3">execute</a>(</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;};</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160; </div>
<div class="line"><a name="l00488"></a><span class="lineno"><a class="line" href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml">  488</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml">Inc</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00490"></a><span class="lineno"><a class="line" href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml#a79b49e79936dedf302e66893afa8d21e">  490</a></span>&#160;  <a class="code" href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml#a79b49e79936dedf302e66893afa8d21e">Inc</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a16f926a0feb794594aa57e5719e9f6d3">kIINC</a>) {}</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160; </div>
<div class="line"><a name="l00492"></a><span class="lineno"><a class="line" href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml#ab4af3940e33f8bfff84a1761830f3059">  492</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml#ab4af3940e33f8bfff84a1761830f3059">toBytecode</a>(</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;      int16_t k = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;      (*ss) &lt;&lt; index &lt;&lt; <span class="stringliteral">&quot; by &quot;</span> &lt;&lt; k;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;      *delta_code = 4;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;      <span class="keywordtype">signed</span> <span class="keywordtype">char</span> k = *++*code_it;</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;      (*ss) &lt;&lt; <span class="keywordtype">int</span>{index} &lt;&lt; <span class="stringliteral">&quot; by &quot;</span> &lt;&lt; <span class="keywordtype">int</span>{k};</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    }</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    (*ss) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;  }</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160; </div>
<div class="line"><a name="l00512"></a><span class="lineno"><a class="line" href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml#a4c1f81ffe4463eb6b7aafee74f4fe5bb">  512</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml#a4c1f81ffe4463eb6b7aafee74f4fe5bb">toBytecode_json</a>(</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;      int16_t k = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;      *delta_code = 4;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;      <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(index), <a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(k)};</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    }</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    <span class="keywordtype">signed</span> <span class="keywordtype">char</span> k = *++*code_it;</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    *delta_code = 2;</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(<span class="keywordtype">int</span>{index}), <a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(k)};</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;  }</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml#a87f80888eebb4219b5d70e04d014e900">execute</a>(</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;};</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160; </div>
<div class="line"><a name="l00542"></a><span class="lineno"><a class="line" href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml">  542</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml">Load</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00544"></a><span class="lineno"><a class="line" href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml#ade5c73ccd8113e0d0966af21f15c7ef5">  544</a></span>&#160;  <a class="code" href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml#ade5c73ccd8113e0d0966af21f15c7ef5">Load</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a041b12cc39c384dce9fcad4267f02ace">kILOAD</a>) {}</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160; </div>
<div class="line"><a name="l00546"></a><span class="lineno"><a class="line" href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml#a77bfe8e83f5a5fe8107780648c7d5ebb">  546</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml#a77bfe8e83f5a5fe8107780648c7d5ebb">toBytecode</a>(</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;      (*ss) &lt;&lt; index;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;      (*ss) &lt;&lt; <span class="keywordtype">int</span>{index};</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;      *delta_code = 1;</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    }</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    (*ss) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;  }</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160; </div>
<div class="line"><a name="l00564"></a><span class="lineno"><a class="line" href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml#a1c4fb1dccfdf4c888530a6b8335c24d1">  564</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml#a1c4fb1dccfdf4c888530a6b8335c24d1">toBytecode_json</a>(</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;      <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(index)};</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    }</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    *delta_code = 1;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(<span class="keywordtype">int</span>{index})};</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;  }</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml#acded0cf8f431140a5aab9bf4b666a675">execute</a>(</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;};</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160; </div>
<div class="line"><a name="l00592"></a><span class="lineno"><a class="line" href="../../de/d33/class_instructions_1_1_integer_1_1_load__0.xhtml">  592</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../de/d33/class_instructions_1_1_integer_1_1_load__0.xhtml">Load_0</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00594"></a><span class="lineno"><a class="line" href="../../de/d33/class_instructions_1_1_integer_1_1_load__0.xhtml#a0bf01acc55b56adc77d3c7443a5bde98">  594</a></span>&#160;  <a class="code" href="../../de/d33/class_instructions_1_1_integer_1_1_load__0.xhtml#a0bf01acc55b56adc77d3c7443a5bde98">Load_0</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a3798015d2cc7c451fab413d7aacc3caa">kILOAD_0</a>) {}</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../de/d33/class_instructions_1_1_integer_1_1_load__0.xhtml#a81d3e168ad6bc1644cf86547def6f4b6">execute</a>(</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;};</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160; </div>
<div class="line"><a name="l00611"></a><span class="lineno"><a class="line" href="../../da/d2b/class_instructions_1_1_integer_1_1_load__1.xhtml">  611</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d2b/class_instructions_1_1_integer_1_1_load__1.xhtml">Load_1</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00613"></a><span class="lineno"><a class="line" href="../../da/d2b/class_instructions_1_1_integer_1_1_load__1.xhtml#a1546c1b4512286952b4d23c90037abb0">  613</a></span>&#160;  <a class="code" href="../../da/d2b/class_instructions_1_1_integer_1_1_load__1.xhtml#a1546c1b4512286952b4d23c90037abb0">Load_1</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37abb61a6f1dcd08d46410d5f0fd5692796">kILOAD_1</a>) {}</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../da/d2b/class_instructions_1_1_integer_1_1_load__1.xhtml#a1e96949892c606f80242d7d75cd5ded8">execute</a>(</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;};</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160; </div>
<div class="line"><a name="l00630"></a><span class="lineno"><a class="line" href="../../d4/d83/class_instructions_1_1_integer_1_1_load__2.xhtml">  630</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d83/class_instructions_1_1_integer_1_1_load__2.xhtml">Load_2</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00632"></a><span class="lineno"><a class="line" href="../../d4/d83/class_instructions_1_1_integer_1_1_load__2.xhtml#a42aabe041f2ccd37ab2a9d6758d75cd1">  632</a></span>&#160;  <a class="code" href="../../d4/d83/class_instructions_1_1_integer_1_1_load__2.xhtml#a42aabe041f2ccd37ab2a9d6758d75cd1">Load_2</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37adfd66e1e45ca2061b29137f4f2c8db85">kILOAD_2</a>) {}</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d4/d83/class_instructions_1_1_integer_1_1_load__2.xhtml#af604219b450d1902c71f8316534a64ef">execute</a>(</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;};</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160; </div>
<div class="line"><a name="l00649"></a><span class="lineno"><a class="line" href="../../db/d68/class_instructions_1_1_integer_1_1_load__3.xhtml">  649</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/d68/class_instructions_1_1_integer_1_1_load__3.xhtml">Load_3</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00651"></a><span class="lineno"><a class="line" href="../../db/d68/class_instructions_1_1_integer_1_1_load__3.xhtml#add4a46a8cfe8d2c37d5bdfc260bd425f">  651</a></span>&#160;  <a class="code" href="../../db/d68/class_instructions_1_1_integer_1_1_load__3.xhtml#add4a46a8cfe8d2c37d5bdfc260bd425f">Load_3</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae538004d5ad5baa0003972617d95ab0b">kILOAD_3</a>) {}</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../db/d68/class_instructions_1_1_integer_1_1_load__3.xhtml#ac10ad75d51cb13bacd7aa2c76ed2918b">execute</a>(</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;};</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160; </div>
<div class="line"><a name="l00668"></a><span class="lineno"><a class="line" href="../../d8/de0/class_instructions_1_1_integer_1_1_mul.xhtml">  668</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/de0/class_instructions_1_1_integer_1_1_mul.xhtml">Mul</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00670"></a><span class="lineno"><a class="line" href="../../d8/de0/class_instructions_1_1_integer_1_1_mul.xhtml#a338da44194bbb7cb72b56479289b21a5">  670</a></span>&#160;  <a class="code" href="../../d8/de0/class_instructions_1_1_integer_1_1_mul.xhtml#a338da44194bbb7cb72b56479289b21a5">Mul</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a406b6119a6ca8500d036a77afc9e7d90">kIMUL</a>) {}</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d8/de0/class_instructions_1_1_integer_1_1_mul.xhtml#a0bce831f5519743b7b8d1c6fb8e15538">execute</a>(</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;};</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160; </div>
<div class="line"><a name="l00687"></a><span class="lineno"><a class="line" href="../../df/d66/class_instructions_1_1_integer_1_1_neg.xhtml">  687</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../df/d66/class_instructions_1_1_integer_1_1_neg.xhtml">Neg</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00689"></a><span class="lineno"><a class="line" href="../../df/d66/class_instructions_1_1_integer_1_1_neg.xhtml#ab9a46ab7dd3c85de564a1f82fe5b6eb8">  689</a></span>&#160;  <a class="code" href="../../df/d66/class_instructions_1_1_integer_1_1_neg.xhtml#ab9a46ab7dd3c85de564a1f82fe5b6eb8">Neg</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a4f91c7732c489153cb6ee469f6a16ceb">kINEG</a>) {}</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../df/d66/class_instructions_1_1_integer_1_1_neg.xhtml#a00b050b590d1cf1009ddc2a1a4da826d">execute</a>(</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;};</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160; </div>
<div class="line"><a name="l00706"></a><span class="lineno"><a class="line" href="../../d1/d51/class_instructions_1_1_integer_1_1_or.xhtml">  706</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d51/class_instructions_1_1_integer_1_1_or.xhtml">Or</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00708"></a><span class="lineno"><a class="line" href="../../d1/d51/class_instructions_1_1_integer_1_1_or.xhtml#aaee2b03bd21608fd4f1e0e3eb7258db2">  708</a></span>&#160;  <a class="code" href="../../d1/d51/class_instructions_1_1_integer_1_1_or.xhtml#aaee2b03bd21608fd4f1e0e3eb7258db2">Or</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af4825fe989633f6914eb6b1998aaeb6a">kIOR</a>) {}</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d1/d51/class_instructions_1_1_integer_1_1_or.xhtml#a0df326c1f83065c0c0a1372dd3b04f75">execute</a>(</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;};</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160; </div>
<div class="line"><a name="l00725"></a><span class="lineno"><a class="line" href="../../d9/dd2/class_instructions_1_1_integer_1_1_rem.xhtml">  725</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/dd2/class_instructions_1_1_integer_1_1_rem.xhtml">Rem</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00727"></a><span class="lineno"><a class="line" href="../../d9/dd2/class_instructions_1_1_integer_1_1_rem.xhtml#a8ed715bdd2c3778c4d1240266f57acf7">  727</a></span>&#160;  <a class="code" href="../../d9/dd2/class_instructions_1_1_integer_1_1_rem.xhtml#a8ed715bdd2c3778c4d1240266f57acf7">Rem</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae859cbc6b71a4ae76654687f9be720e5">kIREM</a>) {}</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d9/dd2/class_instructions_1_1_integer_1_1_rem.xhtml#a8200e04563e345767edb791040d5b67f">execute</a>(</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;};</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160; </div>
<div class="line"><a name="l00744"></a><span class="lineno"><a class="line" href="../../d4/dfa/class_instructions_1_1_integer_1_1_return.xhtml">  744</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/dfa/class_instructions_1_1_integer_1_1_return.xhtml">Return</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00746"></a><span class="lineno"><a class="line" href="../../d4/dfa/class_instructions_1_1_integer_1_1_return.xhtml#a9d81cf73aaf7586e3aca5c7d7358c7c8">  746</a></span>&#160;  <a class="code" href="../../d4/dfa/class_instructions_1_1_integer_1_1_return.xhtml#a9d81cf73aaf7586e3aca5c7d7358c7c8">Return</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a734b22a5943659901f563f169d544c88">kIRETURN</a>) {}</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d4/dfa/class_instructions_1_1_integer_1_1_return.xhtml#a5d1d16424bb9a8f3d8323c1e6dd604bb">execute</a>(</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;};</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160; </div>
<div class="line"><a name="l00763"></a><span class="lineno"><a class="line" href="../../d3/d79/class_instructions_1_1_integer_1_1_shift_left.xhtml">  763</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d3/d79/class_instructions_1_1_integer_1_1_shift_left.xhtml">ShiftLeft</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00765"></a><span class="lineno"><a class="line" href="../../d3/d79/class_instructions_1_1_integer_1_1_shift_left.xhtml#a46c856367ae9a8f5813b290ec14062f5">  765</a></span>&#160;  <a class="code" href="../../d3/d79/class_instructions_1_1_integer_1_1_shift_left.xhtml#a46c856367ae9a8f5813b290ec14062f5">ShiftLeft</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af11fa44d3c89edc2fe15dac6c65f710e">kISHL</a>) {}</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d3/d79/class_instructions_1_1_integer_1_1_shift_left.xhtml#a206f8f9febc36fdb007b80dc12720530">execute</a>(</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;};</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160; </div>
<div class="line"><a name="l00782"></a><span class="lineno"><a class="line" href="../../d5/dd9/class_instructions_1_1_integer_1_1_arithmetic_shift_right.xhtml">  782</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d5/dd9/class_instructions_1_1_integer_1_1_arithmetic_shift_right.xhtml">ArithmeticShiftRight</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00784"></a><span class="lineno"><a class="line" href="../../d5/dd9/class_instructions_1_1_integer_1_1_arithmetic_shift_right.xhtml#a87775c4c1557bafa74533cedc556efc8">  784</a></span>&#160;  <a class="code" href="../../d5/dd9/class_instructions_1_1_integer_1_1_arithmetic_shift_right.xhtml#a87775c4c1557bafa74533cedc556efc8">ArithmeticShiftRight</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a35869735149e4612bd7ae851d39ffecd">kISHR</a>) {}</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d5/dd9/class_instructions_1_1_integer_1_1_arithmetic_shift_right.xhtml#aa0fb0cd3e2cf2d042b6b2137192f6bfb">execute</a>(</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;};</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160; </div>
<div class="line"><a name="l00801"></a><span class="lineno"><a class="line" href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml">  801</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml">Store</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00803"></a><span class="lineno"><a class="line" href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml#aec4682c077ed5e650369d97ea980c4c0">  803</a></span>&#160;  <a class="code" href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml#aec4682c077ed5e650369d97ea980c4c0">Store</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ada3232c1aa35f539c553bba41bd9243e">kISTORE</a>) {}</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160; </div>
<div class="line"><a name="l00805"></a><span class="lineno"><a class="line" href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml#a789cf7c6ac9d44d46d69708094e8c3ed">  805</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml#a789cf7c6ac9d44d46d69708094e8c3ed">toBytecode</a>(</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;      (*ss) &lt;&lt; index;</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;      (*ss) &lt;&lt; <span class="keywordtype">int</span>{index};</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;      *delta_code = 1;</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;    }</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    (*ss) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;  }</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160; </div>
<div class="line"><a name="l00823"></a><span class="lineno"><a class="line" href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml#ae6c1628ae73da11cfa125391f28661e7">  823</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml#ae6c1628ae73da11cfa125391f28661e7">toBytecode_json</a>(</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;      <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(index)};</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    }</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    *delta_code = 1;</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(<span class="keywordtype">int</span>{index})};</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;  }</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml#aad5b4d3e96204ae8a3f72f8c33cb9c3c">execute</a>(</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;};</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160; </div>
<div class="line"><a name="l00851"></a><span class="lineno"><a class="line" href="../../da/d29/class_instructions_1_1_integer_1_1_store__0.xhtml">  851</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d29/class_instructions_1_1_integer_1_1_store__0.xhtml">Store_0</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00853"></a><span class="lineno"><a class="line" href="../../da/d29/class_instructions_1_1_integer_1_1_store__0.xhtml#adeb0a128abc05a03b90a990d3662d345">  853</a></span>&#160;  <a class="code" href="../../da/d29/class_instructions_1_1_integer_1_1_store__0.xhtml#adeb0a128abc05a03b90a990d3662d345">Store_0</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae8a7b9dc0527d64f6a02513babfc21ca">kISTORE_0</a>) {}</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../da/d29/class_instructions_1_1_integer_1_1_store__0.xhtml#ad6caff8fe3f6b2b71ff1186c62fa1074">execute</a>(</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;};</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160; </div>
<div class="line"><a name="l00870"></a><span class="lineno"><a class="line" href="../../d4/dc8/class_instructions_1_1_integer_1_1_store__1.xhtml">  870</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/dc8/class_instructions_1_1_integer_1_1_store__1.xhtml">Store_1</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00872"></a><span class="lineno"><a class="line" href="../../d4/dc8/class_instructions_1_1_integer_1_1_store__1.xhtml#a56519c078cff170ca085e9cec2353f06">  872</a></span>&#160;  <a class="code" href="../../d4/dc8/class_instructions_1_1_integer_1_1_store__1.xhtml#a56519c078cff170ca085e9cec2353f06">Store_1</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a12573b6b8cf0c44da8aca0aa99d080bf">kISTORE_1</a>) {}</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d4/dc8/class_instructions_1_1_integer_1_1_store__1.xhtml#a53e34fbb44c538b0b7cf72d2d2050b50">execute</a>(</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;};</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160; </div>
<div class="line"><a name="l00889"></a><span class="lineno"><a class="line" href="../../d4/d4e/class_instructions_1_1_integer_1_1_store__2.xhtml">  889</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d4e/class_instructions_1_1_integer_1_1_store__2.xhtml">Store_2</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00891"></a><span class="lineno"><a class="line" href="../../d4/d4e/class_instructions_1_1_integer_1_1_store__2.xhtml#aad7fd62ce1e7032a955aec49372de04b">  891</a></span>&#160;  <a class="code" href="../../d4/d4e/class_instructions_1_1_integer_1_1_store__2.xhtml#aad7fd62ce1e7032a955aec49372de04b">Store_2</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37abfb24add23d39571d3b74ceed874163f">kISTORE_2</a>) {}</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d4/d4e/class_instructions_1_1_integer_1_1_store__2.xhtml#ac01264e69f10fb1b87c66e1c087647b9">execute</a>(</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;};</div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160; </div>
<div class="line"><a name="l00908"></a><span class="lineno"><a class="line" href="../../d7/dcc/class_instructions_1_1_integer_1_1_store__3.xhtml">  908</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/dcc/class_instructions_1_1_integer_1_1_store__3.xhtml">Store_3</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00910"></a><span class="lineno"><a class="line" href="../../d7/dcc/class_instructions_1_1_integer_1_1_store__3.xhtml#a37fbe144067eb32ade5eb28a278f7a85">  910</a></span>&#160;  <a class="code" href="../../d7/dcc/class_instructions_1_1_integer_1_1_store__3.xhtml#a37fbe144067eb32ade5eb28a278f7a85">Store_3</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ad2c3315a42a6688b819f2d9d192ae7ab">kISTORE_3</a>) {}</div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d7/dcc/class_instructions_1_1_integer_1_1_store__3.xhtml#a43f4cff956cccdea5b5c9d3ad251a2ba">execute</a>(</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;};</div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160; </div>
<div class="line"><a name="l00927"></a><span class="lineno"><a class="line" href="../../d2/dcb/class_instructions_1_1_integer_1_1_sub.xhtml">  927</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d2/dcb/class_instructions_1_1_integer_1_1_sub.xhtml">Sub</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00929"></a><span class="lineno"><a class="line" href="../../d2/dcb/class_instructions_1_1_integer_1_1_sub.xhtml#a8a02d79cb6ff67bcddf670544deff1c6">  929</a></span>&#160;  <a class="code" href="../../d2/dcb/class_instructions_1_1_integer_1_1_sub.xhtml#a8a02d79cb6ff67bcddf670544deff1c6">Sub</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aa188b145807add9ef67a852fca937a47">kISUB</a>) {}</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d2/dcb/class_instructions_1_1_integer_1_1_sub.xhtml#a900d46953161ff739177a6d765eece3b">execute</a>(</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;};</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160; </div>
<div class="line"><a name="l00946"></a><span class="lineno"><a class="line" href="../../d2/d22/class_instructions_1_1_integer_1_1_logical_shift_right.xhtml">  946</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d2/d22/class_instructions_1_1_integer_1_1_logical_shift_right.xhtml">LogicalShiftRight</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00948"></a><span class="lineno"><a class="line" href="../../d2/d22/class_instructions_1_1_integer_1_1_logical_shift_right.xhtml#a313540ab1d28d61331085a6f2ee4e874">  948</a></span>&#160;  <a class="code" href="../../d2/d22/class_instructions_1_1_integer_1_1_logical_shift_right.xhtml#a313540ab1d28d61331085a6f2ee4e874">LogicalShiftRight</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a0f2cc75f2a73241c3611ff27668379d1">kIUSHR</a>) {}</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d2/d22/class_instructions_1_1_integer_1_1_logical_shift_right.xhtml#afa3eedbf78abc3755a9551bf6b310db4">execute</a>(</div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;};</div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160; </div>
<div class="line"><a name="l00965"></a><span class="lineno"><a class="line" href="../../da/db5/class_instructions_1_1_integer_1_1_xor.xhtml">  965</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/db5/class_instructions_1_1_integer_1_1_xor.xhtml">Xor</a> : <span class="keyword">public</span> <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a> {</div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00967"></a><span class="lineno"><a class="line" href="../../da/db5/class_instructions_1_1_integer_1_1_xor.xhtml#a73baffb81b7abf01924260235cc8005d">  967</a></span>&#160;  <a class="code" href="../../da/db5/class_instructions_1_1_integer_1_1_xor.xhtml#a73baffb81b7abf01924260235cc8005d">Xor</a>() : <a class="code" href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">BaseInteger</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a94bacee5be40b9fc4e87cf237197a31e">kIXOR</a>) {}</div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../da/db5/class_instructions_1_1_integer_1_1_xor.xhtml#aa7bf13d9f3869e5c9c4c312821e64bd0">execute</a>(</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;};</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;}  <span class="comment">// namespace Integer</span></div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;}  <span class="comment">// namespace Instructions</span></div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160; </div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;<span class="preprocessor">#endif  // INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_INTEGER_H_</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ae6c9e407aba6299f6b71688594cacf1d"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae6c9e407aba6299f6b71688594cacf1d">Instructions::Opcodes::kICONST_1</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:110</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_sub_xhtml"><div class="ttname"><a href="../../d2/dcb/class_instructions_1_1_integer_1_1_sub.xhtml">Instructions::Integer::Sub</a></div><div class="ttdef"><b>Definition:</b> integer.h:927</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__1_xhtml_a96b6d4194beded61d7c5e09444bb7979"><div class="ttname"><a href="../../df/db9/class_instructions_1_1_integer_1_1_const__1.xhtml#a96b6d4194beded61d7c5e09444bb7979">Instructions::Integer::Const_1::Const_1</a></div><div class="ttdeci">Const_1()</div><div class="ttdef"><b>Definition:</b> integer.h:262</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load_xhtml_a77bfe8e83f5a5fe8107780648c7d5ebb"><div class="ttname"><a href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml#a77bfe8e83f5a5fe8107780648c7d5ebb">Instructions::Integer::Load::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> integer.h:546</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_div_xhtml"><div class="ttname"><a href="../../d4/d42/class_instructions_1_1_integer_1_1_div.xhtml">Instructions::Integer::Div</a></div><div class="ttdef"><b>Definition:</b> integer.h:469</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_neg_xhtml_ab9a46ab7dd3c85de564a1f82fe5b6eb8"><div class="ttname"><a href="../../df/d66/class_instructions_1_1_integer_1_1_neg.xhtml#ab9a46ab7dd3c85de564a1f82fe5b6eb8">Instructions::Integer::Neg::Neg</a></div><div class="ttdeci">Neg()</div><div class="ttdef"><b>Definition:</b> integer.h:689</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_mul_xhtml"><div class="ttname"><a href="../../d8/de0/class_instructions_1_1_integer_1_1_mul.xhtml">Instructions::Integer::Mul</a></div><div class="ttdef"><b>Definition:</b> integer.h:668</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store__2_xhtml_ac01264e69f10fb1b87c66e1c087647b9"><div class="ttname"><a href="../../d4/d4e/class_instructions_1_1_integer_1_1_store__2.xhtml#ac01264e69f10fb1b87c66e1c087647b9">Instructions::Integer::Store_2::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Store int into local variable.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load_from_array_xhtml_af737d3ac7a6acc7bde9766f69dcbc5dd"><div class="ttname"><a href="../../d8/dc7/class_instructions_1_1_integer_1_1_load_from_array.xhtml#af737d3ac7a6acc7bde9766f69dcbc5dd">Instructions::Integer::LoadFromArray::LoadFromArray</a></div><div class="ttdeci">LoadFromArray()</div><div class="ttdef"><b>Definition:</b> integer.h:167</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_not_equal_xhtml_ae1901ea37e42cff5ef4666e2cc19af3e"><div class="ttname"><a href="../../db/df9/class_instructions_1_1_integer_1_1_compare_not_equal.xhtml#ae1901ea37e42cff5ef4666e2cc19af3e">Instructions::Integer::CompareNotEqual::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Compare int (val1 != val2)</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ada3232c1aa35f539c553bba41bd9243e"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ada3232c1aa35f539c553bba41bd9243e">Instructions::Opcodes::kISTORE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:153</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__3_xhtml_a432bba6f58c885d18ea06eb6f6540b5b"><div class="ttname"><a href="../../d6/d7b/class_instructions_1_1_integer_1_1_const__3.xhtml#a432bba6f58c885d18ea06eb6f6540b5b">Instructions::Integer::Const_3::Const_3</a></div><div class="ttdeci">Const_3()</div><div class="ttdef"><b>Definition:</b> integer.h:300</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a94bacee5be40b9fc4e87cf237197a31e"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a94bacee5be40b9fc4e87cf237197a31e">Instructions::Opcodes::kIXOR</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:160</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_greater_equal_xhtml_a3a5a6be09656a45d24bb50468cfdb46f"><div class="ttname"><a href="../../de/d32/class_instructions_1_1_integer_1_1_compare_greater_equal.xhtml#a3a5a6be09656a45d24bb50468cfdb46f">Instructions::Integer::CompareGreaterEqual::CompareGreaterEqual</a></div><div class="ttdeci">CompareGreaterEqual()</div><div class="ttdef"><b>Definition:</b> integer.h:376</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store__2_xhtml_aad7fd62ce1e7032a955aec49372de04b"><div class="ttname"><a href="../../d4/d4e/class_instructions_1_1_integer_1_1_store__2.xhtml#aad7fd62ce1e7032a955aec49372de04b">Instructions::Integer::Store_2::Store_2</a></div><div class="ttdeci">Store_2()</div><div class="ttdef"><b>Definition:</b> integer.h:891</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_long_xhtml_adb6c6aa62cca3527ff41fc5d608cc462"><div class="ttname"><a href="../../d4/de1/class_instructions_1_1_integer_1_1_to_long.xhtml#adb6c6aa62cca3527ff41fc5d608cc462">Instructions::Integer::ToLong::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Convert int to long.</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instructions::Instruction</a></div><div class="ttdef"><b>Definition:</b> base.h:15</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_arithmetic_shift_right_xhtml_aa0fb0cd3e2cf2d042b6b2137192f6bfb"><div class="ttname"><a href="../../d5/dd9/class_instructions_1_1_integer_1_1_arithmetic_shift_right.xhtml#aa0fb0cd3e2cf2d042b6b2137192f6bfb">Instructions::Integer::ArithmeticShiftRight::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Arithmetic shift right int.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store__0_xhtml_adeb0a128abc05a03b90a990d3662d345"><div class="ttname"><a href="../../da/d29/class_instructions_1_1_integer_1_1_store__0.xhtml#adeb0a128abc05a03b90a990d3662d345">Instructions::Integer::Store_0::Store_0</a></div><div class="ttdeci">Store_0()</div><div class="ttdef"><b>Definition:</b> integer.h:853</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__4_xhtml_a3a24afd14585f443811f771d4603d157"><div class="ttname"><a href="../../d9/dd6/class_instructions_1_1_integer_1_1_const__4.xhtml#a3a24afd14585f443811f771d4603d157">Instructions::Integer::Const_4::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Push int constant.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store__3_xhtml_a37fbe144067eb32ade5eb28a278f7a85"><div class="ttname"><a href="../../d7/dcc/class_instructions_1_1_integer_1_1_store__3.xhtml#a37fbe144067eb32ade5eb28a278f7a85">Instructions::Integer::Store_3::Store_3</a></div><div class="ttdeci">Store_3()</div><div class="ttdef"><b>Definition:</b> integer.h:910</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_or_xhtml_a0df326c1f83065c0c0a1372dd3b04f75"><div class="ttname"><a href="../../d1/d51/class_instructions_1_1_integer_1_1_or.xhtml#a0df326c1f83065c0c0a1372dd3b04f75">Instructions::Integer::Or::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Boolean OR int.</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a4f91c7732c489153cb6ee469f6a16ceb"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a4f91c7732c489153cb6ee469f6a16ceb">Instructions::Opcodes::kINEG</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:141</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store__1_xhtml_a53e34fbb44c538b0b7cf72d2d2050b50"><div class="ttname"><a href="../../d4/dc8/class_instructions_1_1_integer_1_1_store__1.xhtml#a53e34fbb44c538b0b7cf72d2d2050b50">Instructions::Integer::Store_1::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Store int into local variable.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_base_integer_xhtml_a1244ce7d46b91416da40dd25734873c4"><div class="ttname"><a href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml#a1244ce7d46b91416da40dd25734873c4">Instructions::Integer::BaseInteger::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> integer.h:17</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_equal_xhtml_ad34dcc8080622fc9d494e9d751145f38"><div class="ttname"><a href="../../d5/da4/class_instructions_1_1_integer_1_1_compare_equal.xhtml#ad34dcc8080622fc9d494e9d751145f38">Instructions::Integer::CompareEqual::CompareEqual</a></div><div class="ttdeci">CompareEqual()</div><div class="ttdef"><b>Definition:</b> integer.h:357</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_xor_xhtml_aa7bf13d9f3869e5c9c4c312821e64bd0"><div class="ttname"><a href="../../da/db5/class_instructions_1_1_integer_1_1_xor.xhtml#aa7bf13d9f3869e5c9c4c312821e64bd0">Instructions::Integer::Xor::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Boolean XOR int.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_less_than_xhtml"><div class="ttname"><a href="../../d9/de2/class_instructions_1_1_integer_1_1_compare_less_than.xhtml">Instructions::Integer::CompareLessThan</a></div><div class="ttdef"><b>Definition:</b> integer.h:431</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_or_xhtml"><div class="ttname"><a href="../../d1/d51/class_instructions_1_1_integer_1_1_or.xhtml">Instructions::Integer::Or</a></div><div class="ttdef"><b>Definition:</b> integer.h:706</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37abfb24add23d39571d3b74ceed874163f"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37abfb24add23d39571d3b74ceed874163f">Instructions::Opcodes::kISTORE_2</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:156</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_add_xhtml_a4b9b12e73ec7cdfd4387bfe72094d563"><div class="ttname"><a href="../../db/dc0/class_instructions_1_1_integer_1_1_add.xhtml#a4b9b12e73ec7cdfd4387bfe72094d563">Instructions::Integer::Add::Add</a></div><div class="ttdeci">Add()</div><div class="ttdef"><b>Definition:</b> integer.h:148</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_shift_left_xhtml_a206f8f9febc36fdb007b80dc12720530"><div class="ttname"><a href="../../d3/d79/class_instructions_1_1_integer_1_1_shift_left.xhtml#a206f8f9febc36fdb007b80dc12720530">Instructions::Integer::ShiftLeft::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Shift left int.</div></div>
<div class="ttc" id="abase_8h_xhtml"><div class="ttname"><a href="../../d3/d5a/base_8h.xhtml">base.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__4_xhtml_a597aa3462342d528925efd7e6855c11a"><div class="ttname"><a href="../../d9/dd6/class_instructions_1_1_integer_1_1_const__4.xhtml#a597aa3462342d528925efd7e6855c11a">Instructions::Integer::Const_4::Const_4</a></div><div class="ttdeci">Const_4()</div><div class="ttdef"><b>Definition:</b> integer.h:319</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_shift_left_xhtml"><div class="ttname"><a href="../../d3/d79/class_instructions_1_1_integer_1_1_shift_left.xhtml">Instructions::Integer::ShiftLeft</a></div><div class="ttdef"><b>Definition:</b> integer.h:763</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__m1_xhtml"><div class="ttname"><a href="../../d0/d9f/class_instructions_1_1_integer_1_1_const__m1.xhtml">Instructions::Integer::Const_m1</a></div><div class="ttdef"><b>Definition:</b> integer.h:222</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_equal_xhtml"><div class="ttname"><a href="../../d5/da4/class_instructions_1_1_integer_1_1_compare_equal.xhtml">Instructions::Integer::CompareEqual</a></div><div class="ttdef"><b>Definition:</b> integer.h:355</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store__1_xhtml"><div class="ttname"><a href="../../d4/dc8/class_instructions_1_1_integer_1_1_store__1.xhtml">Instructions::Integer::Store_1</a></div><div class="ttdef"><b>Definition:</b> integer.h:870</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load__0_xhtml_a81d3e168ad6bc1644cf86547def6f4b6"><div class="ttname"><a href="../../de/d33/class_instructions_1_1_integer_1_1_load__0.xhtml#a81d3e168ad6bc1644cf86547def6f4b6">Instructions::Integer::Load_0::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Load int from local variable.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__0_xhtml_ac13336094c34f640f216bfdbf46d210d"><div class="ttname"><a href="../../db/dab/class_instructions_1_1_integer_1_1_const__0.xhtml#ac13336094c34f640f216bfdbf46d210d">Instructions::Integer::Const_0::Const_0</a></div><div class="ttdeci">Const_0()</div><div class="ttdef"><b>Definition:</b> integer.h:243</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_neg_xhtml"><div class="ttname"><a href="../../df/d66/class_instructions_1_1_integer_1_1_neg.xhtml">Instructions::Integer::Neg</a></div><div class="ttdef"><b>Definition:</b> integer.h:687</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_xor_xhtml"><div class="ttname"><a href="../../da/db5/class_instructions_1_1_integer_1_1_xor.xhtml">Instructions::Integer::Xor</a></div><div class="ttdef"><b>Definition:</b> integer.h:965</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37abb61a6f1dcd08d46410d5f0fd5692796"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37abb61a6f1dcd08d46410d5f0fd5692796">Instructions::Opcodes::kILOAD_1</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:135</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a734b22a5943659901f563f169d544c88"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a734b22a5943659901f563f169d544c88">Instructions::Opcodes::kIRETURN</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:150</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__3_xhtml"><div class="ttname"><a href="../../d6/d7b/class_instructions_1_1_integer_1_1_const__3.xhtml">Instructions::Integer::Const_3</a></div><div class="ttdef"><b>Definition:</b> integer.h:298</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a0f2cc75f2a73241c3611ff27668379d1"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a0f2cc75f2a73241c3611ff27668379d1">Instructions::Opcodes::kIUSHR</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:159</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_sub_xhtml_a900d46953161ff739177a6d765eece3b"><div class="ttname"><a href="../../d2/dcb/class_instructions_1_1_integer_1_1_sub.xhtml#a900d46953161ff739177a6d765eece3b">Instructions::Integer::Sub::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Subtract int.</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a406b6119a6ca8500d036a77afc9e7d90"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a406b6119a6ca8500d036a77afc9e7d90">Instructions::Opcodes::kIMUL</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:140</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a16f926a0feb794594aa57e5719e9f6d3"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a16f926a0feb794594aa57e5719e9f6d3">Instructions::Opcodes::kIINC</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:132</div></div>
<div class="ttc" id="astring_8h_xhtml"><div class="ttname"><a href="../../da/d66/string_8h.xhtml">string.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_long_xhtml_ac1933a33351b096de1f86ca322679c6f"><div class="ttname"><a href="../../d4/de1/class_instructions_1_1_integer_1_1_to_long.xhtml#ac1933a33351b096de1f86ca322679c6f">Instructions::Integer::ToLong::ToLong</a></div><div class="ttdeci">ToLong()</div><div class="ttdef"><b>Definition:</b> integer.h:110</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__2_xhtml_ac7d5866f01a606096c95435dfbe4f7df"><div class="ttname"><a href="../../d4/d99/class_instructions_1_1_integer_1_1_const__2.xhtml#ac7d5866f01a606096c95435dfbe4f7df">Instructions::Integer::Const_2::Const_2</a></div><div class="ttdeci">Const_2()</div><div class="ttdef"><b>Definition:</b> integer.h:281</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store__0_xhtml_ad6caff8fe3f6b2b71ff1186c62fa1074"><div class="ttname"><a href="../../da/d29/class_instructions_1_1_integer_1_1_store__0.xhtml#ad6caff8fe3f6b2b71ff1186c62fa1074">Instructions::Integer::Store_0::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Store int into local variable.</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a474170d3acd4bea7f3079d2ba4aefaef"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a474170d3acd4bea7f3079d2ba4aefaef">Instructions::Opcodes::kIDIV</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:115</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af4825fe989633f6914eb6b1998aaeb6a"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af4825fe989633f6914eb6b1998aaeb6a">Instructions::Opcodes::kIOR</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:148</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load__3_xhtml_ac10ad75d51cb13bacd7aa2c76ed2918b"><div class="ttname"><a href="../../db/d68/class_instructions_1_1_integer_1_1_load__3.xhtml#ac10ad75d51cb13bacd7aa2c76ed2918b">Instructions::Integer::Load_3::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Load int from local variable.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load__1_xhtml"><div class="ttname"><a href="../../da/d2b/class_instructions_1_1_integer_1_1_load__1.xhtml">Instructions::Integer::Load_1</a></div><div class="ttdef"><b>Definition:</b> integer.h:611</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_byte_xhtml_a85e437086bb4bb8c18aa2bdedc245008"><div class="ttname"><a href="../../d9/d4c/class_instructions_1_1_integer_1_1_to_byte.xhtml#a85e437086bb4bb8c18aa2bdedc245008">Instructions::Integer::ToByte::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Convert int to byte.</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37afa35ecfdf3f4adafdc4dfcd6a9ec2083"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37afa35ecfdf3f4adafdc4dfcd6a9ec2083">Instructions::Opcodes::kIF_ICMPEQ</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:118</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store_into_array_xhtml_af5cbd742beeb99334e3829a54c142dfb"><div class="ttname"><a href="../../d7/d93/class_instructions_1_1_integer_1_1_store_into_array.xhtml#af5cbd742beeb99334e3829a54c142dfb">Instructions::Integer::StoreIntoArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Store int into local variable.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_return_xhtml"><div class="ttname"><a href="../../d4/dfa/class_instructions_1_1_integer_1_1_return.xhtml">Instructions::Integer::Return</a></div><div class="ttdef"><b>Definition:</b> integer.h:744</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__5_xhtml"><div class="ttname"><a href="../../d0/daf/class_instructions_1_1_integer_1_1_const__5.xhtml">Instructions::Integer::Const_5</a></div><div class="ttdef"><b>Definition:</b> integer.h:336</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a9a5ab36c1f1363a1771b0a898071b04d"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a9a5ab36c1f1363a1771b0a898071b04d">Instructions::Opcodes::kIADD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:104</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ace988950f2ec4b4a3ae19c325ce07ee8"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ace988950f2ec4b4a3ae19c325ce07ee8">Instructions::Opcodes::kI2F</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:101</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__3_xhtml_a4a3db8752cc7200376d436c8c3ea1aec"><div class="ttname"><a href="../../d6/d7b/class_instructions_1_1_integer_1_1_const__3.xhtml#a4a3db8752cc7200376d436c8c3ea1aec">Instructions::Integer::Const_3::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Push int constant.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_not_equal_xhtml"><div class="ttname"><a href="../../db/df9/class_instructions_1_1_integer_1_1_compare_not_equal.xhtml">Instructions::Integer::CompareNotEqual</a></div><div class="ttdef"><b>Definition:</b> integer.h:450</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_ab765ddcb61c4d60f2647154d87f97ae2"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Instructions::Opcodes::getMnemonic</a></div><div class="ttdeci">std::string getMnemonic(const Utils::Types::u1 &amp;opcode)</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load__1_xhtml_a1e96949892c606f80242d7d75cd5ded8"><div class="ttname"><a href="../../da/d2b/class_instructions_1_1_integer_1_1_load__1.xhtml#a1e96949892c606f80242d7d75cd5ded8">Instructions::Integer::Load_1::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Load int from local variable.</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ae859cbc6b71a4ae76654687f9be720e5"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae859cbc6b71a4ae76654687f9be720e5">Instructions::Opcodes::kIREM</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:149</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a35869735149e4612bd7ae851d39ffecd"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a35869735149e4612bd7ae851d39ffecd">Instructions::Opcodes::kISHR</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:152</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a8ba02537990bf5c4e381ec933f5c04d1"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8ba02537990bf5c4e381ec933f5c04d1">Instructions::Opcodes::kI2S</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:103</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_byte_xhtml"><div class="ttname"><a href="../../d9/d4c/class_instructions_1_1_integer_1_1_to_byte.xhtml">Instructions::Integer::ToByte</a></div><div class="ttdef"><b>Definition:</b> integer.h:32</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_logical_shift_right_xhtml"><div class="ttname"><a href="../../d2/d22/class_instructions_1_1_integer_1_1_logical_shift_right.xhtml">Instructions::Integer::LogicalShiftRight</a></div><div class="ttdef"><b>Definition:</b> integer.h:946</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_rem_xhtml"><div class="ttname"><a href="../../d9/dd2/class_instructions_1_1_integer_1_1_rem.xhtml">Instructions::Integer::Rem</a></div><div class="ttdef"><b>Definition:</b> integer.h:725</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af11fa44d3c89edc2fe15dac6c65f710e"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af11fa44d3c89edc2fe15dac6c65f710e">Instructions::Opcodes::kISHL</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:151</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load__3_xhtml"><div class="ttname"><a href="../../db/d68/class_instructions_1_1_integer_1_1_load__3.xhtml">Instructions::Integer::Load_3</a></div><div class="ttdef"><b>Definition:</b> integer.h:649</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_logical_shift_right_xhtml_afa3eedbf78abc3755a9551bf6b310db4"><div class="ttname"><a href="../../d2/d22/class_instructions_1_1_integer_1_1_logical_shift_right.xhtml#afa3eedbf78abc3755a9551bf6b310db4">Instructions::Integer::LogicalShiftRight::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Logical shift right int.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load__0_xhtml"><div class="ttname"><a href="../../de/d33/class_instructions_1_1_integer_1_1_load__0.xhtml">Instructions::Integer::Load_0</a></div><div class="ttdef"><b>Definition:</b> integer.h:592</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ae538004d5ad5baa0003972617d95ab0b"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae538004d5ad5baa0003972617d95ab0b">Instructions::Opcodes::kILOAD_3</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:137</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_return_xhtml_a5d1d16424bb9a8f3d8323c1e6dd604bb"><div class="ttname"><a href="../../d4/dfa/class_instructions_1_1_integer_1_1_return.xhtml#a5d1d16424bb9a8f3d8323c1e6dd604bb">Instructions::Integer::Return::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Return int from method.</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37acbc81ed69617f1d2c625b2a5479e8224"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37acbc81ed69617f1d2c625b2a5479e8224">Instructions::Opcodes::kIF_ICMPLT</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:122</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_logical_shift_right_xhtml_a313540ab1d28d61331085a6f2ee4e874"><div class="ttname"><a href="../../d2/d22/class_instructions_1_1_integer_1_1_logical_shift_right.xhtml#a313540ab1d28d61331085a6f2ee4e874">Instructions::Integer::LogicalShiftRight::LogicalShiftRight</a></div><div class="ttdeci">LogicalShiftRight()</div><div class="ttdef"><b>Definition:</b> integer.h:948</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store_xhtml_a789cf7c6ac9d44d46d69708094e8c3ed"><div class="ttname"><a href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml#a789cf7c6ac9d44d46d69708094e8c3ed">Instructions::Integer::Store::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> integer.h:805</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ad2c3315a42a6688b819f2d9d192ae7ab"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ad2c3315a42a6688b819f2d9d192ae7ab">Instructions::Opcodes::kISTORE_3</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:157</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__5_xhtml_a3a781602820f47fef618ba8105c60ac7"><div class="ttname"><a href="../../d0/daf/class_instructions_1_1_integer_1_1_const__5.xhtml#a3a781602820f47fef618ba8105c60ac7">Instructions::Integer::Const_5::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Push int constant.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_rem_xhtml_a8ed715bdd2c3778c4d1240266f57acf7"><div class="ttname"><a href="../../d9/dd2/class_instructions_1_1_integer_1_1_rem.xhtml#a8ed715bdd2c3778c4d1240266f57acf7">Instructions::Integer::Rem::Rem</a></div><div class="ttdeci">Rem()</div><div class="ttdef"><b>Definition:</b> integer.h:727</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_long_xhtml"><div class="ttname"><a href="../../d4/de1/class_instructions_1_1_integer_1_1_to_long.xhtml">Instructions::Integer::ToLong</a></div><div class="ttdef"><b>Definition:</b> integer.h:108</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store_xhtml"><div class="ttname"><a href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml">Instructions::Integer::Store</a></div><div class="ttdef"><b>Definition:</b> integer.h:801</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_equal_xhtml_a84f53048259f0da3f1f52119cda29b0d"><div class="ttname"><a href="../../d5/da4/class_instructions_1_1_integer_1_1_compare_equal.xhtml#a84f53048259f0da3f1f52119cda29b0d">Instructions::Integer::CompareEqual::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Compare int (val1 == val2)</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__m1_xhtml_afbe0a0707703941bf30ee5c1d2c61297"><div class="ttname"><a href="../../d0/d9f/class_instructions_1_1_integer_1_1_const__m1.xhtml#afbe0a0707703941bf30ee5c1d2c61297">Instructions::Integer::Const_m1::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Push int constant.</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml_abce4218201520f9ca8880bda8ab78e40"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">Instructions::Instruction::opcode</a></div><div class="ttdeci">const Utils::Types::u1 opcode</div><div class="ttdef"><b>Definition:</b> base.h:35</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_or_xhtml_aaee2b03bd21608fd4f1e0e3eb7258db2"><div class="ttname"><a href="../../d1/d51/class_instructions_1_1_integer_1_1_or.xhtml#aaee2b03bd21608fd4f1e0e3eb7258db2">Instructions::Integer::Or::Or</a></div><div class="ttdeci">Or()</div><div class="ttdef"><b>Definition:</b> integer.h:708</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a089376193dbce8b055a57c26ebb2904e"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a089376193dbce8b055a57c26ebb2904e">Instructions::Opcodes::kICONST_0</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:109</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load_xhtml_ade5c73ccd8113e0d0966af21f15c7ef5"><div class="ttname"><a href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml#ade5c73ccd8113e0d0966af21f15c7ef5">Instructions::Integer::Load::Load</a></div><div class="ttdeci">Load()</div><div class="ttdef"><b>Definition:</b> integer.h:544</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_base_integer_xhtml_aac5eada7a7eebaaaf98961a6dd624a75"><div class="ttname"><a href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml#aac5eada7a7eebaaaf98961a6dd624a75">Instructions::Integer::BaseInteger::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> integer.h:25</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store_into_array_xhtml_abf84efeb95fb13db3348e7fa456364b6"><div class="ttname"><a href="../../d7/d93/class_instructions_1_1_integer_1_1_store_into_array.xhtml#abf84efeb95fb13db3348e7fa456364b6">Instructions::Integer::StoreIntoArray::StoreIntoArray</a></div><div class="ttdeci">StoreIntoArray()</div><div class="ttdef"><b>Definition:</b> integer.h:205</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_sub_xhtml_a8a02d79cb6ff67bcddf670544deff1c6"><div class="ttname"><a href="../../d2/dcb/class_instructions_1_1_integer_1_1_sub.xhtml#a8a02d79cb6ff67bcddf670544deff1c6">Instructions::Integer::Sub::Sub</a></div><div class="ttdeci">Sub()</div><div class="ttdef"><b>Definition:</b> integer.h:929</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a63ff623f212584eee401a9fb65cec6fa"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a63ff623f212584eee401a9fb65cec6fa">Instructions::Opcodes::kI2B</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:98</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__1_xhtml"><div class="ttname"><a href="../../df/db9/class_instructions_1_1_integer_1_1_const__1.xhtml">Instructions::Integer::Const_1</a></div><div class="ttdef"><b>Definition:</b> integer.h:260</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load__2_xhtml"><div class="ttname"><a href="../../d4/d83/class_instructions_1_1_integer_1_1_load__2.xhtml">Instructions::Integer::Load_2</a></div><div class="ttdef"><b>Definition:</b> integer.h:630</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_double_xhtml_a3313ceba840465a9c853604d05954ee2"><div class="ttname"><a href="../../d5/d88/class_instructions_1_1_integer_1_1_to_double.xhtml#a3313ceba840465a9c853604d05954ee2">Instructions::Integer::ToDouble::ToDouble</a></div><div class="ttdeci">ToDouble()</div><div class="ttdef"><b>Definition:</b> integer.h:72</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store__3_xhtml_a43f4cff956cccdea5b5c9d3ad251a2ba"><div class="ttname"><a href="../../d7/dcc/class_instructions_1_1_integer_1_1_store__3.xhtml#a43f4cff956cccdea5b5c9d3ad251a2ba">Instructions::Integer::Store_3::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Store int into local variable.</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a12573b6b8cf0c44da8aca0aa99d080bf"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a12573b6b8cf0c44da8aca0aa99d080bf">Instructions::Opcodes::kISTORE_1</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:155</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a4415b4b8c25bb55ff86d74e0abc0a8fd"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a4415b4b8c25bb55ff86d74e0abc0a8fd">Instructions::Opcodes::kIF_ICMPNE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:123</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_arithmetic_shift_right_xhtml"><div class="ttname"><a href="../../d5/dd9/class_instructions_1_1_integer_1_1_arithmetic_shift_right.xhtml">Instructions::Integer::ArithmeticShiftRight</a></div><div class="ttdef"><b>Definition:</b> integer.h:782</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af35382060a7d9ec7eb852d2548efcabf"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af35382060a7d9ec7eb852d2548efcabf">Instructions::Opcodes::kICONST_M1</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:108</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_inc_xhtml_a87f80888eebb4219b5d70e04d014e900"><div class="ttname"><a href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml#a87f80888eebb4219b5d70e04d014e900">Instructions::Integer::Inc::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Increment local variable by constant.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_inc_xhtml_ab4af3940e33f8bfff84a1761830f3059"><div class="ttname"><a href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml#ab4af3940e33f8bfff84a1761830f3059">Instructions::Integer::Inc::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> integer.h:492</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_xor_xhtml_a73baffb81b7abf01924260235cc8005d"><div class="ttname"><a href="../../da/db5/class_instructions_1_1_integer_1_1_xor.xhtml#a73baffb81b7abf01924260235cc8005d">Instructions::Integer::Xor::Xor</a></div><div class="ttdeci">Xor()</div><div class="ttdef"><b>Definition:</b> integer.h:967</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_inc_xhtml_a4c1f81ffe4463eb6b7aafee74f4fe5bb"><div class="ttname"><a href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml#a4c1f81ffe4463eb6b7aafee74f4fe5bb">Instructions::Integer::Inc::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> integer.h:512</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_inc_xhtml"><div class="ttname"><a href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml">Instructions::Integer::Inc</a></div><div class="ttdef"><b>Definition:</b> integer.h:488</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_rem_xhtml_a8200e04563e345767edb791040d5b67f"><div class="ttname"><a href="../../d9/dd2/class_instructions_1_1_integer_1_1_rem.xhtml#a8200e04563e345767edb791040d5b67f">Instructions::Integer::Rem::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Remainder int.</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a8f7f2bcafbf354fb16af808ec6fbfc72"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8f7f2bcafbf354fb16af808ec6fbfc72">Instructions::Opcodes::kICONST_3</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:112</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_div_xhtml_a5556ab6b4fa55e599386b8dce2ac19e3"><div class="ttname"><a href="../../d4/d42/class_instructions_1_1_integer_1_1_div.xhtml#a5556ab6b4fa55e599386b8dce2ac19e3">Instructions::Integer::Div::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Divide int.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load__2_xhtml_a42aabe041f2ccd37ab2a9d6758d75cd1"><div class="ttname"><a href="../../d4/d83/class_instructions_1_1_integer_1_1_load__2.xhtml#a42aabe041f2ccd37ab2a9d6758d75cd1">Instructions::Integer::Load_2::Load_2</a></div><div class="ttdeci">Load_2()</div><div class="ttdef"><b>Definition:</b> integer.h:632</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store__1_xhtml_a56519c078cff170ca085e9cec2353f06"><div class="ttname"><a href="../../d4/dc8/class_instructions_1_1_integer_1_1_store__1.xhtml#a56519c078cff170ca085e9cec2353f06">Instructions::Integer::Store_1::Store_1</a></div><div class="ttdeci">Store_1()</div><div class="ttdef"><b>Definition:</b> integer.h:872</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_double_xhtml"><div class="ttname"><a href="../../d5/d88/class_instructions_1_1_integer_1_1_to_double.xhtml">Instructions::Integer::ToDouble</a></div><div class="ttdef"><b>Definition:</b> integer.h:70</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_base_integer_xhtml"><div class="ttname"><a href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml">Instructions::Integer::BaseInteger</a></div><div class="ttdef"><b>Definition:</b> integer.h:13</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_float_xhtml_a95ec451106fd8fe055828e99c9b7d65e"><div class="ttname"><a href="../../dd/d94/class_instructions_1_1_integer_1_1_to_float.xhtml#a95ec451106fd8fe055828e99c9b7d65e">Instructions::Integer::ToFloat::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Convert int to float.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__0_xhtml_af8fe1b3fa03ef83e2b435581163279ff"><div class="ttname"><a href="../../db/dab/class_instructions_1_1_integer_1_1_const__0.xhtml#af8fe1b3fa03ef83e2b435581163279ff">Instructions::Integer::Const_0::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Push int constant.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__2_xhtml_a5419637274cc969d2659eb1e864c0401"><div class="ttname"><a href="../../d4/d99/class_instructions_1_1_integer_1_1_const__2.xhtml#a5419637274cc969d2659eb1e864c0401">Instructions::Integer::Const_2::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Push int constant.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load_from_array_xhtml_adbd484b9f41dbe25069a19e4a2f172dc"><div class="ttname"><a href="../../d8/dc7/class_instructions_1_1_integer_1_1_load_from_array.xhtml#adbd484b9f41dbe25069a19e4a2f172dc">Instructions::Integer::LoadFromArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Load int from local variable.</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a3798015d2cc7c451fab413d7aacc3caa"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a3798015d2cc7c451fab413d7aacc3caa">Instructions::Opcodes::kILOAD_0</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:134</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store__0_xhtml"><div class="ttname"><a href="../../da/d29/class_instructions_1_1_integer_1_1_store__0.xhtml">Instructions::Integer::Store_0</a></div><div class="ttdef"><b>Definition:</b> integer.h:851</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load_xhtml_acded0cf8f431140a5aab9bf4b666a675"><div class="ttname"><a href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml#acded0cf8f431140a5aab9bf4b666a675">Instructions::Integer::Load::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Load int from local variable.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_not_equal_xhtml_ade3ddf37da137528c09b90e3fce59576"><div class="ttname"><a href="../../db/df9/class_instructions_1_1_integer_1_1_compare_not_equal.xhtml#ade3ddf37da137528c09b90e3fce59576">Instructions::Integer::CompareNotEqual::CompareNotEqual</a></div><div class="ttdeci">CompareNotEqual()</div><div class="ttdef"><b>Definition:</b> integer.h:452</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__4_xhtml"><div class="ttname"><a href="../../d9/dd6/class_instructions_1_1_integer_1_1_const__4.xhtml">Instructions::Integer::Const_4</a></div><div class="ttdef"><b>Definition:</b> integer.h:317</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_less_than_xhtml_ab9ce0c406078d03c2890c213b820119c"><div class="ttname"><a href="../../d9/de2/class_instructions_1_1_integer_1_1_compare_less_than.xhtml#ab9ce0c406078d03c2890c213b820119c">Instructions::Integer::CompareLessThan::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Compare int (val1 &lt; val2)</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a956c123ae243d78e2d0c022f859a211b"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a956c123ae243d78e2d0c022f859a211b">Instructions::Opcodes::kI2D</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:100</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store_xhtml_aad5b4d3e96204ae8a3f72f8c33cb9c3c"><div class="ttname"><a href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml#aad5b4d3e96204ae8a3f72f8c33cb9c3c">Instructions::Integer::Store::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Store int into local variable.</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a186b24907d2233152ec65090c8624aee"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a186b24907d2233152ec65090c8624aee">Instructions::Opcodes::kI2L</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:102</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store__3_xhtml"><div class="ttname"><a href="../../d7/dcc/class_instructions_1_1_integer_1_1_store__3.xhtml">Instructions::Integer::Store_3</a></div><div class="ttdef"><b>Definition:</b> integer.h:908</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_and_xhtml_a6e56f6e7c9ccd53d3285578d419d0db4"><div class="ttname"><a href="../../da/d68/class_instructions_1_1_integer_1_1_and.xhtml#a6e56f6e7c9ccd53d3285578d419d0db4">Instructions::Integer::And::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Boolean AND int.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_add_xhtml_a227f9c757428d671075c5b24e0ca7fe7"><div class="ttname"><a href="../../db/dc0/class_instructions_1_1_integer_1_1_add.xhtml#a227f9c757428d671075c5b24e0ca7fe7">Instructions::Integer::Add::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Add int.</div></div>
<div class="ttc" id="aopcodes_8h_xhtml"><div class="ttname"><a href="../../d3/de6/opcodes_8h.xhtml">opcodes.h</a></div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ac73d5eb1eec76255c1f6ad25aa6197f4"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ac73d5eb1eec76255c1f6ad25aa6197f4">Instructions::Opcodes::kIF_ICMPGT</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:120</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_shift_left_xhtml_a46c856367ae9a8f5813b290ec14062f5"><div class="ttname"><a href="../../d3/d79/class_instructions_1_1_integer_1_1_shift_left.xhtml#a46c856367ae9a8f5813b290ec14062f5">Instructions::Integer::ShiftLeft::ShiftLeft</a></div><div class="ttdeci">ShiftLeft()</div><div class="ttdef"><b>Definition:</b> integer.h:765</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_div_xhtml_a2ae4a79fac0de7b8e782e689453424fb"><div class="ttname"><a href="../../d4/d42/class_instructions_1_1_integer_1_1_div.xhtml#a2ae4a79fac0de7b8e782e689453424fb">Instructions::Integer::Div::Div</a></div><div class="ttdeci">Div()</div><div class="ttdef"><b>Definition:</b> integer.h:471</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load_xhtml_a1c4fb1dccfdf4c888530a6b8335c24d1"><div class="ttname"><a href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml#a1c4fb1dccfdf4c888530a6b8335c24d1">Instructions::Integer::Load::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> integer.h:564</div></div>
<div class="ttc" id="anamespace_instructions_xhtml"><div class="ttname"><a href="../../da/d11/namespace_instructions.xhtml">Instructions</a></div><div class="ttdef"><b>Definition:</b> execution_engine.h:12</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load__2_xhtml_af604219b450d1902c71f8316534a64ef"><div class="ttname"><a href="../../d4/d83/class_instructions_1_1_integer_1_1_load__2.xhtml#af604219b450d1902c71f8316534a64ef">Instructions::Integer::Load_2::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Load int from local variable.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_float_xhtml_a4f22e397e5e772119db6b66fec126d99"><div class="ttname"><a href="../../dd/d94/class_instructions_1_1_integer_1_1_to_float.xhtml#a4f22e397e5e772119db6b66fec126d99">Instructions::Integer::ToFloat::ToFloat</a></div><div class="ttdeci">ToFloat()</div><div class="ttdef"><b>Definition:</b> integer.h:91</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_and_xhtml_ad73cddd417124f308e70c0a07314d119"><div class="ttname"><a href="../../da/d68/class_instructions_1_1_integer_1_1_and.xhtml#ad73cddd417124f308e70c0a07314d119">Instructions::Integer::And::And</a></div><div class="ttdeci">And()</div><div class="ttdef"><b>Definition:</b> integer.h:186</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_less_equal_xhtml_a596aa8d8ee97e908c3e4fcaf40d676d4"><div class="ttname"><a href="../../d9/df8/class_instructions_1_1_integer_1_1_compare_less_equal.xhtml#a596aa8d8ee97e908c3e4fcaf40d676d4">Instructions::Integer::CompareLessEqual::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Compare int (val1 &lt;= val2)</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_greater_equal_xhtml"><div class="ttname"><a href="../../de/d32/class_instructions_1_1_integer_1_1_compare_greater_equal.xhtml">Instructions::Integer::CompareGreaterEqual</a></div><div class="ttdef"><b>Definition:</b> integer.h:374</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load__1_xhtml_a1546c1b4512286952b4d23c90037abb0"><div class="ttname"><a href="../../da/d2b/class_instructions_1_1_integer_1_1_load__1.xhtml#a1546c1b4512286952b4d23c90037abb0">Instructions::Integer::Load_1::Load_1</a></div><div class="ttdeci">Load_1()</div><div class="ttdef"><b>Definition:</b> integer.h:613</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store_into_array_xhtml"><div class="ttname"><a href="../../d7/d93/class_instructions_1_1_integer_1_1_store_into_array.xhtml">Instructions::Integer::StoreIntoArray</a></div><div class="ttdef"><b>Definition:</b> integer.h:203</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store__2_xhtml"><div class="ttname"><a href="../../d4/d4e/class_instructions_1_1_integer_1_1_store__2.xhtml">Instructions::Integer::Store_2</a></div><div class="ttdef"><b>Definition:</b> integer.h:889</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_return_xhtml_a9d81cf73aaf7586e3aca5c7d7358c7c8"><div class="ttname"><a href="../../d4/dfa/class_instructions_1_1_integer_1_1_return.xhtml#a9d81cf73aaf7586e3aca5c7d7358c7c8">Instructions::Integer::Return::Return</a></div><div class="ttdeci">Return()</div><div class="ttdef"><b>Definition:</b> integer.h:746</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_double_xhtml_a3ff3effed56e077f469a27063cc6a48e"><div class="ttname"><a href="../../d5/d88/class_instructions_1_1_integer_1_1_to_double.xhtml#a3ff3effed56e077f469a27063cc6a48e">Instructions::Integer::ToDouble::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Convert int to double.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_mul_xhtml_a0bce831f5519743b7b8d1c6fb8e15538"><div class="ttname"><a href="../../d8/de0/class_instructions_1_1_integer_1_1_mul.xhtml#a0bce831f5519743b7b8d1c6fb8e15538">Instructions::Integer::Mul::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Multiply int.</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a6b30d55e30d5059b3992079ecb55e6b0"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a6b30d55e30d5059b3992079ecb55e6b0">Instructions::Opcodes::kIALOAD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:105</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_float_xhtml"><div class="ttname"><a href="../../dd/d94/class_instructions_1_1_integer_1_1_to_float.xhtml">Instructions::Integer::ToFloat</a></div><div class="ttdef"><b>Definition:</b> integer.h:89</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load__0_xhtml_a0bf01acc55b56adc77d3c7443a5bde98"><div class="ttname"><a href="../../de/d33/class_instructions_1_1_integer_1_1_load__0.xhtml#a0bf01acc55b56adc77d3c7443a5bde98">Instructions::Integer::Load_0::Load_0</a></div><div class="ttdeci">Load_0()</div><div class="ttdef"><b>Definition:</b> integer.h:594</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_char_xhtml"><div class="ttname"><a href="../../d2/dab/class_instructions_1_1_integer_1_1_to_char.xhtml">Instructions::Integer::ToChar</a></div><div class="ttdef"><b>Definition:</b> integer.h:51</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store_xhtml_aec4682c077ed5e650369d97ea980c4c0"><div class="ttname"><a href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml#aec4682c077ed5e650369d97ea980c4c0">Instructions::Integer::Store::Store</a></div><div class="ttdeci">Store()</div><div class="ttdef"><b>Definition:</b> integer.h:803</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_greater_equal_xhtml_a8d860f7bef61cb3c25ce9eb429d1eceb"><div class="ttname"><a href="../../de/d32/class_instructions_1_1_integer_1_1_compare_greater_equal.xhtml#a8d860f7bef61cb3c25ce9eb429d1eceb">Instructions::Integer::CompareGreaterEqual::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Compare int (val1 &gt;= val2)</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_mul_xhtml_a338da44194bbb7cb72b56479289b21a5"><div class="ttname"><a href="../../d8/de0/class_instructions_1_1_integer_1_1_mul.xhtml#a338da44194bbb7cb72b56479289b21a5">Instructions::Integer::Mul::Mul</a></div><div class="ttdeci">Mul()</div><div class="ttdef"><b>Definition:</b> integer.h:670</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_short_xhtml"><div class="ttname"><a href="../../d9/d6f/class_instructions_1_1_integer_1_1_to_short.xhtml">Instructions::Integer::ToShort</a></div><div class="ttdef"><b>Definition:</b> integer.h:127</div></div>
<div class="ttc" id="anamespace_utils_1_1_types_xhtml_a987afa1d65d5f43c5e379d4cdafacd44"><div class="ttname"><a href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a></div><div class="ttdeci">std::uint8_t u1</div><div class="ttdef"><b>Definition:</b> types.h:8</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_and_xhtml"><div class="ttname"><a href="../../da/d68/class_instructions_1_1_integer_1_1_and.xhtml">Instructions::Integer::And</a></div><div class="ttdef"><b>Definition:</b> integer.h:184</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a3cc2474a65d94d73c3438709b88b2c4e"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a3cc2474a65d94d73c3438709b88b2c4e">Instructions::Opcodes::kIF_ICMPLE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:121</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_greater_than_xhtml"><div class="ttname"><a href="../../d8/de3/class_instructions_1_1_integer_1_1_compare_greater_than.xhtml">Instructions::Integer::CompareGreaterThan</a></div><div class="ttdef"><b>Definition:</b> integer.h:393</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load__3_xhtml_add4a46a8cfe8d2c37d5bdfc260bd425f"><div class="ttname"><a href="../../db/d68/class_instructions_1_1_integer_1_1_load__3.xhtml#add4a46a8cfe8d2c37d5bdfc260bd425f">Instructions::Integer::Load_3::Load_3</a></div><div class="ttdeci">Load_3()</div><div class="ttdef"><b>Definition:</b> integer.h:651</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a836511a8ef260985043b396e4eafcfbe"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a836511a8ef260985043b396e4eafcfbe">Instructions::Opcodes::kICONST_2</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:111</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_char_xhtml_a0ae16d71638f9486f12508e1f9ff2b65"><div class="ttname"><a href="../../d2/dab/class_instructions_1_1_integer_1_1_to_char.xhtml#a0ae16d71638f9486f12508e1f9ff2b65">Instructions::Integer::ToChar::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Convert int to char.</div></div>
<div class="ttc" id="anamespace_utils_1_1_string_xhtml_aec9a3efb3bd837c1f21fec1ceba1eec9"><div class="ttname"><a href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a></div><div class="ttdeci">std::string toString(const T &amp;num)</div><div class="ttdef"><b>Definition:</b> string.h:21</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__5_xhtml_a4b85c55648770a9f89c9ec7abb497877"><div class="ttname"><a href="../../d0/daf/class_instructions_1_1_integer_1_1_const__5.xhtml#a4b85c55648770a9f89c9ec7abb497877">Instructions::Integer::Const_5::Const_5</a></div><div class="ttdeci">Const_5()</div><div class="ttdef"><b>Definition:</b> integer.h:338</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_neg_xhtml_a00b050b590d1cf1009ddc2a1a4da826d"><div class="ttname"><a href="../../df/d66/class_instructions_1_1_integer_1_1_neg.xhtml#a00b050b590d1cf1009ddc2a1a4da826d">Instructions::Integer::Neg::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Negate int.</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37aa188b145807add9ef67a852fca937a47"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aa188b145807add9ef67a852fca937a47">Instructions::Opcodes::kISUB</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:158</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load_xhtml"><div class="ttname"><a href="../../df/d58/class_instructions_1_1_integer_1_1_load.xhtml">Instructions::Integer::Load</a></div><div class="ttdef"><b>Definition:</b> integer.h:542</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__1_xhtml_abb10d2513f49134b020b84c9f7c02307"><div class="ttname"><a href="../../df/db9/class_instructions_1_1_integer_1_1_const__1.xhtml#abb10d2513f49134b020b84c9f7c02307">Instructions::Integer::Const_1::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Push int constant.</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_add_xhtml"><div class="ttname"><a href="../../db/dc0/class_instructions_1_1_integer_1_1_add.xhtml">Instructions::Integer::Add</a></div><div class="ttdef"><b>Definition:</b> integer.h:146</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37adfd66e1e45ca2061b29137f4f2c8db85"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37adfd66e1e45ca2061b29137f4f2c8db85">Instructions::Opcodes::kILOAD_2</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:136</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__0_xhtml"><div class="ttname"><a href="../../db/dab/class_instructions_1_1_integer_1_1_const__0.xhtml">Instructions::Integer::Const_0</a></div><div class="ttdef"><b>Definition:</b> integer.h:241</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__m1_xhtml_aa485a2d2a2c92632b451e220540f7b20"><div class="ttname"><a href="../../d0/d9f/class_instructions_1_1_integer_1_1_const__m1.xhtml#aa485a2d2a2c92632b451e220540f7b20">Instructions::Integer::Const_m1::Const_m1</a></div><div class="ttdeci">Const_m1()</div><div class="ttdef"><b>Definition:</b> integer.h:224</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_inc_xhtml_a79b49e79936dedf302e66893afa8d21e"><div class="ttname"><a href="../../dd/d7b/class_instructions_1_1_integer_1_1_inc.xhtml#a79b49e79936dedf302e66893afa8d21e">Instructions::Integer::Inc::Inc</a></div><div class="ttdeci">Inc()</div><div class="ttdef"><b>Definition:</b> integer.h:490</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a041b12cc39c384dce9fcad4267f02ace"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a041b12cc39c384dce9fcad4267f02ace">Instructions::Opcodes::kILOAD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:133</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_store_xhtml_ae6c1628ae73da11cfa125391f28661e7"><div class="ttname"><a href="../../d8/d87/class_instructions_1_1_integer_1_1_store.xhtml#ae6c1628ae73da11cfa125391f28661e7">Instructions::Integer::Store::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> integer.h:823</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_greater_than_xhtml_aaa182818d961893adf15932f40a92f43"><div class="ttname"><a href="../../d8/de3/class_instructions_1_1_integer_1_1_compare_greater_than.xhtml#aaa182818d961893adf15932f40a92f43">Instructions::Integer::CompareGreaterThan::CompareGreaterThan</a></div><div class="ttdeci">CompareGreaterThan()</div><div class="ttdef"><b>Definition:</b> integer.h:395</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_arithmetic_shift_right_xhtml_a87775c4c1557bafa74533cedc556efc8"><div class="ttname"><a href="../../d5/dd9/class_instructions_1_1_integer_1_1_arithmetic_shift_right.xhtml#a87775c4c1557bafa74533cedc556efc8">Instructions::Integer::ArithmeticShiftRight::ArithmeticShiftRight</a></div><div class="ttdeci">ArithmeticShiftRight()</div><div class="ttdef"><b>Definition:</b> integer.h:784</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ab92d6f17320b44c5b4b8d961c5ceacdd"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ab92d6f17320b44c5b4b8d961c5ceacdd">Instructions::Opcodes::kIAND</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:106</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_base_integer_xhtml_a99b3ec055aaf2cbfbf8d66b23d4ef417"><div class="ttname"><a href="../../dd/de2/class_instructions_1_1_integer_1_1_base_integer.xhtml#a99b3ec055aaf2cbfbf8d66b23d4ef417">Instructions::Integer::BaseInteger::BaseInteger</a></div><div class="ttdeci">BaseInteger(const Utils::Types::u1 &amp;tag)</div><div class="ttdef"><b>Definition:</b> integer.h:15</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_greater_than_xhtml_a45c167c6e564aeccaf091e8f24109856"><div class="ttname"><a href="../../d8/de3/class_instructions_1_1_integer_1_1_compare_greater_than.xhtml#a45c167c6e564aeccaf091e8f24109856">Instructions::Integer::CompareGreaterThan::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Compare int (val1 &gt; val2)</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ae8a7b9dc0527d64f6a02513babfc21ca"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae8a7b9dc0527d64f6a02513babfc21ca">Instructions::Opcodes::kISTORE_0</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:154</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a9d24380a7ef5e416e73085654fc07328"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a9d24380a7ef5e416e73085654fc07328">Instructions::Opcodes::kICONST_5</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:114</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_less_than_xhtml_a98ab96d780c8dd2db42973bca4d66f5c"><div class="ttname"><a href="../../d9/de2/class_instructions_1_1_integer_1_1_compare_less_than.xhtml#a98ab96d780c8dd2db42973bca4d66f5c">Instructions::Integer::CompareLessThan::CompareLessThan</a></div><div class="ttdeci">CompareLessThan()</div><div class="ttdef"><b>Definition:</b> integer.h:433</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_load_from_array_xhtml"><div class="ttname"><a href="../../d8/dc7/class_instructions_1_1_integer_1_1_load_from_array.xhtml">Instructions::Integer::LoadFromArray</a></div><div class="ttdef"><b>Definition:</b> integer.h:165</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ab9080e4ccbf730104f965ab2a9efbf1a"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ab9080e4ccbf730104f965ab2a9efbf1a">Instructions::Opcodes::kICONST_4</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:113</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_less_equal_xhtml"><div class="ttname"><a href="../../d9/df8/class_instructions_1_1_integer_1_1_compare_less_equal.xhtml">Instructions::Integer::CompareLessEqual</a></div><div class="ttdef"><b>Definition:</b> integer.h:412</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_char_xhtml_a1c0987f02e283b7b1c5f13def9f7661b"><div class="ttname"><a href="../../d2/dab/class_instructions_1_1_integer_1_1_to_char.xhtml#a1c0987f02e283b7b1c5f13def9f7661b">Instructions::Integer::ToChar::ToChar</a></div><div class="ttdeci">ToChar()</div><div class="ttdef"><b>Definition:</b> integer.h:53</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_const__2_xhtml"><div class="ttname"><a href="../../d4/d99/class_instructions_1_1_integer_1_1_const__2.xhtml">Instructions::Integer::Const_2</a></div><div class="ttdef"><b>Definition:</b> integer.h:279</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af81f94f36e58767ee132f415a26ca364"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af81f94f36e58767ee132f415a26ca364">Instructions::Opcodes::kIF_ICMPGE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:119</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a23276368b0716668a01a2a733df242b0"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a23276368b0716668a01a2a733df242b0">Instructions::Opcodes::kI2C</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:99</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_byte_xhtml_a5fe6a3e711344484580f8059275c35b1"><div class="ttname"><a href="../../d9/d4c/class_instructions_1_1_integer_1_1_to_byte.xhtml#a5fe6a3e711344484580f8059275c35b1">Instructions::Integer::ToByte::ToByte</a></div><div class="ttdeci">ToByte()</div><div class="ttdef"><b>Definition:</b> integer.h:34</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_compare_less_equal_xhtml_ab809bf52726968d6ed70529d29ec4bf4"><div class="ttname"><a href="../../d9/df8/class_instructions_1_1_integer_1_1_compare_less_equal.xhtml#ab809bf52726968d6ed70529d29ec4bf4">Instructions::Integer::CompareLessEqual::CompareLessEqual</a></div><div class="ttdeci">CompareLessEqual()</div><div class="ttdef"><b>Definition:</b> integer.h:414</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_short_xhtml_a0d0119fea20694f1e454acc64e3aa980"><div class="ttname"><a href="../../d9/d6f/class_instructions_1_1_integer_1_1_to_short.xhtml#a0d0119fea20694f1e454acc64e3aa980">Instructions::Integer::ToShort::ToShort</a></div><div class="ttdeci">ToShort()</div><div class="ttdef"><b>Definition:</b> integer.h:129</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a55c30927abc50004d9d3026a2621fc5b"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a55c30927abc50004d9d3026a2621fc5b">Instructions::Opcodes::kIASTORE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:107</div></div>
<div class="ttc" id="aclass_memory_areas_1_1_thread_xhtml"><div class="ttname"><a href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a></div><div class="ttdef"><b>Definition:</b> thread.h:9</div></div>
<div class="ttc" id="aclass_instructions_1_1_integer_1_1_to_short_xhtml_a42169f39595aaf552db8390657a0f32c"><div class="ttname"><a href="../../d9/d6f/class_instructions_1_1_integer_1_1_to_short.xhtml#a42169f39595aaf552db8390657a0f32c">Instructions::Integer::ToShort::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div><div class="ttdoc">Convert int to short.</div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 2 2019 14:03:36 for JVM 8 SB 2019/2 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.16
</small></address>
</body>
</html>
