<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.16"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>JVM 8 SB 2019/2: include/instructions/instruction_set/reference.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">JVM 8 SB 2019/2
   </div>
   <div id="projectbrief">projeto que visa fazer uma implementação simples da JVM 8</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.16 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_2843b2c750ff6b39dcfe98bf2554dba0.xhtml">instructions</a></li><li class="navelem"><a class="el" href="../../dir_7ef69e660d75507825e3f78a695283fd.xhtml">instruction_set</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">reference.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d1/d70/reference_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_REFERENCE_H_</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_REFERENCE_H_</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/d5a/base_8h.xhtml">instructions/instruction_set/base.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/de6/opcodes_8h.xhtml">instructions/opcodes.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/d66/string_8h.xhtml">utils/string.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../da/d11/namespace_instructions.xhtml">Instructions</a> {</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d0/d61/namespace_instructions_1_1_reference.xhtml">   12</a></span>&#160;<span class="keyword">namespace </span>Reference {</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">   13</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml#a4317bcd287c14e3c750b452a02db234e">   15</a></span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml#a4317bcd287c14e3c750b452a02db234e">BaseReference</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a> &amp;tag) : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(tag) {}</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml#a9e555bb2116a144ab9ce842e84bba400">   17</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml#a9e555bb2116a144ab9ce842e84bba400">toBytecode</a>(</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  }</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml#abcc09e3d4faac14e7c162687cec4df09">   25</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml#abcc09e3d4faac14e7c162687cec4df09">toBytecode_json</a>(</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;};</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../d0/d8d/class_instructions_1_1_reference_1_1_load_from_array.xhtml">   32</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/d8d/class_instructions_1_1_reference_1_1_load_from_array.xhtml">LoadFromArray</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../d0/d8d/class_instructions_1_1_reference_1_1_load_from_array.xhtml#ab5744aba6463ea895ee20c9a79fd5d11">   34</a></span>&#160;  <a class="code" href="../../d0/d8d/class_instructions_1_1_reference_1_1_load_from_array.xhtml#ab5744aba6463ea895ee20c9a79fd5d11">LoadFromArray</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a4be9a40a445f8a55679fc5ce6c9e61a2">kAALOAD</a>) {}</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d0/d8d/class_instructions_1_1_reference_1_1_load_from_array.xhtml#af7011a9bb14861920a7428780356163a">execute</a>(</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;};</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="../../dd/d2d/class_instructions_1_1_reference_1_1_store_into_array.xhtml">   42</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/d2d/class_instructions_1_1_reference_1_1_store_into_array.xhtml">StoreIntoArray</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="../../dd/d2d/class_instructions_1_1_reference_1_1_store_into_array.xhtml#a94a2018a72378485fa7d033fcdb1afad">   44</a></span>&#160;  <a class="code" href="../../dd/d2d/class_instructions_1_1_reference_1_1_store_into_array.xhtml#a94a2018a72378485fa7d033fcdb1afad">StoreIntoArray</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a04cb3e172babf5084c6f90825ebd5be4">kAASTORE</a>) {}</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dd/d2d/class_instructions_1_1_reference_1_1_store_into_array.xhtml#a9a073bd56b8a038a65f31bc5b0c9fcf8">execute</a>(</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;};</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="../../d8/db9/class_instructions_1_1_reference_1_1_const_null.xhtml">   52</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/db9/class_instructions_1_1_reference_1_1_const_null.xhtml">ConstNull</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="../../d8/db9/class_instructions_1_1_reference_1_1_const_null.xhtml#a274357adda607c3df1d758e3b73efc9c">   54</a></span>&#160;  <a class="code" href="../../d8/db9/class_instructions_1_1_reference_1_1_const_null.xhtml#a274357adda607c3df1d758e3b73efc9c">ConstNull</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae5c73756443ffc6de01b880dc479c2c8">kACONST_NULL</a>) {}</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d8/db9/class_instructions_1_1_reference_1_1_const_null.xhtml#ad97c50c8d68e15da6bb7f587d1d1fb6e">execute</a>(</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;};</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml">   62</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml">Load</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml#ad2b8568a52063360e18f886c1f495a6b">   64</a></span>&#160;  <a class="code" href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml#ad2b8568a52063360e18f886c1f495a6b">Load</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37abae5389806c96e4e967c448c36bea35b">kALOAD</a>) {}</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml#aa69cb3a6a0c20bcc137ee7eade72b6cf">   66</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml#aa69cb3a6a0c20bcc137ee7eade72b6cf">toBytecode</a>(</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      (*ss) &lt;&lt; index;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      (*ss) &lt;&lt; <span class="keywordtype">int</span>{index};</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      *delta_code = 1;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    (*ss) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml#a411ab6c6e6caec1045ac81610dbeff7f">   84</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml#a411ab6c6e6caec1045ac81610dbeff7f">toBytecode_json</a>(</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(index)};</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">auto</span> index = *++*code_it;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    *delta_code = 1;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(+index)};</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml#a4ac7076e9714cae1de66c95a56c9aa69">execute</a>(</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;};</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="../../d0/d1a/class_instructions_1_1_reference_1_1_load__0.xhtml">  103</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/d1a/class_instructions_1_1_reference_1_1_load__0.xhtml">Load_0</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="../../d0/d1a/class_instructions_1_1_reference_1_1_load__0.xhtml#a0e5a8626bcf0050562470b349500c8da">  105</a></span>&#160;  <a class="code" href="../../d0/d1a/class_instructions_1_1_reference_1_1_load__0.xhtml#a0e5a8626bcf0050562470b349500c8da">Load_0</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a52b10ff93bd18b9f4f16bd91ba45ec12">kALOAD_0</a>) {}</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d0/d1a/class_instructions_1_1_reference_1_1_load__0.xhtml#a6697755578d8a3d4b05dc7bbd51d1796">execute</a>(</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;};</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="../../d7/d9a/class_instructions_1_1_reference_1_1_load__1.xhtml">  113</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/d9a/class_instructions_1_1_reference_1_1_load__1.xhtml">Load_1</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="../../d7/d9a/class_instructions_1_1_reference_1_1_load__1.xhtml#a053015fa488f003b70721921bb80f751">  115</a></span>&#160;  <a class="code" href="../../d7/d9a/class_instructions_1_1_reference_1_1_load__1.xhtml#a053015fa488f003b70721921bb80f751">Load_1</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af2bc269b0611bd90f9e750461d761083">kALOAD_1</a>) {}</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d7/d9a/class_instructions_1_1_reference_1_1_load__1.xhtml#ab7a4ee53de580b59fe7cf34d33c57831">execute</a>(</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;};</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="../../d9/dec/class_instructions_1_1_reference_1_1_load__2.xhtml">  123</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/dec/class_instructions_1_1_reference_1_1_load__2.xhtml">Load_2</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="../../d9/dec/class_instructions_1_1_reference_1_1_load__2.xhtml#a235bafd8830c1df73bb70f78d192d793">  125</a></span>&#160;  <a class="code" href="../../d9/dec/class_instructions_1_1_reference_1_1_load__2.xhtml#a235bafd8830c1df73bb70f78d192d793">Load_2</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a52ea8a3fa13d26bdcbf8e29ebcdd6f01">kALOAD_2</a>) {}</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d9/dec/class_instructions_1_1_reference_1_1_load__2.xhtml#af290127fdd5d5807259331ee2f0d5452">execute</a>(</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;};</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="../../da/dca/class_instructions_1_1_reference_1_1_load__3.xhtml">  133</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/dca/class_instructions_1_1_reference_1_1_load__3.xhtml">Load_3</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="../../da/dca/class_instructions_1_1_reference_1_1_load__3.xhtml#a8d55a2290835f3dfbf2715d118487de9">  135</a></span>&#160;  <a class="code" href="../../da/dca/class_instructions_1_1_reference_1_1_load__3.xhtml#a8d55a2290835f3dfbf2715d118487de9">Load_3</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae8ab3f91f04880a8a65f11bb688e356c">kALOAD_3</a>) {}</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../da/dca/class_instructions_1_1_reference_1_1_load__3.xhtml#a989cca7fe828e25b2f5b266c62491ae6">execute</a>(</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;};</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml">  143</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml">NewArray</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml#a34143e69001406b7311a524a4e7413bb">  145</a></span>&#160;  <a class="code" href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml#a34143e69001406b7311a524a4e7413bb">NewArray</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae77fd0cdb12fafe31b745628fed53dd5">kANEWARRAY</a>) {}</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml#a0267d18a1ae0d6f29302a543840a7c42">  147</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml#a0267d18a1ae0d6f29302a543840a7c42">toBytecode</a>(</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keyword">auto</span> kpool_index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot; #&quot;</span> &lt;&lt; kpool_index &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    *delta_code = 2;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">return</span> {kpool_index};</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml#a9697f50669157532ee840b5d1602cae9">  157</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml#a9697f50669157532ee840b5d1602cae9">toBytecode_json</a>(</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    *ret = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    *delta_code = 2;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml#a5a8c8e244d073ab012c28e80a39c445d">execute</a>(</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;};</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../dd/d8a/class_instructions_1_1_reference_1_1_return.xhtml">  171</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/d8a/class_instructions_1_1_reference_1_1_return.xhtml">Return</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="../../dd/d8a/class_instructions_1_1_reference_1_1_return.xhtml#a7f4faf73438ec2ee1346126b62a4eff8">  173</a></span>&#160;  <a class="code" href="../../dd/d8a/class_instructions_1_1_reference_1_1_return.xhtml#a7f4faf73438ec2ee1346126b62a4eff8">Return</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a93cdf168999f94e6f7dc712055b9c67c">kARETURN</a>) {}</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dd/d8a/class_instructions_1_1_reference_1_1_return.xhtml#adb53ab8142c9c66f161e3c23e6d72b61">execute</a>(</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;};</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="../../db/d94/class_instructions_1_1_reference_1_1_array_length.xhtml">  181</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/d94/class_instructions_1_1_reference_1_1_array_length.xhtml">ArrayLength</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="../../db/d94/class_instructions_1_1_reference_1_1_array_length.xhtml#a38c6c0e378459f06e07030a5302cafc3">  183</a></span>&#160;  <a class="code" href="../../db/d94/class_instructions_1_1_reference_1_1_array_length.xhtml#a38c6c0e378459f06e07030a5302cafc3">ArrayLength</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a11dd976019e92db634a252e8f3b4a891">kARRAYLENGTH</a>) {}</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../db/d94/class_instructions_1_1_reference_1_1_array_length.xhtml#ad8d27e90a1e8607b5ab4d8928a47cfa0">execute</a>(</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;};</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml">  191</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml">Store</a> : <span class="keyword">public</span> <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a> {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml#a99629d4c69f2d3b95fe3fa580343830c">  193</a></span>&#160;  <a class="code" href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml#a99629d4c69f2d3b95fe3fa580343830c">Store</a>() : <a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instruction</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aec7278fb225aa619f0a9890a1e4a73ae">kASTORE</a>) {}</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml#ac250eec3c7c7f1dde7202b47ab2157ca">  195</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;int&gt; <a class="code" href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml#ac250eec3c7c7f1dde7202b47ab2157ca">toBytecode</a>(</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      std::stringstream *ss, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc,</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta_tab)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    (*ss) &lt;&lt; <a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Opcodes::getMnemonic</a>(this-&gt;<a class="code" href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">opcode</a>) &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      (*ss) &lt;&lt; index;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      (*ss) &lt;&lt; <span class="keywordtype">int</span>{index};</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      *delta_code = 1;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    }</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    (*ss) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml#ad0759947fe116ba37b0193c8377c6068">  213</a></span>&#160;  <span class="keyword">inline</span> std::vector&lt;std::string&gt; <a class="code" href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml#ad0759947fe116ba37b0193c8377c6068">toBytecode_json</a>(</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_it, <span class="keywordtype">int</span> *delta_code,</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      <span class="keywordtype">int</span> *ret, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide, <span class="keywordtype">int</span> *pc)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">if</span> (wide) {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      int16_t index = (*++*code_it &lt;&lt; 8) | *++*code_it;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      *delta_code = 2;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(index)};</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index = *++*code_it;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    *delta_code = 1;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a>(<span class="keywordtype">int</span>{index})};</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  }</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml#a6d09471f30fba972c2a068cdd85062ae">execute</a>(</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;};</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno"><a class="line" href="../../de/d59/class_instructions_1_1_reference_1_1_store__0.xhtml">  232</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../de/d59/class_instructions_1_1_reference_1_1_store__0.xhtml">Store_0</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="../../de/d59/class_instructions_1_1_reference_1_1_store__0.xhtml#abbecd41fb694bf81892a4fdee2e95b25">  234</a></span>&#160;  <a class="code" href="../../de/d59/class_instructions_1_1_reference_1_1_store__0.xhtml#abbecd41fb694bf81892a4fdee2e95b25">Store_0</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37adaecf7495cf0516e79bda86a98baf569">kASTORE_0</a>) {}</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../de/d59/class_instructions_1_1_reference_1_1_store__0.xhtml#a29a808c5f29256b9d58c4515cf5f1dfe">execute</a>(</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;};</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="../../d8/d80/class_instructions_1_1_reference_1_1_store__1.xhtml">  242</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/d80/class_instructions_1_1_reference_1_1_store__1.xhtml">Store_1</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="../../d8/d80/class_instructions_1_1_reference_1_1_store__1.xhtml#ac4aa086560cd80bccccf91b74ddb71d7">  244</a></span>&#160;  <a class="code" href="../../d8/d80/class_instructions_1_1_reference_1_1_store__1.xhtml#ac4aa086560cd80bccccf91b74ddb71d7">Store_1</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a84eb02f546524fcf01b4f6ee34a6d2c8">kASTORE_1</a>) {}</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../d8/d80/class_instructions_1_1_reference_1_1_store__1.xhtml#aa695659333ccc293ae6f76d152141fc6">execute</a>(</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;};</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; </div>
<div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="../../dd/d3f/class_instructions_1_1_reference_1_1_store__2.xhtml">  252</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/d3f/class_instructions_1_1_reference_1_1_store__2.xhtml">Store_2</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="../../dd/d3f/class_instructions_1_1_reference_1_1_store__2.xhtml#a11483b3c654e45416e47a7e70cc63c54">  254</a></span>&#160;  <a class="code" href="../../dd/d3f/class_instructions_1_1_reference_1_1_store__2.xhtml#a11483b3c654e45416e47a7e70cc63c54">Store_2</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a4c7475ab7796f63b070be169426a21f4">kASTORE_2</a>) {}</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../dd/d3f/class_instructions_1_1_reference_1_1_store__2.xhtml#af2dfb369e9fda1026152aa93f84b58ee">execute</a>(</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;};</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="../../df/dc5/class_instructions_1_1_reference_1_1_store__3.xhtml">  262</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../df/dc5/class_instructions_1_1_reference_1_1_store__3.xhtml">Store_3</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="../../df/dc5/class_instructions_1_1_reference_1_1_store__3.xhtml#a4ae48c98c135ad087c9d1622c08be783">  264</a></span>&#160;  <a class="code" href="../../df/dc5/class_instructions_1_1_reference_1_1_store__3.xhtml#a4ae48c98c135ad087c9d1622c08be783">Store_3</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a181ea45dad33b29dde23f7f626a47866">kASTORE_3</a>) {}</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../df/dc5/class_instructions_1_1_reference_1_1_store__3.xhtml#aba8cf565c156158732f3437299e0faea">execute</a>(</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;};</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160; </div>
<div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="../../da/df3/class_instructions_1_1_reference_1_1_throw.xhtml">  272</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/df3/class_instructions_1_1_reference_1_1_throw.xhtml">Throw</a> : <span class="keyword">public</span> <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a> {</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00274"></a><span class="lineno"><a class="line" href="../../da/df3/class_instructions_1_1_reference_1_1_throw.xhtml#a24adeefe9f834346b78495f65871b7e2">  274</a></span>&#160;  <a class="code" href="../../da/df3/class_instructions_1_1_reference_1_1_throw.xhtml#a24adeefe9f834346b78495f65871b7e2">Throw</a>() : <a class="code" href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">BaseReference</a>(Opcodes::<a class="code" href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8d38599975c14c13c0d7696c7dc2a08f">kATHROW</a>) {}</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;  std::vector&lt;int&gt; <a class="code" href="../../da/df3/class_instructions_1_1_reference_1_1_throw.xhtml#a31eea837f56a657b14effe217860a614">execute</a>(</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;      std::vector&lt;Utils::Types::u1&gt;::iterator *code_iterator,</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      <a class="code" href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a> *th, <span class="keywordtype">int</span> *delta_code, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;wide,</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;      <span class="keywordtype">int</span> *pc = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;};</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;}  <span class="comment">// namespace Reference</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;}  <span class="comment">// namespace Instructions</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160; </div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="preprocessor">#endif  // INCLUDE_INSTRUCTIONS_INSTRUCTION_SET_REFERENCE_H_</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37aec7278fb225aa619f0a9890a1e4a73ae"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37aec7278fb225aa619f0a9890a1e4a73ae">Instructions::Opcodes::kASTORE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:22</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store__0_xhtml_a29a808c5f29256b9d58c4515cf5f1dfe"><div class="ttname"><a href="../../de/d59/class_instructions_1_1_reference_1_1_store__0.xhtml#a29a808c5f29256b9d58c4515cf5f1dfe">Instructions::Reference::Store_0::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a11dd976019e92db634a252e8f3b4a891"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a11dd976019e92db634a252e8f3b4a891">Instructions::Opcodes::kARRAYLENGTH</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:21</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_const_null_xhtml_a274357adda607c3df1d758e3b73efc9c"><div class="ttname"><a href="../../d8/db9/class_instructions_1_1_reference_1_1_const_null.xhtml#a274357adda607c3df1d758e3b73efc9c">Instructions::Reference::ConstNull::ConstNull</a></div><div class="ttdeci">ConstNull()</div><div class="ttdef"><b>Definition:</b> reference.h:54</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a181ea45dad33b29dde23f7f626a47866"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a181ea45dad33b29dde23f7f626a47866">Instructions::Opcodes::kASTORE_3</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:26</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store__3_xhtml_a4ae48c98c135ad087c9d1622c08be783"><div class="ttname"><a href="../../df/dc5/class_instructions_1_1_reference_1_1_store__3.xhtml#a4ae48c98c135ad087c9d1622c08be783">Instructions::Reference::Store_3::Store_3</a></div><div class="ttdeci">Store_3()</div><div class="ttdef"><b>Definition:</b> reference.h:264</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store__2_xhtml_af2dfb369e9fda1026152aa93f84b58ee"><div class="ttname"><a href="../../dd/d3f/class_instructions_1_1_reference_1_1_store__2.xhtml#af2dfb369e9fda1026152aa93f84b58ee">Instructions::Reference::Store_2::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_const_null_xhtml"><div class="ttname"><a href="../../d8/db9/class_instructions_1_1_reference_1_1_const_null.xhtml">Instructions::Reference::ConstNull</a></div><div class="ttdef"><b>Definition:</b> reference.h:52</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_array_length_xhtml_ad8d27e90a1e8607b5ab4d8928a47cfa0"><div class="ttname"><a href="../../db/d94/class_instructions_1_1_reference_1_1_array_length.xhtml#ad8d27e90a1e8607b5ab4d8928a47cfa0">Instructions::Reference::ArrayLength::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_array_length_xhtml_a38c6c0e378459f06e07030a5302cafc3"><div class="ttname"><a href="../../db/d94/class_instructions_1_1_reference_1_1_array_length.xhtml#a38c6c0e378459f06e07030a5302cafc3">Instructions::Reference::ArrayLength::ArrayLength</a></div><div class="ttdeci">ArrayLength()</div><div class="ttdef"><b>Definition:</b> reference.h:183</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_throw_xhtml_a24adeefe9f834346b78495f65871b7e2"><div class="ttname"><a href="../../da/df3/class_instructions_1_1_reference_1_1_throw.xhtml#a24adeefe9f834346b78495f65871b7e2">Instructions::Reference::Throw::Throw</a></div><div class="ttdeci">Throw()</div><div class="ttdef"><b>Definition:</b> reference.h:274</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml">Instructions::Instruction</a></div><div class="ttdef"><b>Definition:</b> base.h:15</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store_into_array_xhtml_a9a073bd56b8a038a65f31bc5b0c9fcf8"><div class="ttname"><a href="../../dd/d2d/class_instructions_1_1_reference_1_1_store_into_array.xhtml#a9a073bd56b8a038a65f31bc5b0c9fcf8">Instructions::Reference::StoreIntoArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load__0_xhtml"><div class="ttname"><a href="../../d0/d1a/class_instructions_1_1_reference_1_1_load__0.xhtml">Instructions::Reference::Load_0</a></div><div class="ttdef"><b>Definition:</b> reference.h:103</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load_xhtml"><div class="ttname"><a href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml">Instructions::Reference::Load</a></div><div class="ttdef"><b>Definition:</b> reference.h:62</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load__1_xhtml_a053015fa488f003b70721921bb80f751"><div class="ttname"><a href="../../d7/d9a/class_instructions_1_1_reference_1_1_load__1.xhtml#a053015fa488f003b70721921bb80f751">Instructions::Reference::Load_1::Load_1</a></div><div class="ttdeci">Load_1()</div><div class="ttdef"><b>Definition:</b> reference.h:115</div></div>
<div class="ttc" id="abase_8h_xhtml"><div class="ttname"><a href="../../d3/d5a/base_8h.xhtml">base.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_throw_xhtml"><div class="ttname"><a href="../../da/df3/class_instructions_1_1_reference_1_1_throw.xhtml">Instructions::Reference::Throw</a></div><div class="ttdef"><b>Definition:</b> reference.h:272</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load__0_xhtml_a6697755578d8a3d4b05dc7bbd51d1796"><div class="ttname"><a href="../../d0/d1a/class_instructions_1_1_reference_1_1_load__0.xhtml#a6697755578d8a3d4b05dc7bbd51d1796">Instructions::Reference::Load_0::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a4c7475ab7796f63b070be169426a21f4"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a4c7475ab7796f63b070be169426a21f4">Instructions::Opcodes::kASTORE_2</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:25</div></div>
<div class="ttc" id="astring_8h_xhtml"><div class="ttname"><a href="../../da/d66/string_8h.xhtml">string.h</a></div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a52ea8a3fa13d26bdcbf8e29ebcdd6f01"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a52ea8a3fa13d26bdcbf8e29ebcdd6f01">Instructions::Opcodes::kALOAD_2</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:17</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load__1_xhtml"><div class="ttname"><a href="../../d7/d9a/class_instructions_1_1_reference_1_1_load__1.xhtml">Instructions::Reference::Load_1</a></div><div class="ttdef"><b>Definition:</b> reference.h:113</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_new_array_xhtml_a9697f50669157532ee840b5d1602cae9"><div class="ttname"><a href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml#a9697f50669157532ee840b5d1602cae9">Instructions::Reference::NewArray::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> reference.h:157</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_ab765ddcb61c4d60f2647154d87f97ae2"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#ab765ddcb61c4d60f2647154d87f97ae2">Instructions::Opcodes::getMnemonic</a></div><div class="ttdeci">std::string getMnemonic(const Utils::Types::u1 &amp;opcode)</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_new_array_xhtml"><div class="ttname"><a href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml">Instructions::Reference::NewArray</a></div><div class="ttdef"><b>Definition:</b> reference.h:143</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store__1_xhtml"><div class="ttname"><a href="../../d8/d80/class_instructions_1_1_reference_1_1_store__1.xhtml">Instructions::Reference::Store_1</a></div><div class="ttdef"><b>Definition:</b> reference.h:242</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_new_array_xhtml_a0267d18a1ae0d6f29302a543840a7c42"><div class="ttname"><a href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml#a0267d18a1ae0d6f29302a543840a7c42">Instructions::Reference::NewArray::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> reference.h:147</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store_xhtml_ac250eec3c7c7f1dde7202b47ab2157ca"><div class="ttname"><a href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml#ac250eec3c7c7f1dde7202b47ab2157ca">Instructions::Reference::Store::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> reference.h:195</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store_xhtml_a99629d4c69f2d3b95fe3fa580343830c"><div class="ttname"><a href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml#a99629d4c69f2d3b95fe3fa580343830c">Instructions::Reference::Store::Store</a></div><div class="ttdeci">Store()</div><div class="ttdef"><b>Definition:</b> reference.h:193</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load__0_xhtml_a0e5a8626bcf0050562470b349500c8da"><div class="ttname"><a href="../../d0/d1a/class_instructions_1_1_reference_1_1_load__0.xhtml#a0e5a8626bcf0050562470b349500c8da">Instructions::Reference::Load_0::Load_0</a></div><div class="ttdeci">Load_0()</div><div class="ttdef"><b>Definition:</b> reference.h:105</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load__1_xhtml_ab7a4ee53de580b59fe7cf34d33c57831"><div class="ttname"><a href="../../d7/d9a/class_instructions_1_1_reference_1_1_load__1.xhtml#ab7a4ee53de580b59fe7cf34d33c57831">Instructions::Reference::Load_1::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load_xhtml_ad2b8568a52063360e18f886c1f495a6b"><div class="ttname"><a href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml#ad2b8568a52063360e18f886c1f495a6b">Instructions::Reference::Load::Load</a></div><div class="ttdeci">Load()</div><div class="ttdef"><b>Definition:</b> reference.h:64</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_const_null_xhtml_ad97c50c8d68e15da6bb7f587d1d1fb6e"><div class="ttname"><a href="../../d8/db9/class_instructions_1_1_reference_1_1_const_null.xhtml#ad97c50c8d68e15da6bb7f587d1d1fb6e">Instructions::Reference::ConstNull::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_new_array_xhtml_a5a8c8e244d073ab012c28e80a39c445d"><div class="ttname"><a href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml#a5a8c8e244d073ab012c28e80a39c445d">Instructions::Reference::NewArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_base_reference_xhtml_a9e555bb2116a144ab9ce842e84bba400"><div class="ttname"><a href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml#a9e555bb2116a144ab9ce842e84bba400">Instructions::Reference::BaseReference::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> reference.h:17</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store__3_xhtml"><div class="ttname"><a href="../../df/dc5/class_instructions_1_1_reference_1_1_store__3.xhtml">Instructions::Reference::Store_3</a></div><div class="ttdef"><b>Definition:</b> reference.h:262</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ae77fd0cdb12fafe31b745628fed53dd5"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae77fd0cdb12fafe31b745628fed53dd5">Instructions::Opcodes::kANEWARRAY</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:19</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store__0_xhtml"><div class="ttname"><a href="../../de/d59/class_instructions_1_1_reference_1_1_store__0.xhtml">Instructions::Reference::Store_0</a></div><div class="ttdef"><b>Definition:</b> reference.h:232</div></div>
<div class="ttc" id="aclass_instructions_1_1_instruction_xhtml_abce4218201520f9ca8880bda8ab78e40"><div class="ttname"><a href="../../d4/da8/class_instructions_1_1_instruction.xhtml#abce4218201520f9ca8880bda8ab78e40">Instructions::Instruction::opcode</a></div><div class="ttdeci">const Utils::Types::u1 opcode</div><div class="ttdef"><b>Definition:</b> base.h:35</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a04cb3e172babf5084c6f90825ebd5be4"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a04cb3e172babf5084c6f90825ebd5be4">Instructions::Opcodes::kAASTORE</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:12</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load_xhtml_a411ab6c6e6caec1045ac81610dbeff7f"><div class="ttname"><a href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml#a411ab6c6e6caec1045ac81610dbeff7f">Instructions::Reference::Load::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> reference.h:84</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ae8ab3f91f04880a8a65f11bb688e356c"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae8ab3f91f04880a8a65f11bb688e356c">Instructions::Opcodes::kALOAD_3</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:18</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_return_xhtml_a7f4faf73438ec2ee1346126b62a4eff8"><div class="ttname"><a href="../../dd/d8a/class_instructions_1_1_reference_1_1_return.xhtml#a7f4faf73438ec2ee1346126b62a4eff8">Instructions::Reference::Return::Return</a></div><div class="ttdeci">Return()</div><div class="ttdef"><b>Definition:</b> reference.h:173</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store_xhtml"><div class="ttname"><a href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml">Instructions::Reference::Store</a></div><div class="ttdef"><b>Definition:</b> reference.h:191</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a8d38599975c14c13c0d7696c7dc2a08f"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a8d38599975c14c13c0d7696c7dc2a08f">Instructions::Opcodes::kATHROW</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:27</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load__3_xhtml_a8d55a2290835f3dfbf2715d118487de9"><div class="ttname"><a href="../../da/dca/class_instructions_1_1_reference_1_1_load__3.xhtml#a8d55a2290835f3dfbf2715d118487de9">Instructions::Reference::Load_3::Load_3</a></div><div class="ttdeci">Load_3()</div><div class="ttdef"><b>Definition:</b> reference.h:135</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a4be9a40a445f8a55679fc5ce6c9e61a2"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a4be9a40a445f8a55679fc5ce6c9e61a2">Instructions::Opcodes::kAALOAD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:11</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store__2_xhtml"><div class="ttname"><a href="../../dd/d3f/class_instructions_1_1_reference_1_1_store__2.xhtml">Instructions::Reference::Store_2</a></div><div class="ttdef"><b>Definition:</b> reference.h:252</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store__3_xhtml_aba8cf565c156158732f3437299e0faea"><div class="ttname"><a href="../../df/dc5/class_instructions_1_1_reference_1_1_store__3.xhtml#aba8cf565c156158732f3437299e0faea">Instructions::Reference::Store_3::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37af2bc269b0611bd90f9e750461d761083"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37af2bc269b0611bd90f9e750461d761083">Instructions::Opcodes::kALOAD_1</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:16</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_new_array_xhtml_a34143e69001406b7311a524a4e7413bb"><div class="ttname"><a href="../../db/df9/class_instructions_1_1_reference_1_1_new_array.xhtml#a34143e69001406b7311a524a4e7413bb">Instructions::Reference::NewArray::NewArray</a></div><div class="ttdeci">NewArray()</div><div class="ttdef"><b>Definition:</b> reference.h:145</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_throw_xhtml_a31eea837f56a657b14effe217860a614"><div class="ttname"><a href="../../da/df3/class_instructions_1_1_reference_1_1_throw.xhtml#a31eea837f56a657b14effe217860a614">Instructions::Reference::Throw::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load__3_xhtml_a989cca7fe828e25b2f5b266c62491ae6"><div class="ttname"><a href="../../da/dca/class_instructions_1_1_reference_1_1_load__3.xhtml#a989cca7fe828e25b2f5b266c62491ae6">Instructions::Reference::Load_3::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store__1_xhtml_aa695659333ccc293ae6f76d152141fc6"><div class="ttname"><a href="../../d8/d80/class_instructions_1_1_reference_1_1_store__1.xhtml#aa695659333ccc293ae6f76d152141fc6">Instructions::Reference::Store_1::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37ae5c73756443ffc6de01b880dc479c2c8"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37ae5c73756443ffc6de01b880dc479c2c8">Instructions::Opcodes::kACONST_NULL</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:13</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_base_reference_xhtml"><div class="ttname"><a href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml">Instructions::Reference::BaseReference</a></div><div class="ttdef"><b>Definition:</b> reference.h:13</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store_into_array_xhtml_a94a2018a72378485fa7d033fcdb1afad"><div class="ttname"><a href="../../dd/d2d/class_instructions_1_1_reference_1_1_store_into_array.xhtml#a94a2018a72378485fa7d033fcdb1afad">Instructions::Reference::StoreIntoArray::StoreIntoArray</a></div><div class="ttdeci">StoreIntoArray()</div><div class="ttdef"><b>Definition:</b> reference.h:44</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a52b10ff93bd18b9f4f16bd91ba45ec12"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a52b10ff93bd18b9f4f16bd91ba45ec12">Instructions::Opcodes::kALOAD_0</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:15</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_array_length_xhtml"><div class="ttname"><a href="../../db/d94/class_instructions_1_1_reference_1_1_array_length.xhtml">Instructions::Reference::ArrayLength</a></div><div class="ttdef"><b>Definition:</b> reference.h:181</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store_into_array_xhtml"><div class="ttname"><a href="../../dd/d2d/class_instructions_1_1_reference_1_1_store_into_array.xhtml">Instructions::Reference::StoreIntoArray</a></div><div class="ttdef"><b>Definition:</b> reference.h:42</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_return_xhtml_adb53ab8142c9c66f161e3c23e6d72b61"><div class="ttname"><a href="../../dd/d8a/class_instructions_1_1_reference_1_1_return.xhtml#adb53ab8142c9c66f161e3c23e6d72b61">Instructions::Reference::Return::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aopcodes_8h_xhtml"><div class="ttname"><a href="../../d3/de6/opcodes_8h.xhtml">opcodes.h</a></div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load_xhtml_a4ac7076e9714cae1de66c95a56c9aa69"><div class="ttname"><a href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml#a4ac7076e9714cae1de66c95a56c9aa69">Instructions::Reference::Load::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load__2_xhtml_af290127fdd5d5807259331ee2f0d5452"><div class="ttname"><a href="../../d9/dec/class_instructions_1_1_reference_1_1_load__2.xhtml#af290127fdd5d5807259331ee2f0d5452">Instructions::Reference::Load_2::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="anamespace_instructions_xhtml"><div class="ttname"><a href="../../da/d11/namespace_instructions.xhtml">Instructions</a></div><div class="ttdef"><b>Definition:</b> execution_engine.h:12</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load__2_xhtml_a235bafd8830c1df73bb70f78d192d793"><div class="ttname"><a href="../../d9/dec/class_instructions_1_1_reference_1_1_load__2.xhtml#a235bafd8830c1df73bb70f78d192d793">Instructions::Reference::Load_2::Load_2</a></div><div class="ttdeci">Load_2()</div><div class="ttdef"><b>Definition:</b> reference.h:125</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store__0_xhtml_abbecd41fb694bf81892a4fdee2e95b25"><div class="ttname"><a href="../../de/d59/class_instructions_1_1_reference_1_1_store__0.xhtml#abbecd41fb694bf81892a4fdee2e95b25">Instructions::Reference::Store_0::Store_0</a></div><div class="ttdeci">Store_0()</div><div class="ttdef"><b>Definition:</b> reference.h:234</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37abae5389806c96e4e967c448c36bea35b"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37abae5389806c96e4e967c448c36bea35b">Instructions::Opcodes::kALOAD</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:14</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37adaecf7495cf0516e79bda86a98baf569"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37adaecf7495cf0516e79bda86a98baf569">Instructions::Opcodes::kASTORE_0</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:23</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load__3_xhtml"><div class="ttname"><a href="../../da/dca/class_instructions_1_1_reference_1_1_load__3.xhtml">Instructions::Reference::Load_3</a></div><div class="ttdef"><b>Definition:</b> reference.h:133</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load_from_array_xhtml"><div class="ttname"><a href="../../d0/d8d/class_instructions_1_1_reference_1_1_load_from_array.xhtml">Instructions::Reference::LoadFromArray</a></div><div class="ttdef"><b>Definition:</b> reference.h:32</div></div>
<div class="ttc" id="anamespace_utils_1_1_types_xhtml_a987afa1d65d5f43c5e379d4cdafacd44"><div class="ttname"><a href="../../d0/d94/namespace_utils_1_1_types.xhtml#a987afa1d65d5f43c5e379d4cdafacd44">Utils::Types::u1</a></div><div class="ttdeci">std::uint8_t u1</div><div class="ttdef"><b>Definition:</b> types.h:8</div></div>
<div class="ttc" id="anamespace_utils_1_1_string_xhtml_aec9a3efb3bd837c1f21fec1ceba1eec9"><div class="ttname"><a href="../../d4/da9/namespace_utils_1_1_string.xhtml#aec9a3efb3bd837c1f21fec1ceba1eec9">Utils::String::toString</a></div><div class="ttdeci">std::string toString(const T &amp;num)</div><div class="ttdef"><b>Definition:</b> string.h:21</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load_xhtml_aa69cb3a6a0c20bcc137ee7eade72b6cf"><div class="ttname"><a href="../../db/d43/class_instructions_1_1_reference_1_1_load.xhtml#aa69cb3a6a0c20bcc137ee7eade72b6cf">Instructions::Reference::Load::toBytecode</a></div><div class="ttdeci">std::vector&lt; int &gt; toBytecode(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, std::stringstream *ss, const bool &amp;wide, int *pc, const int &amp;delta_tab) override</div><div class="ttdef"><b>Definition:</b> reference.h:66</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load__2_xhtml"><div class="ttname"><a href="../../d9/dec/class_instructions_1_1_reference_1_1_load__2.xhtml">Instructions::Reference::Load_2</a></div><div class="ttdef"><b>Definition:</b> reference.h:123</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store__1_xhtml_ac4aa086560cd80bccccf91b74ddb71d7"><div class="ttname"><a href="../../d8/d80/class_instructions_1_1_reference_1_1_store__1.xhtml#ac4aa086560cd80bccccf91b74ddb71d7">Instructions::Reference::Store_1::Store_1</a></div><div class="ttdeci">Store_1()</div><div class="ttdef"><b>Definition:</b> reference.h:244</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_base_reference_xhtml_abcc09e3d4faac14e7c162687cec4df09"><div class="ttname"><a href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml#abcc09e3d4faac14e7c162687cec4df09">Instructions::Reference::BaseReference::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> reference.h:25</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store_xhtml_a6d09471f30fba972c2a068cdd85062ae"><div class="ttname"><a href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml#a6d09471f30fba972c2a068cdd85062ae">Instructions::Reference::Store::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_base_reference_xhtml_a4317bcd287c14e3c750b452a02db234e"><div class="ttname"><a href="../../db/dde/class_instructions_1_1_reference_1_1_base_reference.xhtml#a4317bcd287c14e3c750b452a02db234e">Instructions::Reference::BaseReference::BaseReference</a></div><div class="ttdeci">BaseReference(const Utils::Types::u1 &amp;tag)</div><div class="ttdef"><b>Definition:</b> reference.h:15</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_return_xhtml"><div class="ttname"><a href="../../dd/d8a/class_instructions_1_1_reference_1_1_return.xhtml">Instructions::Reference::Return</a></div><div class="ttdef"><b>Definition:</b> reference.h:171</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a93cdf168999f94e6f7dc712055b9c67c"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a93cdf168999f94e6f7dc712055b9c67c">Instructions::Opcodes::kARETURN</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:20</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store_xhtml_ad0759947fe116ba37b0193c8377c6068"><div class="ttname"><a href="../../df/d9b/class_instructions_1_1_reference_1_1_store.xhtml#ad0759947fe116ba37b0193c8377c6068">Instructions::Reference::Store::toBytecode_json</a></div><div class="ttdeci">std::vector&lt; std::string &gt; toBytecode_json(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_it, int *delta_code, int *ret, const bool &amp;wide, int *pc) override</div><div class="ttdef"><b>Definition:</b> reference.h:213</div></div>
<div class="ttc" id="anamespace_instructions_1_1_opcodes_xhtml_a607beca4b045010261c680c1a1cd3c37a84eb02f546524fcf01b4f6ee34a6d2c8"><div class="ttname"><a href="../../dd/d06/namespace_instructions_1_1_opcodes.xhtml#a607beca4b045010261c680c1a1cd3c37a84eb02f546524fcf01b4f6ee34a6d2c8">Instructions::Opcodes::kASTORE_1</a></div><div class="ttdef"><b>Definition:</b> opcodes.h:24</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_store__2_xhtml_a11483b3c654e45416e47a7e70cc63c54"><div class="ttname"><a href="../../dd/d3f/class_instructions_1_1_reference_1_1_store__2.xhtml#a11483b3c654e45416e47a7e70cc63c54">Instructions::Reference::Store_2::Store_2</a></div><div class="ttdeci">Store_2()</div><div class="ttdef"><b>Definition:</b> reference.h:254</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load_from_array_xhtml_ab5744aba6463ea895ee20c9a79fd5d11"><div class="ttname"><a href="../../d0/d8d/class_instructions_1_1_reference_1_1_load_from_array.xhtml#ab5744aba6463ea895ee20c9a79fd5d11">Instructions::Reference::LoadFromArray::LoadFromArray</a></div><div class="ttdeci">LoadFromArray()</div><div class="ttdef"><b>Definition:</b> reference.h:34</div></div>
<div class="ttc" id="aclass_memory_areas_1_1_thread_xhtml"><div class="ttname"><a href="../../d5/da2/class_memory_areas_1_1_thread.xhtml">MemoryAreas::Thread</a></div><div class="ttdef"><b>Definition:</b> thread.h:11</div></div>
<div class="ttc" id="aclass_instructions_1_1_reference_1_1_load_from_array_xhtml_af7011a9bb14861920a7428780356163a"><div class="ttname"><a href="../../d0/d8d/class_instructions_1_1_reference_1_1_load_from_array.xhtml#af7011a9bb14861920a7428780356163a">Instructions::Reference::LoadFromArray::execute</a></div><div class="ttdeci">std::vector&lt; int &gt; execute(std::vector&lt; Utils::Types::u1 &gt;::iterator *code_iterator, MemoryAreas::Thread *th, int *delta_code, const bool &amp;wide, int *pc=nullptr) override</div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Nov 21 2019 16:45:45 for JVM 8 SB 2019/2 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.16
</small></address>
</body>
</html>
